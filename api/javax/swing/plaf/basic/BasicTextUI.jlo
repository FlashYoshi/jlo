package javax.swing.plaf.basic;
public abstract class BasicTextUI extends javax.swing.plaf.TextUI implements javax.swing.text.ViewFactory {
   public  BasicTextUI(){}
  public native javax.swing.text.View create(javax.swing.text.Element a_r_g_u_m_e_n_t_0) ;
  public native javax.swing.text.View create(javax.swing.text.Element a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2) ;
  public native void update(java.awt.Graphics a_r_g_u_m_e_n_t_0, javax.swing.JComponent a_r_g_u_m_e_n_t_1) ;
  protected final native javax.swing.text.JTextComponent getComponent() ;
  public final native void paint(java.awt.Graphics a_r_g_u_m_e_n_t_0, javax.swing.JComponent a_r_g_u_m_e_n_t_1) ;
  public native java.awt.Dimension getPreferredSize(javax.swing.JComponent a_r_g_u_m_e_n_t_0) ;
  public native java.awt.Dimension getMaximumSize(javax.swing.JComponent a_r_g_u_m_e_n_t_0) ;
  public native java.awt.Dimension getMinimumSize(javax.swing.JComponent a_r_g_u_m_e_n_t_0) ;
  native javax.swing.InputMap getInputMap() ;
  native javax.swing.ActionMap getActionMap() ;
  public native java.lang.String getToolTipText(javax.swing.text.JTextComponent a_r_g_u_m_e_n_t_0, java.awt.Point a_r_g_u_m_e_n_t_1) ;
  native javax.swing.TransferHandler getTransferHandler() ;
  public native void uninstallUI(javax.swing.JComponent a_r_g_u_m_e_n_t_0) ;
  public native void installUI(javax.swing.JComponent a_r_g_u_m_e_n_t_0) ;
  protected native void propertyChange(java.beans.PropertyChangeEvent a_r_g_u_m_e_n_t_0) ;
  public native int viewToModel(javax.swing.text.JTextComponent a_r_g_u_m_e_n_t_0, java.awt.Point a_r_g_u_m_e_n_t_1, javax.swing.text.Position.Bias[] a_r_g_u_m_e_n_t_2) ;
  public native int viewToModel(javax.swing.text.JTextComponent a_r_g_u_m_e_n_t_0, java.awt.Point a_r_g_u_m_e_n_t_1) ;
  public native java.awt.Rectangle modelToView(javax.swing.text.JTextComponent a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, javax.swing.text.Position.Bias a_r_g_u_m_e_n_t_2)  throws javax.swing.text.BadLocationException;
  public native java.awt.Rectangle modelToView(javax.swing.text.JTextComponent a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1)  throws javax.swing.text.BadLocationException;
  public native int getNextVisualPositionFrom(javax.swing.text.JTextComponent a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, javax.swing.text.Position.Bias a_r_g_u_m_e_n_t_2, int a_r_g_u_m_e_n_t_3, javax.swing.text.Position.Bias[] a_r_g_u_m_e_n_t_4)  throws javax.swing.text.BadLocationException;
  protected native void installKeyboardActions() ;
  protected native void uninstallKeyboardActions() ;
  protected abstract java.lang.String getPropertyPrefix() ;
  protected native void installDefaults() ;
  protected native void installListeners() ;
  protected native void uninstallListeners() ;
  protected native void uninstallDefaults() ;
  protected native void paintBackground(java.awt.Graphics a_r_g_u_m_e_n_t_0) ;
  public native javax.swing.text.EditorKit getEditorKit(javax.swing.text.JTextComponent a_r_g_u_m_e_n_t_0) ;
  protected final native void setView(javax.swing.text.View a_r_g_u_m_e_n_t_0) ;
  native void updateFocusTraversalKeys() ;
  protected native void modelChanged() ;
  protected native javax.swing.text.Caret createCaret() ;
  protected native javax.swing.text.Highlighter createHighlighter() ;
  protected native java.lang.String getKeymapName() ;
  protected native javax.swing.text.Keymap createKeymap() ;
  native void updateFocusAcceleratorBinding(boolean a_r_g_u_m_e_n_t_0) ;
  native javax.swing.ActionMap createActionMap() ;
  protected native void paintSafely(java.awt.Graphics a_r_g_u_m_e_n_t_0) ;
  protected native java.awt.Rectangle getVisibleEditorRect() ;
  public native void damageRange(javax.swing.text.JTextComponent a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2, javax.swing.text.Position.Bias a_r_g_u_m_e_n_t_3, javax.swing.text.Position.Bias a_r_g_u_m_e_n_t_4) ;
  public native void damageRange(javax.swing.text.JTextComponent a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2) ;
  public native javax.swing.text.View getRootView(javax.swing.text.JTextComponent a_r_g_u_m_e_n_t_0) ;
  transient javax.swing.text.JTextComponent editor;
  transient boolean painted;
  transient javax.swing.plaf.basic.BasicTextUI.RootView rootView;
  transient javax.swing.plaf.basic.BasicTextUI.UpdateHandler updateHandler;
  static class TextTransferHandler extends javax.swing.TransferHandler implements javax.swing.plaf.UIResource {
      TextTransferHandler(){}
    public native boolean importData(javax.swing.TransferHandler.TransferSupport a_r_g_u_m_e_n_t_0) ;
    public native boolean importData(javax.swing.JComponent a_r_g_u_m_e_n_t_0, java.awt.datatransfer.Transferable a_r_g_u_m_e_n_t_1) ;
    public native boolean canImport(javax.swing.JComponent a_r_g_u_m_e_n_t_0, java.awt.datatransfer.DataFlavor[] a_r_g_u_m_e_n_t_1) ;
    public native int getSourceActions(javax.swing.JComponent a_r_g_u_m_e_n_t_0) ;
    protected native java.awt.datatransfer.Transferable createTransferable(javax.swing.JComponent a_r_g_u_m_e_n_t_0) ;
    protected native void exportDone(javax.swing.JComponent a_r_g_u_m_e_n_t_0, java.awt.datatransfer.Transferable a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2) ;
    protected native java.awt.datatransfer.DataFlavor getImportFlavor(java.awt.datatransfer.DataFlavor[] a_r_g_u_m_e_n_t_0, javax.swing.text.JTextComponent a_r_g_u_m_e_n_t_1) ;
    protected native void handleReaderImport(java.io.Reader a_r_g_u_m_e_n_t_0, javax.swing.text.JTextComponent a_r_g_u_m_e_n_t_1, boolean a_r_g_u_m_e_n_t_2)  throws javax.swing.text.BadLocationException, java.io.IOException;
    static class TextTransferable extends javax.swing.plaf.basic.BasicTransferable {
        TextTransferable(javax.swing.text.JTextComponent a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2){}
      native void removeText() ;
      protected native java.awt.datatransfer.DataFlavor[] getRicherFlavors() ;
      protected native java.lang.Object getRicherData(java.awt.datatransfer.DataFlavor a_r_g_u_m_e_n_t_0)  throws java.awt.datatransfer.UnsupportedFlavorException;
      javax.swing.text.Position p0;
      javax.swing.text.Position p1;
      java.lang.String mimeType;
      java.lang.String richText;
      javax.swing.text.JTextComponent c;
    }
  }
  static class DragListener extends javax.swing.event.MouseInputAdapter {
      DragListener(){}
    public native void mousePressed(java.awt.event.MouseEvent a_r_g_u_m_e_n_t_0) ;
    public native void mouseReleased(java.awt.event.MouseEvent a_r_g_u_m_e_n_t_0) ;
    public native void mouseDragged(java.awt.event.MouseEvent a_r_g_u_m_e_n_t_0) ;
    public native void dragStarting(java.awt.event.MouseEvent a_r_g_u_m_e_n_t_0) ;
    protected native boolean isDragPossible(java.awt.event.MouseEvent a_r_g_u_m_e_n_t_0) ;
  }
  class FocusAction extends javax.swing.AbstractAction {
      FocusAction(javax.swing.plaf.basic.BasicTextUI a_r_g_u_m_e_n_t_0){}
    public native boolean isEnabled() ;
    public native void actionPerformed(java.awt.event.ActionEvent a_r_g_u_m_e_n_t_0) ;
    final javax.swing.plaf.basic.BasicTextUI this$0;
  }
  class TextActionWrapper extends javax.swing.text.TextAction {
     public  TextActionWrapper(javax.swing.plaf.basic.BasicTextUI a_r_g_u_m_e_n_t_0, javax.swing.text.TextAction a_r_g_u_m_e_n_t_1){}
    public native boolean isEnabled() ;
    public native void actionPerformed(java.awt.event.ActionEvent a_r_g_u_m_e_n_t_0) ;
    javax.swing.text.TextAction action;
    final javax.swing.plaf.basic.BasicTextUI this$0;
  }
  class UpdateHandler extends java.lang.Object implements java.beans.PropertyChangeListener, javax.swing.event.DocumentListener, java.awt.LayoutManager2, javax.swing.plaf.UIResource {
      UpdateHandler(javax.swing.plaf.basic.BasicTextUI a_r_g_u_m_e_n_t_0){}
    public native void removeLayoutComponent(java.awt.Component a_r_g_u_m_e_n_t_0) ;
    public native void addLayoutComponent(java.lang.String a_r_g_u_m_e_n_t_0, java.awt.Component a_r_g_u_m_e_n_t_1) ;
    public native void addLayoutComponent(java.awt.Component a_r_g_u_m_e_n_t_0, java.lang.Object a_r_g_u_m_e_n_t_1) ;
    public native void layoutContainer(java.awt.Container a_r_g_u_m_e_n_t_0) ;
    public native void invalidateLayout(java.awt.Container a_r_g_u_m_e_n_t_0) ;
    public native java.awt.Dimension preferredLayoutSize(java.awt.Container a_r_g_u_m_e_n_t_0) ;
    public native java.awt.Dimension minimumLayoutSize(java.awt.Container a_r_g_u_m_e_n_t_0) ;
    public native java.awt.Dimension maximumLayoutSize(java.awt.Container a_r_g_u_m_e_n_t_0) ;
    public native float getLayoutAlignmentX(java.awt.Container a_r_g_u_m_e_n_t_0) ;
    public native float getLayoutAlignmentY(java.awt.Container a_r_g_u_m_e_n_t_0) ;
    public final native void propertyChange(java.beans.PropertyChangeEvent a_r_g_u_m_e_n_t_0) ;
    public final native void insertUpdate(javax.swing.event.DocumentEvent a_r_g_u_m_e_n_t_0) ;
    public final native void removeUpdate(javax.swing.event.DocumentEvent a_r_g_u_m_e_n_t_0) ;
    public final native void changedUpdate(javax.swing.event.DocumentEvent a_r_g_u_m_e_n_t_0) ;
    native java.awt.Shape calculateViewPosition(java.awt.Shape a_r_g_u_m_e_n_t_0, javax.swing.text.View a_r_g_u_m_e_n_t_1) ;
    final javax.swing.plaf.basic.BasicTextUI this$0;
  }
  class RootView extends javax.swing.text.View {
      RootView(javax.swing.plaf.basic.BasicTextUI a_r_g_u_m_e_n_t_0){}
    public native void setSize(float a_r_g_u_m_e_n_t_0, float a_r_g_u_m_e_n_t_1) ;
    public native void setParent(javax.swing.text.View a_r_g_u_m_e_n_t_0) ;
    public native javax.swing.text.AttributeSet getAttributes() ;
    public native javax.swing.text.Element getElement() ;
    public native void paint(java.awt.Graphics a_r_g_u_m_e_n_t_0, java.awt.Shape a_r_g_u_m_e_n_t_1) ;
    public native java.awt.Container getContainer() ;
    public native int viewToModel(float a_r_g_u_m_e_n_t_0, float a_r_g_u_m_e_n_t_1, java.awt.Shape a_r_g_u_m_e_n_t_2, javax.swing.text.Position.Bias[] a_r_g_u_m_e_n_t_3) ;
    public native java.awt.Shape modelToView(int a_r_g_u_m_e_n_t_0, javax.swing.text.Position.Bias a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2, javax.swing.text.Position.Bias a_r_g_u_m_e_n_t_3, java.awt.Shape a_r_g_u_m_e_n_t_4)  throws javax.swing.text.BadLocationException;
    public native java.awt.Shape modelToView(int a_r_g_u_m_e_n_t_0, java.awt.Shape a_r_g_u_m_e_n_t_1, javax.swing.text.Position.Bias a_r_g_u_m_e_n_t_2)  throws javax.swing.text.BadLocationException;
    public native javax.swing.text.Document getDocument() ;
    public native void insertUpdate(javax.swing.event.DocumentEvent a_r_g_u_m_e_n_t_0, java.awt.Shape a_r_g_u_m_e_n_t_1, javax.swing.text.ViewFactory a_r_g_u_m_e_n_t_2) ;
    public native void removeUpdate(javax.swing.event.DocumentEvent a_r_g_u_m_e_n_t_0, java.awt.Shape a_r_g_u_m_e_n_t_1, javax.swing.text.ViewFactory a_r_g_u_m_e_n_t_2) ;
    public native void changedUpdate(javax.swing.event.DocumentEvent a_r_g_u_m_e_n_t_0, java.awt.Shape a_r_g_u_m_e_n_t_1, javax.swing.text.ViewFactory a_r_g_u_m_e_n_t_2) ;
    public native int getEndOffset() ;
    public native int getStartOffset() ;
    public native void preferenceChanged(javax.swing.text.View a_r_g_u_m_e_n_t_0, boolean a_r_g_u_m_e_n_t_1, boolean a_r_g_u_m_e_n_t_2) ;
    public native float getPreferredSpan(int a_r_g_u_m_e_n_t_0) ;
    public native float getMinimumSpan(int a_r_g_u_m_e_n_t_0) ;
    public native float getMaximumSpan(int a_r_g_u_m_e_n_t_0) ;
    public native int getViewCount() ;
    public native javax.swing.text.View getView(int a_r_g_u_m_e_n_t_0) ;
    public native java.awt.Shape getChildAllocation(int a_r_g_u_m_e_n_t_0, java.awt.Shape a_r_g_u_m_e_n_t_1) ;
    public native int getViewIndex(int a_r_g_u_m_e_n_t_0, javax.swing.text.Position.Bias a_r_g_u_m_e_n_t_1) ;
    public native int getNextVisualPositionFrom(int a_r_g_u_m_e_n_t_0, javax.swing.text.Position.Bias a_r_g_u_m_e_n_t_1, java.awt.Shape a_r_g_u_m_e_n_t_2, int a_r_g_u_m_e_n_t_3, javax.swing.text.Position.Bias[] a_r_g_u_m_e_n_t_4)  throws javax.swing.text.BadLocationException;
    public native javax.swing.text.ViewFactory getViewFactory() ;
    public native float getAlignment(int a_r_g_u_m_e_n_t_0) ;
    public native javax.swing.text.View breakView(int a_r_g_u_m_e_n_t_0, float a_r_g_u_m_e_n_t_1, java.awt.Shape a_r_g_u_m_e_n_t_2) ;
    public native int getResizeWeight(int a_r_g_u_m_e_n_t_0) ;
    native void setView(javax.swing.text.View a_r_g_u_m_e_n_t_0) ;
    final javax.swing.plaf.basic.BasicTextUI this$0;
  }
  static class BasicCursor extends java.awt.Cursor implements javax.swing.plaf.UIResource {
      BasicCursor(int a_r_g_u_m_e_n_t_0){}
      BasicCursor(java.lang.String a_r_g_u_m_e_n_t_0){}
  }
  public static class BasicHighlighter extends javax.swing.text.DefaultHighlighter implements javax.swing.plaf.UIResource {
     public  BasicHighlighter(){}
  }
  public static class BasicCaret extends javax.swing.text.DefaultCaret implements javax.swing.plaf.UIResource {
     public  BasicCaret(){}
  }
}