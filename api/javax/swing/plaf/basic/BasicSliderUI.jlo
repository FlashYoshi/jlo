package javax.swing.plaf.basic;
public class BasicSliderUI extends javax.swing.plaf.SliderUI {
   public  BasicSliderUI(javax.swing.JSlider a_r_g_u_m_e_n_t_0){}
  public native void paint(java.awt.Graphics a_r_g_u_m_e_n_t_0, javax.swing.JComponent a_r_g_u_m_e_n_t_1) ;
  public native java.awt.Dimension getPreferredSize(javax.swing.JComponent a_r_g_u_m_e_n_t_0) ;
  public native java.awt.Dimension getMaximumSize(javax.swing.JComponent a_r_g_u_m_e_n_t_0) ;
  public native java.awt.Dimension getMinimumSize(javax.swing.JComponent a_r_g_u_m_e_n_t_0) ;
  native javax.swing.InputMap getInputMap(int a_r_g_u_m_e_n_t_0, javax.swing.JSlider a_r_g_u_m_e_n_t_1) ;
  public native int getBaseline(javax.swing.JComponent a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2) ;
  public native java.awt.Component.BaselineResizeBehavior getBaselineResizeBehavior(javax.swing.JComponent a_r_g_u_m_e_n_t_0) ;
  public native void uninstallUI(javax.swing.JComponent a_r_g_u_m_e_n_t_0) ;
  public native void installUI(javax.swing.JComponent a_r_g_u_m_e_n_t_0) ;
  public native void paintFocus(java.awt.Graphics a_r_g_u_m_e_n_t_0) ;
  protected native javax.swing.event.ChangeListener createChangeListener(javax.swing.JSlider a_r_g_u_m_e_n_t_0) ;
  public static native javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent a_r_g_u_m_e_n_t_0) ;
  static native void loadActionMap(javax.swing.plaf.basic.LazyActionMap a_r_g_u_m_e_n_t_0) ;
  protected native void installKeyboardActions(javax.swing.JSlider a_r_g_u_m_e_n_t_0) ;
  protected native void uninstallKeyboardActions(javax.swing.JSlider a_r_g_u_m_e_n_t_0) ;
  protected native void installDefaults(javax.swing.JSlider a_r_g_u_m_e_n_t_0) ;
  protected native void installListeners(javax.swing.JSlider a_r_g_u_m_e_n_t_0) ;
  protected native void uninstallListeners(javax.swing.JSlider a_r_g_u_m_e_n_t_0) ;
  protected native java.beans.PropertyChangeListener createPropertyChangeListener(javax.swing.JSlider a_r_g_u_m_e_n_t_0) ;
  protected native java.awt.event.FocusListener createFocusListener(javax.swing.JSlider a_r_g_u_m_e_n_t_0) ;
  protected native boolean isDragging() ;
  protected native java.awt.Color getHighlightColor() ;
  protected native java.awt.Color getShadowColor() ;
  protected native java.awt.event.ComponentListener createComponentListener(javax.swing.JSlider a_r_g_u_m_e_n_t_0) ;
  protected native javax.swing.plaf.basic.BasicSliderUI.TrackListener createTrackListener(javax.swing.JSlider a_r_g_u_m_e_n_t_0) ;
  protected native javax.swing.plaf.basic.BasicSliderUI.ScrollListener createScrollListener(javax.swing.JSlider a_r_g_u_m_e_n_t_0) ;
  public native void paintTrack(java.awt.Graphics a_r_g_u_m_e_n_t_0) ;
  public native void paintThumb(java.awt.Graphics a_r_g_u_m_e_n_t_0) ;
  public native void scrollByBlock(int a_r_g_u_m_e_n_t_0) ;
  public native void scrollByUnit(int a_r_g_u_m_e_n_t_0) ;
  protected native java.awt.Color getFocusColor() ;
  protected native boolean labelsHaveSameBaselines() ;
  public native java.awt.Dimension getPreferredHorizontalSize() ;
  public native java.awt.Dimension getPreferredVerticalSize() ;
  public native java.awt.Dimension getMinimumHorizontalSize() ;
  public native java.awt.Dimension getMinimumVerticalSize() ;
  protected native void calculateGeometry() ;
  protected native void calculateFocusRect() ;
  protected native void calculateThumbSize() ;
  protected native void calculateContentRect() ;
  protected native void calculateThumbLocation() ;
  protected native void calculateTrackBuffer() ;
  protected native void calculateTrackRect() ;
  protected native int getTickLength() ;
  protected native void calculateTickRect() ;
  protected native void calculateLabelRect() ;
  protected native java.awt.Dimension getThumbSize() ;
  protected native int getWidthOfWidestLabel() ;
  protected native int getHeightOfTallestLabel() ;
  protected native int getWidthOfHighValueLabel() ;
  protected native int getWidthOfLowValueLabel() ;
  protected native int getHeightOfHighValueLabel() ;
  protected native int getHeightOfLowValueLabel() ;
  protected native boolean drawInverted() ;
  protected native java.lang.Integer getHighestValue() ;
  protected native java.lang.Integer getLowestValue() ;
  protected native java.awt.Component getLowestValueLabel() ;
  protected native java.awt.Component getHighestValueLabel() ;
  protected native void recalculateIfInsetsChanged() ;
  protected native void recalculateIfOrientationChanged() ;
  public native void paintTicks(java.awt.Graphics a_r_g_u_m_e_n_t_0) ;
  protected native void paintMinorTickForHorizSlider(java.awt.Graphics a_r_g_u_m_e_n_t_0, java.awt.Rectangle a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2) ;
  protected native void paintMajorTickForHorizSlider(java.awt.Graphics a_r_g_u_m_e_n_t_0, java.awt.Rectangle a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2) ;
  protected native void paintMinorTickForVertSlider(java.awt.Graphics a_r_g_u_m_e_n_t_0, java.awt.Rectangle a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2) ;
  protected native void paintMajorTickForVertSlider(java.awt.Graphics a_r_g_u_m_e_n_t_0, java.awt.Rectangle a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2) ;
  public native void paintLabels(java.awt.Graphics a_r_g_u_m_e_n_t_0) ;
  protected native void paintHorizontalLabel(java.awt.Graphics a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, java.awt.Component a_r_g_u_m_e_n_t_2) ;
  protected native void paintVerticalLabel(java.awt.Graphics a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, java.awt.Component a_r_g_u_m_e_n_t_2) ;
  public native void setThumbLocation(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1) ;
  protected native void scrollDueToClickInTrack(int a_r_g_u_m_e_n_t_0) ;
  protected native int xPositionForValue(int a_r_g_u_m_e_n_t_0) ;
  protected native int yPositionForValue(int a_r_g_u_m_e_n_t_0) ;
  protected native int yPositionForValue(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2) ;
  public native int valueForYPosition(int a_r_g_u_m_e_n_t_0) ;
  public native int valueForXPosition(int a_r_g_u_m_e_n_t_0) ;
  public static final int POSITIVE_SCROLL;
  public static final int NEGATIVE_SCROLL;
  public static final int MIN_SCROLL;
  public static final int MAX_SCROLL;
  protected javax.swing.Timer scrollTimer;
  protected javax.swing.JSlider slider;
  protected java.awt.Insets focusInsets;
  protected java.awt.Insets insetCache;
  protected boolean leftToRightCache;
  protected java.awt.Rectangle focusRect;
  protected java.awt.Rectangle contentRect;
  protected java.awt.Rectangle labelRect;
  protected java.awt.Rectangle tickRect;
  protected java.awt.Rectangle trackRect;
  protected java.awt.Rectangle thumbRect;
  protected int trackBuffer;
  protected javax.swing.plaf.basic.BasicSliderUI.TrackListener trackListener;
  protected javax.swing.event.ChangeListener changeListener;
  protected java.awt.event.ComponentListener componentListener;
  protected java.awt.event.FocusListener focusListener;
  protected javax.swing.plaf.basic.BasicSliderUI.ScrollListener scrollListener;
  protected java.beans.PropertyChangeListener propertyChangeListener;
  private static class Actions extends sun.swing.UIAction {
      Actions(){}
     public  Actions(java.lang.String a_r_g_u_m_e_n_t_0){}
    public native void actionPerformed(java.awt.event.ActionEvent a_r_g_u_m_e_n_t_0) ;
    public static final java.lang.String POSITIVE_UNIT_INCREMENT;
    public static final java.lang.String POSITIVE_BLOCK_INCREMENT;
    public static final java.lang.String NEGATIVE_UNIT_INCREMENT;
    public static final java.lang.String NEGATIVE_BLOCK_INCREMENT;
    public static final java.lang.String MIN_SCROLL_INCREMENT;
    public static final java.lang.String MAX_SCROLL_INCREMENT;
  }
  static class SharedActionScroller extends javax.swing.AbstractAction {
     public  SharedActionScroller(int a_r_g_u_m_e_n_t_0, boolean a_r_g_u_m_e_n_t_1){}
    public native void actionPerformed(java.awt.event.ActionEvent a_r_g_u_m_e_n_t_0) ;
    int dir;
    boolean block;
  }
  public class ActionScroller extends javax.swing.AbstractAction {
     public  ActionScroller(javax.swing.plaf.basic.BasicSliderUI a_r_g_u_m_e_n_t_0, javax.swing.JSlider a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2, boolean a_r_g_u_m_e_n_t_3){}
    public native boolean isEnabled() ;
    public native void actionPerformed(java.awt.event.ActionEvent a_r_g_u_m_e_n_t_0) ;
    int dir;
    boolean block;
    javax.swing.JSlider slider;
    final javax.swing.plaf.basic.BasicSliderUI this$0;
  }
  public class FocusHandler extends java.lang.Object implements java.awt.event.FocusListener {
     public  FocusHandler(javax.swing.plaf.basic.BasicSliderUI a_r_g_u_m_e_n_t_0){}
    public native void focusGained(java.awt.event.FocusEvent a_r_g_u_m_e_n_t_0) ;
    public native void focusLost(java.awt.event.FocusEvent a_r_g_u_m_e_n_t_0) ;
    final javax.swing.plaf.basic.BasicSliderUI this$0;
  }
  public class ComponentHandler extends java.awt.event.ComponentAdapter {
     public  ComponentHandler(javax.swing.plaf.basic.BasicSliderUI a_r_g_u_m_e_n_t_0){}
    public native void componentResized(java.awt.event.ComponentEvent a_r_g_u_m_e_n_t_0) ;
    final javax.swing.plaf.basic.BasicSliderUI this$0;
  }
  public class ScrollListener extends java.lang.Object implements java.awt.event.ActionListener {
     public  ScrollListener(javax.swing.plaf.basic.BasicSliderUI a_r_g_u_m_e_n_t_0){}
     public  ScrollListener(javax.swing.plaf.basic.BasicSliderUI a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, boolean a_r_g_u_m_e_n_t_2){}
    public native void actionPerformed(java.awt.event.ActionEvent a_r_g_u_m_e_n_t_0) ;
    public native void setDirection(int a_r_g_u_m_e_n_t_0) ;
    public native void setScrollByBlock(boolean a_r_g_u_m_e_n_t_0) ;
    int direction;
    boolean useBlockIncrement;
    final javax.swing.plaf.basic.BasicSliderUI this$0;
  }
  public class TrackListener extends javax.swing.event.MouseInputAdapter {
     public  TrackListener(javax.swing.plaf.basic.BasicSliderUI a_r_g_u_m_e_n_t_0){}
    public native void mousePressed(java.awt.event.MouseEvent a_r_g_u_m_e_n_t_0) ;
    public native void mouseReleased(java.awt.event.MouseEvent a_r_g_u_m_e_n_t_0) ;
    public native void mouseMoved(java.awt.event.MouseEvent a_r_g_u_m_e_n_t_0) ;
    public native void mouseDragged(java.awt.event.MouseEvent a_r_g_u_m_e_n_t_0) ;
    public native boolean shouldScroll(int a_r_g_u_m_e_n_t_0) ;
    protected transient int offset;
    protected transient int currentMouseX;
    protected transient int currentMouseY;
    final javax.swing.plaf.basic.BasicSliderUI this$0;
  }
  public class ChangeHandler extends java.lang.Object implements javax.swing.event.ChangeListener {
     public  ChangeHandler(javax.swing.plaf.basic.BasicSliderUI a_r_g_u_m_e_n_t_0){}
    public native void stateChanged(javax.swing.event.ChangeEvent a_r_g_u_m_e_n_t_0) ;
    final javax.swing.plaf.basic.BasicSliderUI this$0;
  }
  private class Handler extends java.lang.Object implements javax.swing.event.ChangeListener, java.awt.event.ComponentListener, java.awt.event.FocusListener, java.beans.PropertyChangeListener {
    public native void componentResized(java.awt.event.ComponentEvent a_r_g_u_m_e_n_t_0) ;
    public native void componentMoved(java.awt.event.ComponentEvent a_r_g_u_m_e_n_t_0) ;
    public native void componentShown(java.awt.event.ComponentEvent a_r_g_u_m_e_n_t_0) ;
    public native void componentHidden(java.awt.event.ComponentEvent a_r_g_u_m_e_n_t_0) ;
    public native void focusGained(java.awt.event.FocusEvent a_r_g_u_m_e_n_t_0) ;
    public native void focusLost(java.awt.event.FocusEvent a_r_g_u_m_e_n_t_0) ;
    public native void propertyChange(java.beans.PropertyChangeEvent a_r_g_u_m_e_n_t_0) ;
    public native void stateChanged(javax.swing.event.ChangeEvent a_r_g_u_m_e_n_t_0) ;
    final javax.swing.plaf.basic.BasicSliderUI this$0;
  }
  public class PropertyChangeHandler extends java.lang.Object implements java.beans.PropertyChangeListener {
     public  PropertyChangeHandler(javax.swing.plaf.basic.BasicSliderUI a_r_g_u_m_e_n_t_0){}
    public native void propertyChange(java.beans.PropertyChangeEvent a_r_g_u_m_e_n_t_0) ;
    final javax.swing.plaf.basic.BasicSliderUI this$0;
  }
}