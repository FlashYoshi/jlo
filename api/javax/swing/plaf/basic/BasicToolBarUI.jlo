package javax.swing.plaf.basic;
public class BasicToolBarUI extends javax.swing.plaf.ToolBarUI implements javax.swing.SwingConstants {
   public  BasicToolBarUI(){}
  native javax.swing.InputMap getInputMap(int a_r_g_u_m_e_n_t_0) ;
  public native void uninstallUI(javax.swing.JComponent a_r_g_u_m_e_n_t_0) ;
  public native void installUI(javax.swing.JComponent a_r_g_u_m_e_n_t_0) ;
  public static native javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent a_r_g_u_m_e_n_t_0) ;
  static native void loadActionMap(javax.swing.plaf.basic.LazyActionMap a_r_g_u_m_e_n_t_0) ;
  protected native void installKeyboardActions() ;
  protected native void uninstallKeyboardActions() ;
  protected native void installDefaults() ;
  protected native void installListeners() ;
  protected native void uninstallListeners() ;
  protected native void uninstallDefaults() ;
  protected native void installComponents() ;
  protected native void uninstallComponents() ;
  public native void setOrientation(int a_r_g_u_m_e_n_t_0) ;
  protected native void navigateFocusedComp(int a_r_g_u_m_e_n_t_0) ;
  protected native javax.swing.border.Border createRolloverBorder() ;
  protected native javax.swing.border.Border createNonRolloverBorder() ;
  protected native javax.swing.JFrame createFloatingFrame(javax.swing.JToolBar a_r_g_u_m_e_n_t_0) ;
  protected native javax.swing.RootPaneContainer createFloatingWindow(javax.swing.JToolBar a_r_g_u_m_e_n_t_0) ;
  protected native javax.swing.plaf.basic.BasicToolBarUI.DragWindow createDragWindow(javax.swing.JToolBar a_r_g_u_m_e_n_t_0) ;
  public native boolean isRolloverBorders() ;
  public native void setRolloverBorders(boolean a_r_g_u_m_e_n_t_0) ;
  protected native void installRolloverBorders(javax.swing.JComponent a_r_g_u_m_e_n_t_0) ;
  protected native void installNonRolloverBorders(javax.swing.JComponent a_r_g_u_m_e_n_t_0) ;
  protected native void installNormalBorders(javax.swing.JComponent a_r_g_u_m_e_n_t_0) ;
  protected native void setBorderToRollover(java.awt.Component a_r_g_u_m_e_n_t_0) ;
  protected native javax.swing.border.Border getRolloverBorder(javax.swing.AbstractButton a_r_g_u_m_e_n_t_0) ;
  protected native void setBorderToNonRollover(java.awt.Component a_r_g_u_m_e_n_t_0) ;
  protected native javax.swing.border.Border getNonRolloverBorder(javax.swing.AbstractButton a_r_g_u_m_e_n_t_0) ;
  protected native void setBorderToNormal(java.awt.Component a_r_g_u_m_e_n_t_0) ;
  public native void setFloatingLocation(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1) ;
  public native boolean isFloating() ;
  public native void setFloating(boolean a_r_g_u_m_e_n_t_0, java.awt.Point a_r_g_u_m_e_n_t_1) ;
  public native java.awt.Color getDockingColor() ;
  public native void setDockingColor(java.awt.Color a_r_g_u_m_e_n_t_0) ;
  public native java.awt.Color getFloatingColor() ;
  public native void setFloatingColor(java.awt.Color a_r_g_u_m_e_n_t_0) ;
  public native boolean canDock(java.awt.Component a_r_g_u_m_e_n_t_0, java.awt.Point a_r_g_u_m_e_n_t_1) ;
  protected native void dragTo(java.awt.Point a_r_g_u_m_e_n_t_0, java.awt.Point a_r_g_u_m_e_n_t_1) ;
  protected native void floatAt(java.awt.Point a_r_g_u_m_e_n_t_0, java.awt.Point a_r_g_u_m_e_n_t_1) ;
  protected native java.awt.event.ContainerListener createToolBarContListener() ;
  protected native java.awt.event.FocusListener createToolBarFocusListener() ;
  protected native java.beans.PropertyChangeListener createPropertyListener() ;
  protected native javax.swing.event.MouseInputListener createDockingListener() ;
  protected native java.awt.event.WindowListener createFrameListener() ;
  protected native void paintDragWindow(java.awt.Graphics a_r_g_u_m_e_n_t_0) ;
  protected javax.swing.JToolBar toolBar;
  protected javax.swing.plaf.basic.BasicToolBarUI.DragWindow dragWindow;
  protected int focusedCompIndex;
  protected java.awt.Color dockingColor;
  protected java.awt.Color floatingColor;
  protected java.awt.Color dockingBorderColor;
  protected java.awt.Color floatingBorderColor;
  protected javax.swing.event.MouseInputListener dockingListener;
  protected java.beans.PropertyChangeListener propertyListener;
  protected java.awt.event.ContainerListener toolBarContListener;
  protected java.awt.event.FocusListener toolBarFocusListener;
  protected java.lang.String constraintBeforeFloating;
  protected javax.swing.KeyStroke upKey;
  protected javax.swing.KeyStroke downKey;
  protected javax.swing.KeyStroke leftKey;
  protected javax.swing.KeyStroke rightKey;
  protected class DragWindow extends java.awt.Window {
      DragWindow(javax.swing.plaf.basic.BasicToolBarUI a_r_g_u_m_e_n_t_0, java.awt.Window a_r_g_u_m_e_n_t_1){}
    public native java.awt.Point getOffset() ;
    public native void setOffset(java.awt.Point a_r_g_u_m_e_n_t_0) ;
    public native void paint(java.awt.Graphics a_r_g_u_m_e_n_t_0) ;
    public native java.awt.Insets getInsets() ;
    public native int getOrientation() ;
    public native void setOrientation(int a_r_g_u_m_e_n_t_0) ;
    public native void setBorderColor(java.awt.Color a_r_g_u_m_e_n_t_0) ;
    public native java.awt.Color getBorderColor() ;
    java.awt.Color borderColor;
    int orientation;
    java.awt.Point offset;
    final javax.swing.plaf.basic.BasicToolBarUI this$0;
  }
  public class DockingListener extends java.lang.Object implements javax.swing.event.MouseInputListener {
     public  DockingListener(javax.swing.plaf.basic.BasicToolBarUI a_r_g_u_m_e_n_t_0, javax.swing.JToolBar a_r_g_u_m_e_n_t_1){}
    public native void mousePressed(java.awt.event.MouseEvent a_r_g_u_m_e_n_t_0) ;
    public native void mouseReleased(java.awt.event.MouseEvent a_r_g_u_m_e_n_t_0) ;
    public native void mouseClicked(java.awt.event.MouseEvent a_r_g_u_m_e_n_t_0) ;
    public native void mouseExited(java.awt.event.MouseEvent a_r_g_u_m_e_n_t_0) ;
    public native void mouseEntered(java.awt.event.MouseEvent a_r_g_u_m_e_n_t_0) ;
    public native void mouseMoved(java.awt.event.MouseEvent a_r_g_u_m_e_n_t_0) ;
    public native void mouseDragged(java.awt.event.MouseEvent a_r_g_u_m_e_n_t_0) ;
    protected javax.swing.JToolBar toolBar;
    protected boolean isDragging;
    protected java.awt.Point origin;
    final javax.swing.plaf.basic.BasicToolBarUI this$0;
  }
  protected class PropertyListener extends java.lang.Object implements java.beans.PropertyChangeListener {
     protected  PropertyListener(javax.swing.plaf.basic.BasicToolBarUI a_r_g_u_m_e_n_t_0){}
    public native void propertyChange(java.beans.PropertyChangeEvent a_r_g_u_m_e_n_t_0) ;
    final javax.swing.plaf.basic.BasicToolBarUI this$0;
  }
  protected class ToolBarFocusListener extends java.lang.Object implements java.awt.event.FocusListener {
     protected  ToolBarFocusListener(javax.swing.plaf.basic.BasicToolBarUI a_r_g_u_m_e_n_t_0){}
    public native void focusGained(java.awt.event.FocusEvent a_r_g_u_m_e_n_t_0) ;
    public native void focusLost(java.awt.event.FocusEvent a_r_g_u_m_e_n_t_0) ;
    final javax.swing.plaf.basic.BasicToolBarUI this$0;
  }
  protected class ToolBarContListener extends java.lang.Object implements java.awt.event.ContainerListener {
     protected  ToolBarContListener(javax.swing.plaf.basic.BasicToolBarUI a_r_g_u_m_e_n_t_0){}
    public native void componentAdded(java.awt.event.ContainerEvent a_r_g_u_m_e_n_t_0) ;
    public native void componentRemoved(java.awt.event.ContainerEvent a_r_g_u_m_e_n_t_0) ;
    final javax.swing.plaf.basic.BasicToolBarUI this$0;
  }
  protected class FrameListener extends java.awt.event.WindowAdapter {
     protected  FrameListener(javax.swing.plaf.basic.BasicToolBarUI a_r_g_u_m_e_n_t_0){}
    public native void windowClosing(java.awt.event.WindowEvent a_r_g_u_m_e_n_t_0) ;
    final javax.swing.plaf.basic.BasicToolBarUI this$0;
  }
  private class Handler extends java.lang.Object implements java.awt.event.ContainerListener, java.awt.event.FocusListener, javax.swing.event.MouseInputListener, java.beans.PropertyChangeListener {
    public native void componentAdded(java.awt.event.ContainerEvent a_r_g_u_m_e_n_t_0) ;
    public native void componentRemoved(java.awt.event.ContainerEvent a_r_g_u_m_e_n_t_0) ;
    public native void focusGained(java.awt.event.FocusEvent a_r_g_u_m_e_n_t_0) ;
    public native void focusLost(java.awt.event.FocusEvent a_r_g_u_m_e_n_t_0) ;
    public native void mousePressed(java.awt.event.MouseEvent a_r_g_u_m_e_n_t_0) ;
    public native void mouseReleased(java.awt.event.MouseEvent a_r_g_u_m_e_n_t_0) ;
    public native void mouseClicked(java.awt.event.MouseEvent a_r_g_u_m_e_n_t_0) ;
    public native void mouseExited(java.awt.event.MouseEvent a_r_g_u_m_e_n_t_0) ;
    public native void mouseEntered(java.awt.event.MouseEvent a_r_g_u_m_e_n_t_0) ;
    public native void mouseMoved(java.awt.event.MouseEvent a_r_g_u_m_e_n_t_0) ;
    public native void mouseDragged(java.awt.event.MouseEvent a_r_g_u_m_e_n_t_0) ;
    public native void propertyChange(java.beans.PropertyChangeEvent a_r_g_u_m_e_n_t_0) ;
    javax.swing.JToolBar tb;
    boolean isDragging;
    java.awt.Point origin;
    final javax.swing.plaf.basic.BasicToolBarUI this$0;
  }
  private static class Actions extends sun.swing.UIAction {
     public  Actions(java.lang.String a_r_g_u_m_e_n_t_0){}
    public native void actionPerformed(java.awt.event.ActionEvent a_r_g_u_m_e_n_t_0) ;
  }
}