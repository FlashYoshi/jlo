package javax.swing;
public class JFileChooser extends javax.swing.JComponent implements javax.accessibility.Accessible {
   public  JFileChooser(){}
   public  JFileChooser(java.lang.String a_r_g_u_m_e_n_t_0){}
   public  JFileChooser(java.io.File a_r_g_u_m_e_n_t_0){}
   public  JFileChooser(javax.swing.filechooser.FileSystemView a_r_g_u_m_e_n_t_0){}
   public  JFileChooser(java.io.File a_r_g_u_m_e_n_t_0, javax.swing.filechooser.FileSystemView a_r_g_u_m_e_n_t_1){}
   public  JFileChooser(java.lang.String a_r_g_u_m_e_n_t_0, javax.swing.filechooser.FileSystemView a_r_g_u_m_e_n_t_1){}
  public native java.lang.String getName(java.io.File a_r_g_u_m_e_n_t_0) ;
  protected native void setup(javax.swing.filechooser.FileSystemView a_r_g_u_m_e_n_t_0) ;
  public native boolean accept(java.io.File a_r_g_u_m_e_n_t_0) ;
  public native void updateUI() ;
  public native java.lang.String getUIClassID() ;
  public native javax.accessibility.AccessibleContext getAccessibleContext() ;
  protected native java.lang.String paramString() ;
  public native javax.swing.Icon getIcon(java.io.File a_r_g_u_m_e_n_t_0) ;
  public native javax.swing.plaf.FileChooserUI getUI() ;
  public native void addActionListener(java.awt.event.ActionListener a_r_g_u_m_e_n_t_0) ;
  public native void removeActionListener(java.awt.event.ActionListener a_r_g_u_m_e_n_t_0) ;
  public native java.awt.event.ActionListener[] getActionListeners() ;
  protected native void fireActionPerformed(java.lang.String a_r_g_u_m_e_n_t_0) ;
  protected native javax.swing.JDialog createDialog(java.awt.Component a_r_g_u_m_e_n_t_0)  throws java.awt.HeadlessException;
  public native int showDialog(java.awt.Component a_r_g_u_m_e_n_t_0, java.lang.String a_r_g_u_m_e_n_t_1)  throws java.awt.HeadlessException;
  public native void setDragEnabled(boolean a_r_g_u_m_e_n_t_0) ;
  public native boolean getDragEnabled() ;
  public native java.lang.String getDescription(java.io.File a_r_g_u_m_e_n_t_0) ;
  public native javax.swing.filechooser.FileSystemView getFileSystemView() ;
  public native java.io.File getCurrentDirectory() ;
  public native boolean isTraversable(java.io.File a_r_g_u_m_e_n_t_0) ;
  public native java.io.File getSelectedFile() ;
  public native void setSelectedFile(java.io.File a_r_g_u_m_e_n_t_0) ;
  public native java.io.File[] getSelectedFiles() ;
  public native void setSelectedFiles(java.io.File[] a_r_g_u_m_e_n_t_0) ;
  public native void setCurrentDirectory(java.io.File a_r_g_u_m_e_n_t_0) ;
  public native void changeToParentDirectory() ;
  public native void rescanCurrentDirectory() ;
  public native void ensureFileIsVisible(java.io.File a_r_g_u_m_e_n_t_0) ;
  public native int showOpenDialog(java.awt.Component a_r_g_u_m_e_n_t_0)  throws java.awt.HeadlessException;
  public native int showSaveDialog(java.awt.Component a_r_g_u_m_e_n_t_0)  throws java.awt.HeadlessException;
  public native boolean getControlButtonsAreShown() ;
  public native void setControlButtonsAreShown(boolean a_r_g_u_m_e_n_t_0) ;
  public native int getDialogType() ;
  public native void setDialogType(int a_r_g_u_m_e_n_t_0) ;
  public native void setDialogTitle(java.lang.String a_r_g_u_m_e_n_t_0) ;
  public native java.lang.String getDialogTitle() ;
  public native void setApproveButtonToolTipText(java.lang.String a_r_g_u_m_e_n_t_0) ;
  public native java.lang.String getApproveButtonToolTipText() ;
  public native int getApproveButtonMnemonic() ;
  public native void setApproveButtonMnemonic(int a_r_g_u_m_e_n_t_0) ;
  public native void setApproveButtonMnemonic(char a_r_g_u_m_e_n_t_0) ;
  public native void setApproveButtonText(java.lang.String a_r_g_u_m_e_n_t_0) ;
  public native java.lang.String getApproveButtonText() ;
  public native javax.swing.filechooser.FileFilter[] getChoosableFileFilters() ;
  public native void addChoosableFileFilter(javax.swing.filechooser.FileFilter a_r_g_u_m_e_n_t_0) ;
  public native boolean removeChoosableFileFilter(javax.swing.filechooser.FileFilter a_r_g_u_m_e_n_t_0) ;
  public native void resetChoosableFileFilters() ;
  public native javax.swing.filechooser.FileFilter getAcceptAllFileFilter() ;
  public native boolean isAcceptAllFileFilterUsed() ;
  public native void setAcceptAllFileFilterUsed(boolean a_r_g_u_m_e_n_t_0) ;
  public native javax.swing.JComponent getAccessory() ;
  public native void setAccessory(javax.swing.JComponent a_r_g_u_m_e_n_t_0) ;
  public native void setFileSelectionMode(int a_r_g_u_m_e_n_t_0) ;
  public native int getFileSelectionMode() ;
  public native boolean isFileSelectionEnabled() ;
  public native boolean isDirectorySelectionEnabled() ;
  public native void setMultiSelectionEnabled(boolean a_r_g_u_m_e_n_t_0) ;
  public native boolean isMultiSelectionEnabled() ;
  public native boolean isFileHidingEnabled() ;
  public native void setFileHidingEnabled(boolean a_r_g_u_m_e_n_t_0) ;
  public native void setFileFilter(javax.swing.filechooser.FileFilter a_r_g_u_m_e_n_t_0) ;
  public native javax.swing.filechooser.FileFilter getFileFilter() ;
  public native void setFileView(javax.swing.filechooser.FileView a_r_g_u_m_e_n_t_0) ;
  public native javax.swing.filechooser.FileView getFileView() ;
  public native java.lang.String getTypeDescription(java.io.File a_r_g_u_m_e_n_t_0) ;
  public native void setFileSystemView(javax.swing.filechooser.FileSystemView a_r_g_u_m_e_n_t_0) ;
  public native void approveSelection() ;
  public native void cancelSelection() ;
  public static final int OPEN_DIALOG;
  public static final int SAVE_DIALOG;
  public static final int CUSTOM_DIALOG;
  public static final int CANCEL_OPTION;
  public static final int APPROVE_OPTION;
  public static final int ERROR_OPTION;
  public static final int FILES_ONLY;
  public static final int DIRECTORIES_ONLY;
  public static final int FILES_AND_DIRECTORIES;
  public static final java.lang.String CANCEL_SELECTION;
  public static final java.lang.String APPROVE_SELECTION;
  public static final java.lang.String APPROVE_BUTTON_TEXT_CHANGED_PROPERTY;
  public static final java.lang.String APPROVE_BUTTON_TOOL_TIP_TEXT_CHANGED_PROPERTY;
  public static final java.lang.String APPROVE_BUTTON_MNEMONIC_CHANGED_PROPERTY;
  public static final java.lang.String CONTROL_BUTTONS_ARE_SHOWN_CHANGED_PROPERTY;
  public static final java.lang.String DIRECTORY_CHANGED_PROPERTY;
  public static final java.lang.String SELECTED_FILE_CHANGED_PROPERTY;
  public static final java.lang.String SELECTED_FILES_CHANGED_PROPERTY;
  public static final java.lang.String MULTI_SELECTION_ENABLED_CHANGED_PROPERTY;
  public static final java.lang.String FILE_SYSTEM_VIEW_CHANGED_PROPERTY;
  public static final java.lang.String FILE_VIEW_CHANGED_PROPERTY;
  public static final java.lang.String FILE_HIDING_CHANGED_PROPERTY;
  public static final java.lang.String FILE_FILTER_CHANGED_PROPERTY;
  public static final java.lang.String FILE_SELECTION_MODE_CHANGED_PROPERTY;
  public static final java.lang.String ACCESSORY_CHANGED_PROPERTY;
  public static final java.lang.String ACCEPT_ALL_FILE_FILTER_USED_CHANGED_PROPERTY;
  public static final java.lang.String DIALOG_TITLE_CHANGED_PROPERTY;
  public static final java.lang.String DIALOG_TYPE_CHANGED_PROPERTY;
  public static final java.lang.String CHOOSABLE_FILE_FILTER_CHANGED_PROPERTY;
  protected javax.accessibility.AccessibleContext accessibleContext;
  protected class AccessibleJFileChooser extends javax.swing.JComponent.AccessibleJComponent {
     protected  AccessibleJFileChooser(javax.swing.JFileChooser a_r_g_u_m_e_n_t_0){}
    public native javax.accessibility.AccessibleRole getAccessibleRole() ;
    final javax.swing.JFileChooser this$0;
  }
  private static class WeakPCL extends java.lang.Object implements java.beans.PropertyChangeListener {
     public  WeakPCL(javax.swing.JFileChooser a_r_g_u_m_e_n_t_0){}
    public native void propertyChange(java.beans.PropertyChangeEvent a_r_g_u_m_e_n_t_0) ;
    java.lang.ref.WeakReference<javax.swing.JFileChooser> jfcRef;
    static final boolean $assertionsDisabled;
  }
}