package javax.swing.text;
public class InternationalFormatter extends javax.swing.text.DefaultFormatter {
   public  InternationalFormatter(java.text.Format a_r_g_u_m_e_n_t_0){}
   public  InternationalFormatter(){}
  public native java.lang.Object clone()  throws java.lang.CloneNotSupportedException;
  native void replace(javax.swing.text.DocumentFilter.FilterBypass a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2, java.lang.String a_r_g_u_m_e_n_t_3, javax.swing.text.AttributeSet a_r_g_u_m_e_n_t_4)  throws javax.swing.text.BadLocationException;
  native boolean replace(javax.swing.text.DefaultFormatter.ReplaceHolder a_r_g_u_m_e_n_t_0)  throws javax.swing.text.BadLocationException;
  public native java.text.Format.Field[] getFields(int a_r_g_u_m_e_n_t_0) ;
  protected native javax.swing.Action[] getActions() ;
  native java.text.AttributedCharacterIterator getIterator() ;
  public native void install(javax.swing.JFormattedTextField a_r_g_u_m_e_n_t_0) ;
  native java.util.Map getAttributes(int a_r_g_u_m_e_n_t_0) ;
  public native java.text.Format getFormat() ;
  public native void setFormat(java.text.Format a_r_g_u_m_e_n_t_0) ;
  public native void setMinimum(java.lang.Comparable a_r_g_u_m_e_n_t_0) ;
  public native java.lang.Comparable getMinimum() ;
  public native void setMaximum(java.lang.Comparable a_r_g_u_m_e_n_t_0) ;
  public native java.lang.Comparable getMaximum() ;
  native java.lang.Object stringToValue(java.lang.String a_r_g_u_m_e_n_t_0, java.text.Format a_r_g_u_m_e_n_t_1)  throws java.text.ParseException;
  public native java.lang.Object stringToValue(java.lang.String a_r_g_u_m_e_n_t_0)  throws java.text.ParseException;
  native boolean getSupportsIncrement() ;
  native java.lang.Object getAdjustField(int a_r_g_u_m_e_n_t_0, java.util.Map a_r_g_u_m_e_n_t_1) ;
  native java.lang.Object adjustValue(java.lang.Object a_r_g_u_m_e_n_t_0, java.util.Map a_r_g_u_m_e_n_t_1, java.lang.Object a_r_g_u_m_e_n_t_2, int a_r_g_u_m_e_n_t_3)  throws javax.swing.text.BadLocationException, java.text.ParseException;
  public native java.lang.String valueToString(java.lang.Object a_r_g_u_m_e_n_t_0)  throws java.text.ParseException;
  native boolean isValidValue(java.lang.Object a_r_g_u_m_e_n_t_0, boolean a_r_g_u_m_e_n_t_1) ;
  native int getAttributeStart(java.text.AttributedCharacterIterator.Attribute a_r_g_u_m_e_n_t_0) ;
  native void updateMaskIfNecessary() ;
  native void updateMask() ;
  native int getLiteralCountTo(int a_r_g_u_m_e_n_t_0) ;
  native boolean isLiteral(java.util.Map a_r_g_u_m_e_n_t_0) ;
  native boolean isLiteral(int a_r_g_u_m_e_n_t_0) ;
  native char getLiteral(int a_r_g_u_m_e_n_t_0) ;
  native boolean isNavigatable(int a_r_g_u_m_e_n_t_0) ;
  native void updateValue(java.lang.Object a_r_g_u_m_e_n_t_0) ;
  native boolean canReplace(javax.swing.text.DefaultFormatter.ReplaceHolder a_r_g_u_m_e_n_t_0) ;
  native char getBufferedChar(int a_r_g_u_m_e_n_t_0) ;
  native boolean isValidMask() ;
  native boolean canIncrement(java.lang.Object a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1) ;
  native void selectField(java.lang.Object a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1) ;
  native void resetValue(java.lang.Object a_r_g_u_m_e_n_t_0)  throws javax.swing.text.BadLocationException, java.text.ParseException;
  native javax.swing.text.DefaultFormatter.ReplaceHolder getReplaceHolder(javax.swing.text.DocumentFilter.FilterBypass a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2, java.lang.String a_r_g_u_m_e_n_t_3, javax.swing.text.AttributeSet a_r_g_u_m_e_n_t_4) ;
  private class IncrementAction extends javax.swing.AbstractAction {
      IncrementAction(javax.swing.text.InternationalFormatter a_r_g_u_m_e_n_t_0, java.lang.String a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2){}
    public native void actionPerformed(java.awt.event.ActionEvent a_r_g_u_m_e_n_t_0) ;
    final javax.swing.text.InternationalFormatter this$0;
  }
  static class ExtendedReplaceHolder extends javax.swing.text.DefaultFormatter.ReplaceHolder {
      ExtendedReplaceHolder(){}
    native void resetFromValue(javax.swing.text.InternationalFormatter a_r_g_u_m_e_n_t_0) ;
    int endOffset;
    int endTextLength;
  }
}