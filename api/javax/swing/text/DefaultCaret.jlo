package javax.swing.text;
public class DefaultCaret extends java.awt.Rectangle implements javax.swing.text.Caret, java.awt.event.FocusListener, java.awt.event.MouseListener, java.awt.event.MouseMotionListener {
   public  DefaultCaret(){}
  public native boolean equals(java.lang.Object a_r_g_u_m_e_n_t_0) ;
  public native java.lang.String toString() ;
  public native void install(javax.swing.text.JTextComponent a_r_g_u_m_e_n_t_0) ;
  protected final native javax.swing.text.JTextComponent getComponent() ;
  public native void paint(java.awt.Graphics a_r_g_u_m_e_n_t_0) ;
  public native void setVisible(boolean a_r_g_u_m_e_n_t_0) ;
  public native <T extends java.util.EventListener>T[] getListeners(java.lang.Class<T> a_r_g_u_m_e_n_t_0) ;
  protected final synchronized native void repaint() ;
  public native boolean isVisible() ;
  public native void focusGained(java.awt.event.FocusEvent a_r_g_u_m_e_n_t_0) ;
  public native void focusLost(java.awt.event.FocusEvent a_r_g_u_m_e_n_t_0) ;
  public native void mousePressed(java.awt.event.MouseEvent a_r_g_u_m_e_n_t_0) ;
  public native void mouseReleased(java.awt.event.MouseEvent a_r_g_u_m_e_n_t_0) ;
  public native void mouseClicked(java.awt.event.MouseEvent a_r_g_u_m_e_n_t_0) ;
  public native void mouseExited(java.awt.event.MouseEvent a_r_g_u_m_e_n_t_0) ;
  public native void mouseEntered(java.awt.event.MouseEvent a_r_g_u_m_e_n_t_0) ;
  public native void mouseMoved(java.awt.event.MouseEvent a_r_g_u_m_e_n_t_0) ;
  public native void mouseDragged(java.awt.event.MouseEvent a_r_g_u_m_e_n_t_0) ;
  public native void addChangeListener(javax.swing.event.ChangeListener a_r_g_u_m_e_n_t_0) ;
  public native void removeChangeListener(javax.swing.event.ChangeListener a_r_g_u_m_e_n_t_0) ;
  public native javax.swing.event.ChangeListener[] getChangeListeners() ;
  protected native void fireStateChanged() ;
  public native boolean isActive() ;
  public native java.awt.Point getMagicCaretPosition() ;
  public native void deinstall(javax.swing.text.JTextComponent a_r_g_u_m_e_n_t_0) ;
  public native void setDot(int a_r_g_u_m_e_n_t_0, javax.swing.text.Position.Bias a_r_g_u_m_e_n_t_1) ;
  public native void setDot(int a_r_g_u_m_e_n_t_0) ;
  public native void moveDot(int a_r_g_u_m_e_n_t_0, javax.swing.text.Position.Bias a_r_g_u_m_e_n_t_1) ;
  public native void moveDot(int a_r_g_u_m_e_n_t_0) ;
  public native int getMark() ;
  public native int getDot() ;
  public native javax.swing.text.Position.Bias getMarkBias() ;
  public native javax.swing.text.Position.Bias getDotBias() ;
  public native int getBlinkRate() ;
  public native void setBlinkRate(int a_r_g_u_m_e_n_t_0) ;
  public native void setMagicCaretPosition(java.awt.Point a_r_g_u_m_e_n_t_0) ;
  public native void setUpdatePolicy(int a_r_g_u_m_e_n_t_0) ;
  public native int getUpdatePolicy() ;
  protected synchronized native void damage(java.awt.Rectangle a_r_g_u_m_e_n_t_0) ;
  protected native void adjustVisibility(java.awt.Rectangle a_r_g_u_m_e_n_t_0) ;
  protected native javax.swing.text.Highlighter.HighlightPainter getSelectionPainter() ;
  protected native void positionCaret(java.awt.event.MouseEvent a_r_g_u_m_e_n_t_0) ;
  protected native void moveCaret(java.awt.event.MouseEvent a_r_g_u_m_e_n_t_0) ;
  native void adjustCaretAndFocus(java.awt.event.MouseEvent a_r_g_u_m_e_n_t_0) ;
  public native void setSelectionVisible(boolean a_r_g_u_m_e_n_t_0) ;
  public native boolean isSelectionVisible() ;
  native void handleMoveDot(int a_r_g_u_m_e_n_t_0, javax.swing.text.Position.Bias a_r_g_u_m_e_n_t_1) ;
  native void handleSetDot(int a_r_g_u_m_e_n_t_0, javax.swing.text.Position.Bias a_r_g_u_m_e_n_t_1) ;
  native boolean isDotLeftToRight() ;
  native boolean isMarkLeftToRight() ;
  native boolean isPositionLTR(int a_r_g_u_m_e_n_t_0, javax.swing.text.Position.Bias a_r_g_u_m_e_n_t_1) ;
  native javax.swing.text.Position.Bias guessBiasForOffset(int a_r_g_u_m_e_n_t_0, javax.swing.text.Position.Bias a_r_g_u_m_e_n_t_1, boolean a_r_g_u_m_e_n_t_2) ;
  native void changeCaretPosition(int a_r_g_u_m_e_n_t_0, javax.swing.text.Position.Bias a_r_g_u_m_e_n_t_1) ;
  native void repaintNewCaret() ;
  native int getCaretWidth(int a_r_g_u_m_e_n_t_0) ;
  public static final int UPDATE_WHEN_ON_EDT;
  public static final int NEVER_UPDATE;
  public static final int ALWAYS_UPDATE;
  protected javax.swing.event.EventListenerList listenerList;
  protected transient javax.swing.event.ChangeEvent changeEvent;
  javax.swing.text.JTextComponent component;
  int updatePolicy;
  boolean visible;
  boolean active;
  int dot;
  int mark;
  java.lang.Object selectionTag;
  boolean selectionVisible;
  javax.swing.Timer flasher;
  java.awt.Point magicCaretPosition;
  transient javax.swing.text.Position.Bias dotBias;
  transient javax.swing.text.Position.Bias markBias;
  boolean dotLTR;
  boolean markLTR;
  transient javax.swing.text.DefaultCaret.Handler handler;
  private class DefaultFilterBypass extends javax.swing.text.NavigationFilter.FilterBypass {
    public native javax.swing.text.Caret getCaret() ;
    public native void setDot(int a_r_g_u_m_e_n_t_0, javax.swing.text.Position.Bias a_r_g_u_m_e_n_t_1) ;
    public native void moveDot(int a_r_g_u_m_e_n_t_0, javax.swing.text.Position.Bias a_r_g_u_m_e_n_t_1) ;
    final javax.swing.text.DefaultCaret this$0;
  }
  class Handler extends java.lang.Object implements java.beans.PropertyChangeListener, javax.swing.event.DocumentListener, java.awt.event.ActionListener, java.awt.datatransfer.ClipboardOwner {
      Handler(javax.swing.text.DefaultCaret a_r_g_u_m_e_n_t_0){}
    public native void actionPerformed(java.awt.event.ActionEvent a_r_g_u_m_e_n_t_0) ;
    public native void propertyChange(java.beans.PropertyChangeEvent a_r_g_u_m_e_n_t_0) ;
    public native void insertUpdate(javax.swing.event.DocumentEvent a_r_g_u_m_e_n_t_0) ;
    public native void removeUpdate(javax.swing.event.DocumentEvent a_r_g_u_m_e_n_t_0) ;
    public native void changedUpdate(javax.swing.event.DocumentEvent a_r_g_u_m_e_n_t_0) ;
    public native void lostOwnership(java.awt.datatransfer.Clipboard a_r_g_u_m_e_n_t_0, java.awt.datatransfer.Transferable a_r_g_u_m_e_n_t_1) ;
    final javax.swing.text.DefaultCaret this$0;
  }
  class SafeScroller extends java.lang.Object implements java.lang.Runnable {
      SafeScroller(javax.swing.text.DefaultCaret a_r_g_u_m_e_n_t_0, java.awt.Rectangle a_r_g_u_m_e_n_t_1){}
    public native void run() ;
    java.awt.Rectangle r;
    final javax.swing.text.DefaultCaret this$0;
  }
}