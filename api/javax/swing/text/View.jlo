package javax.swing.text;
public abstract class View extends java.lang.Object implements javax.swing.SwingConstants {
   public  View(javax.swing.text.Element a_r_g_u_m_e_n_t_0){}
  public native void append(javax.swing.text.View a_r_g_u_m_e_n_t_0) ;
  public native void replace(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, javax.swing.text.View[] a_r_g_u_m_e_n_t_2) ;
  public native javax.swing.text.View getParent() ;
  public native void remove(int a_r_g_u_m_e_n_t_0) ;
  public native void setSize(float a_r_g_u_m_e_n_t_0, float a_r_g_u_m_e_n_t_1) ;
  public native void removeAll() ;
  public native void insert(int a_r_g_u_m_e_n_t_0, javax.swing.text.View a_r_g_u_m_e_n_t_1) ;
  public native void setParent(javax.swing.text.View a_r_g_u_m_e_n_t_0) ;
  public native javax.swing.text.AttributeSet getAttributes() ;
  public native javax.swing.text.Element getElement() ;
  public abstract void paint(java.awt.Graphics a_r_g_u_m_e_n_t_0, java.awt.Shape a_r_g_u_m_e_n_t_1) ;
  public native java.awt.Graphics getGraphics() ;
  public native java.lang.String getToolTipText(float a_r_g_u_m_e_n_t_0, float a_r_g_u_m_e_n_t_1, java.awt.Shape a_r_g_u_m_e_n_t_2) ;
  public native boolean isVisible() ;
  public native java.awt.Container getContainer() ;
  public abstract int viewToModel(float a_r_g_u_m_e_n_t_0, float a_r_g_u_m_e_n_t_1, java.awt.Shape a_r_g_u_m_e_n_t_2, javax.swing.text.Position.Bias[] a_r_g_u_m_e_n_t_3) ;
  public native int viewToModel(float a_r_g_u_m_e_n_t_0, float a_r_g_u_m_e_n_t_1, java.awt.Shape a_r_g_u_m_e_n_t_2) ;
  public abstract java.awt.Shape modelToView(int a_r_g_u_m_e_n_t_0, java.awt.Shape a_r_g_u_m_e_n_t_1, javax.swing.text.Position.Bias a_r_g_u_m_e_n_t_2)  throws javax.swing.text.BadLocationException;
  public native java.awt.Shape modelToView(int a_r_g_u_m_e_n_t_0, java.awt.Shape a_r_g_u_m_e_n_t_1)  throws javax.swing.text.BadLocationException;
  public native java.awt.Shape modelToView(int a_r_g_u_m_e_n_t_0, javax.swing.text.Position.Bias a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2, javax.swing.text.Position.Bias a_r_g_u_m_e_n_t_3, java.awt.Shape a_r_g_u_m_e_n_t_4)  throws javax.swing.text.BadLocationException;
  public native javax.swing.text.Document getDocument() ;
  public native void insertUpdate(javax.swing.event.DocumentEvent a_r_g_u_m_e_n_t_0, java.awt.Shape a_r_g_u_m_e_n_t_1, javax.swing.text.ViewFactory a_r_g_u_m_e_n_t_2) ;
  public native void removeUpdate(javax.swing.event.DocumentEvent a_r_g_u_m_e_n_t_0, java.awt.Shape a_r_g_u_m_e_n_t_1, javax.swing.text.ViewFactory a_r_g_u_m_e_n_t_2) ;
  public native void changedUpdate(javax.swing.event.DocumentEvent a_r_g_u_m_e_n_t_0, java.awt.Shape a_r_g_u_m_e_n_t_1, javax.swing.text.ViewFactory a_r_g_u_m_e_n_t_2) ;
  public native int getEndOffset() ;
  public native int getStartOffset() ;
  protected native void updateLayout(javax.swing.event.DocumentEvent.ElementChange a_r_g_u_m_e_n_t_0, javax.swing.event.DocumentEvent a_r_g_u_m_e_n_t_1, java.awt.Shape a_r_g_u_m_e_n_t_2) ;
  public native void preferenceChanged(javax.swing.text.View a_r_g_u_m_e_n_t_0, boolean a_r_g_u_m_e_n_t_1, boolean a_r_g_u_m_e_n_t_2) ;
  public abstract float getPreferredSpan(int a_r_g_u_m_e_n_t_0) ;
  public native float getMinimumSpan(int a_r_g_u_m_e_n_t_0) ;
  public native float getMaximumSpan(int a_r_g_u_m_e_n_t_0) ;
  public native int getViewCount() ;
  public native javax.swing.text.View getView(int a_r_g_u_m_e_n_t_0) ;
  public native java.awt.Shape getChildAllocation(int a_r_g_u_m_e_n_t_0, java.awt.Shape a_r_g_u_m_e_n_t_1) ;
  public native int getViewIndex(int a_r_g_u_m_e_n_t_0, javax.swing.text.Position.Bias a_r_g_u_m_e_n_t_1) ;
  public native int getViewIndex(float a_r_g_u_m_e_n_t_0, float a_r_g_u_m_e_n_t_1, java.awt.Shape a_r_g_u_m_e_n_t_2) ;
  public native int getNextVisualPositionFrom(int a_r_g_u_m_e_n_t_0, javax.swing.text.Position.Bias a_r_g_u_m_e_n_t_1, java.awt.Shape a_r_g_u_m_e_n_t_2, int a_r_g_u_m_e_n_t_3, javax.swing.text.Position.Bias[] a_r_g_u_m_e_n_t_4)  throws javax.swing.text.BadLocationException;
  public native javax.swing.text.ViewFactory getViewFactory() ;
  public native float getAlignment(int a_r_g_u_m_e_n_t_0) ;
  public native javax.swing.text.View breakView(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, float a_r_g_u_m_e_n_t_2, float a_r_g_u_m_e_n_t_3) ;
  public native javax.swing.text.View createFragment(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1) ;
  public native int getBreakWeight(int a_r_g_u_m_e_n_t_0, float a_r_g_u_m_e_n_t_1, float a_r_g_u_m_e_n_t_2) ;
  public native int getResizeWeight(int a_r_g_u_m_e_n_t_0) ;
  protected native boolean updateChildren(javax.swing.event.DocumentEvent.ElementChange a_r_g_u_m_e_n_t_0, javax.swing.event.DocumentEvent a_r_g_u_m_e_n_t_1, javax.swing.text.ViewFactory a_r_g_u_m_e_n_t_2) ;
  protected native void forwardUpdate(javax.swing.event.DocumentEvent.ElementChange a_r_g_u_m_e_n_t_0, javax.swing.event.DocumentEvent a_r_g_u_m_e_n_t_1, java.awt.Shape a_r_g_u_m_e_n_t_2, javax.swing.text.ViewFactory a_r_g_u_m_e_n_t_3) ;
  protected native void forwardUpdateToView(javax.swing.text.View a_r_g_u_m_e_n_t_0, javax.swing.event.DocumentEvent a_r_g_u_m_e_n_t_1, java.awt.Shape a_r_g_u_m_e_n_t_2, javax.swing.text.ViewFactory a_r_g_u_m_e_n_t_3) ;
  public static final int BadBreakWeight;
  public static final int GoodBreakWeight;
  public static final int ExcellentBreakWeight;
  public static final int ForcedBreakWeight;
  public static final int X_AXIS;
  public static final int Y_AXIS;
  static final javax.swing.text.Position.Bias[] sharedBiasReturn;
}