package javax.swing.text;
public class ZoneView extends javax.swing.text.BoxView {
   public  ZoneView(javax.swing.text.Element a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1){}
  native void handleRemove(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1) ;
  public native void insertUpdate(javax.swing.event.DocumentEvent a_r_g_u_m_e_n_t_0, java.awt.Shape a_r_g_u_m_e_n_t_1, javax.swing.text.ViewFactory a_r_g_u_m_e_n_t_2) ;
  public native void removeUpdate(javax.swing.event.DocumentEvent a_r_g_u_m_e_n_t_0, java.awt.Shape a_r_g_u_m_e_n_t_1, javax.swing.text.ViewFactory a_r_g_u_m_e_n_t_2) ;
  protected native void loadChildren(javax.swing.text.ViewFactory a_r_g_u_m_e_n_t_0) ;
  protected native int getViewIndexAtPosition(int a_r_g_u_m_e_n_t_0) ;
  protected native boolean updateChildren(javax.swing.event.DocumentEvent.ElementChange a_r_g_u_m_e_n_t_0, javax.swing.event.DocumentEvent a_r_g_u_m_e_n_t_1, javax.swing.text.ViewFactory a_r_g_u_m_e_n_t_2) ;
  public native int getMaximumZoneSize() ;
  public native void setMaximumZoneSize(int a_r_g_u_m_e_n_t_0) ;
  public native int getMaxZonesLoaded() ;
  public native void setMaxZonesLoaded(int a_r_g_u_m_e_n_t_0) ;
  protected native void zoneWasLoaded(javax.swing.text.View a_r_g_u_m_e_n_t_0) ;
  native void unloadOldZones() ;
  protected native void unloadZone(javax.swing.text.View a_r_g_u_m_e_n_t_0) ;
  protected native boolean isZoneLoaded(javax.swing.text.View a_r_g_u_m_e_n_t_0) ;
  protected native javax.swing.text.View createZone(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1) ;
  native void handleInsert(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1) ;
  native void splitZone(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2) ;
  native int getDesiredZoneEnd(int a_r_g_u_m_e_n_t_0) ;
  int maxZoneSize;
  int maxZonesLoaded;
  java.util.Vector loadedZones;
  class Zone extends javax.swing.text.AsyncBoxView {
     public  Zone(javax.swing.text.ZoneView a_r_g_u_m_e_n_t_0, javax.swing.text.Element a_r_g_u_m_e_n_t_1, javax.swing.text.Position a_r_g_u_m_e_n_t_2, javax.swing.text.Position a_r_g_u_m_e_n_t_3){}
    public native void load() ;
    public native void unload() ;
    public native javax.swing.text.AttributeSet getAttributes() ;
    public native boolean isLoaded() ;
    public native void paint(java.awt.Graphics a_r_g_u_m_e_n_t_0, java.awt.Shape a_r_g_u_m_e_n_t_1) ;
    public native int viewToModel(float a_r_g_u_m_e_n_t_0, float a_r_g_u_m_e_n_t_1, java.awt.Shape a_r_g_u_m_e_n_t_2, javax.swing.text.Position.Bias[] a_r_g_u_m_e_n_t_3) ;
    public native java.awt.Shape modelToView(int a_r_g_u_m_e_n_t_0, java.awt.Shape a_r_g_u_m_e_n_t_1, javax.swing.text.Position.Bias a_r_g_u_m_e_n_t_2)  throws javax.swing.text.BadLocationException;
    public native void insertUpdate(javax.swing.event.DocumentEvent a_r_g_u_m_e_n_t_0, java.awt.Shape a_r_g_u_m_e_n_t_1, javax.swing.text.ViewFactory a_r_g_u_m_e_n_t_2) ;
    public native void removeUpdate(javax.swing.event.DocumentEvent a_r_g_u_m_e_n_t_0, java.awt.Shape a_r_g_u_m_e_n_t_1, javax.swing.text.ViewFactory a_r_g_u_m_e_n_t_2) ;
    public native void changedUpdate(javax.swing.event.DocumentEvent a_r_g_u_m_e_n_t_0, java.awt.Shape a_r_g_u_m_e_n_t_1, javax.swing.text.ViewFactory a_r_g_u_m_e_n_t_2) ;
    public native int getEndOffset() ;
    public native int getStartOffset() ;
    protected native void flushRequirementChanges() ;
    protected native void loadChildren(javax.swing.text.ViewFactory a_r_g_u_m_e_n_t_0) ;
    public native int getViewIndex(int a_r_g_u_m_e_n_t_0, javax.swing.text.Position.Bias a_r_g_u_m_e_n_t_1) ;
    protected native boolean updateChildren(javax.swing.event.DocumentEvent.ElementChange a_r_g_u_m_e_n_t_0, javax.swing.event.DocumentEvent a_r_g_u_m_e_n_t_1, javax.swing.text.ViewFactory a_r_g_u_m_e_n_t_2) ;
    final javax.swing.text.ZoneView this$0;
  }
}