package javax.swing.text;
public class GlyphView extends javax.swing.text.View implements javax.swing.text.TabableView, java.lang.Cloneable {
   public  GlyphView(javax.swing.text.Element a_r_g_u_m_e_n_t_0){}
  protected final native java.lang.Object clone() ;
  public native void paint(java.awt.Graphics a_r_g_u_m_e_n_t_0, java.awt.Shape a_r_g_u_m_e_n_t_1) ;
  public native java.awt.Color getForeground() ;
  public native java.awt.Font getFont() ;
  public native java.awt.Color getBackground() ;
  public native javax.swing.text.Segment getText(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1) ;
  public native int viewToModel(float a_r_g_u_m_e_n_t_0, float a_r_g_u_m_e_n_t_1, java.awt.Shape a_r_g_u_m_e_n_t_2, javax.swing.text.Position.Bias[] a_r_g_u_m_e_n_t_3) ;
  public native java.awt.Shape modelToView(int a_r_g_u_m_e_n_t_0, java.awt.Shape a_r_g_u_m_e_n_t_1, javax.swing.text.Position.Bias a_r_g_u_m_e_n_t_2)  throws javax.swing.text.BadLocationException;
  public native void insertUpdate(javax.swing.event.DocumentEvent a_r_g_u_m_e_n_t_0, java.awt.Shape a_r_g_u_m_e_n_t_1, javax.swing.text.ViewFactory a_r_g_u_m_e_n_t_2) ;
  public native void removeUpdate(javax.swing.event.DocumentEvent a_r_g_u_m_e_n_t_0, java.awt.Shape a_r_g_u_m_e_n_t_1, javax.swing.text.ViewFactory a_r_g_u_m_e_n_t_2) ;
  public native void changedUpdate(javax.swing.event.DocumentEvent a_r_g_u_m_e_n_t_0, java.awt.Shape a_r_g_u_m_e_n_t_1, javax.swing.text.ViewFactory a_r_g_u_m_e_n_t_2) ;
  public native int getEndOffset() ;
  public native int getStartOffset() ;
  public native float getPreferredSpan(int a_r_g_u_m_e_n_t_0) ;
  public native int getNextVisualPositionFrom(int a_r_g_u_m_e_n_t_0, javax.swing.text.Position.Bias a_r_g_u_m_e_n_t_1, java.awt.Shape a_r_g_u_m_e_n_t_2, int a_r_g_u_m_e_n_t_3, javax.swing.text.Position.Bias[] a_r_g_u_m_e_n_t_4)  throws javax.swing.text.BadLocationException;
  public native float getAlignment(int a_r_g_u_m_e_n_t_0) ;
  public native javax.swing.text.View breakView(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, float a_r_g_u_m_e_n_t_2, float a_r_g_u_m_e_n_t_3) ;
  public native javax.swing.text.View createFragment(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1) ;
  public native int getBreakWeight(int a_r_g_u_m_e_n_t_0, float a_r_g_u_m_e_n_t_1, float a_r_g_u_m_e_n_t_2) ;
  public native boolean isUnderline() ;
  public native boolean isStrikeThrough() ;
  public native boolean isSuperscript() ;
  public native boolean isSubscript() ;
  public native float getPartialSpan(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1) ;
  public native float getTabbedSpan(float a_r_g_u_m_e_n_t_0, javax.swing.text.TabExpander a_r_g_u_m_e_n_t_1) ;
  public native javax.swing.text.GlyphView.GlyphPainter getGlyphPainter() ;
  public native void setGlyphPainter(javax.swing.text.GlyphView.GlyphPainter a_r_g_u_m_e_n_t_0) ;
  public native javax.swing.text.TabExpander getTabExpander() ;
  protected native void checkPainter() ;
  final native void paintTextUsingColor(java.awt.Graphics a_r_g_u_m_e_n_t_0, java.awt.Shape a_r_g_u_m_e_n_t_1, java.awt.Color a_r_g_u_m_e_n_t_2, int a_r_g_u_m_e_n_t_3, int a_r_g_u_m_e_n_t_4) ;
  native javax.swing.text.GlyphView.JustificationInfo getJustificationInfo(int a_r_g_u_m_e_n_t_0) ;
  int offset;
  int length;
  boolean impliedCR;
  boolean skipWidth;
  javax.swing.text.TabExpander expander;
  int x;
  javax.swing.text.GlyphView.GlyphPainter painter;
  static javax.swing.text.GlyphView.GlyphPainter defaultPainter;
  public static abstract class GlyphPainter extends java.lang.Object {
     public  GlyphPainter(){}
    public abstract void paint(javax.swing.text.GlyphView a_r_g_u_m_e_n_t_0, java.awt.Graphics a_r_g_u_m_e_n_t_1, java.awt.Shape a_r_g_u_m_e_n_t_2, int a_r_g_u_m_e_n_t_3, int a_r_g_u_m_e_n_t_4) ;
    public abstract float getHeight(javax.swing.text.GlyphView a_r_g_u_m_e_n_t_0) ;
    public abstract float getAscent(javax.swing.text.GlyphView a_r_g_u_m_e_n_t_0) ;
    public abstract float getDescent(javax.swing.text.GlyphView a_r_g_u_m_e_n_t_0) ;
    public abstract int viewToModel(javax.swing.text.GlyphView a_r_g_u_m_e_n_t_0, float a_r_g_u_m_e_n_t_1, float a_r_g_u_m_e_n_t_2, java.awt.Shape a_r_g_u_m_e_n_t_3, javax.swing.text.Position.Bias[] a_r_g_u_m_e_n_t_4) ;
    public abstract java.awt.Shape modelToView(javax.swing.text.GlyphView a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, javax.swing.text.Position.Bias a_r_g_u_m_e_n_t_2, java.awt.Shape a_r_g_u_m_e_n_t_3)  throws javax.swing.text.BadLocationException;
    public native int getNextVisualPositionFrom(javax.swing.text.GlyphView a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, javax.swing.text.Position.Bias a_r_g_u_m_e_n_t_2, java.awt.Shape a_r_g_u_m_e_n_t_3, int a_r_g_u_m_e_n_t_4, javax.swing.text.Position.Bias[] a_r_g_u_m_e_n_t_5)  throws javax.swing.text.BadLocationException;
    public native javax.swing.text.GlyphView.GlyphPainter getPainter(javax.swing.text.GlyphView a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2) ;
    public abstract float getSpan(javax.swing.text.GlyphView a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2, javax.swing.text.TabExpander a_r_g_u_m_e_n_t_3, float a_r_g_u_m_e_n_t_4) ;
    public abstract int getBoundedPosition(javax.swing.text.GlyphView a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, float a_r_g_u_m_e_n_t_2, float a_r_g_u_m_e_n_t_3) ;
  }
  static class JustificationInfo extends java.lang.Object {
      JustificationInfo(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2, int a_r_g_u_m_e_n_t_3, int a_r_g_u_m_e_n_t_4, boolean a_r_g_u_m_e_n_t_5, java.util.BitSet a_r_g_u_m_e_n_t_6){}
    final int start;
    final int end;
    final int leadingSpaces;
    final int contentSpaces;
    final int trailingSpaces;
    final boolean hasTab;
    final java.util.BitSet spaceMap;
  }
}