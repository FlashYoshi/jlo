package javax.swing.border;
public class BevelBorder extends javax.swing.border.AbstractBorder {
   public  BevelBorder(int a_r_g_u_m_e_n_t_0){}
   public  BevelBorder(int a_r_g_u_m_e_n_t_0, java.awt.Color a_r_g_u_m_e_n_t_1, java.awt.Color a_r_g_u_m_e_n_t_2){}
   public  BevelBorder(int a_r_g_u_m_e_n_t_0, java.awt.Color a_r_g_u_m_e_n_t_1, java.awt.Color a_r_g_u_m_e_n_t_2, java.awt.Color a_r_g_u_m_e_n_t_3, java.awt.Color a_r_g_u_m_e_n_t_4){}
  public native void paintBorder(java.awt.Component a_r_g_u_m_e_n_t_0, java.awt.Graphics a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2, int a_r_g_u_m_e_n_t_3, int a_r_g_u_m_e_n_t_4, int a_r_g_u_m_e_n_t_5) ;
  public native java.awt.Insets getBorderInsets(java.awt.Component a_r_g_u_m_e_n_t_0) ;
  public native java.awt.Insets getBorderInsets(java.awt.Component a_r_g_u_m_e_n_t_0, java.awt.Insets a_r_g_u_m_e_n_t_1) ;
  public native boolean isBorderOpaque() ;
  public native java.awt.Color getHighlightOuterColor(java.awt.Component a_r_g_u_m_e_n_t_0) ;
  public native java.awt.Color getHighlightOuterColor() ;
  public native java.awt.Color getHighlightInnerColor(java.awt.Component a_r_g_u_m_e_n_t_0) ;
  public native java.awt.Color getHighlightInnerColor() ;
  public native java.awt.Color getShadowInnerColor() ;
  public native java.awt.Color getShadowInnerColor(java.awt.Component a_r_g_u_m_e_n_t_0) ;
  public native java.awt.Color getShadowOuterColor(java.awt.Component a_r_g_u_m_e_n_t_0) ;
  public native java.awt.Color getShadowOuterColor() ;
  public native int getBevelType() ;
  protected native void paintRaisedBevel(java.awt.Component a_r_g_u_m_e_n_t_0, java.awt.Graphics a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2, int a_r_g_u_m_e_n_t_3, int a_r_g_u_m_e_n_t_4, int a_r_g_u_m_e_n_t_5) ;
  protected native void paintLoweredBevel(java.awt.Component a_r_g_u_m_e_n_t_0, java.awt.Graphics a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2, int a_r_g_u_m_e_n_t_3, int a_r_g_u_m_e_n_t_4, int a_r_g_u_m_e_n_t_5) ;
  public static final int RAISED;
  public static final int LOWERED;
  protected int bevelType;
  protected java.awt.Color highlightOuter;
  protected java.awt.Color highlightInner;
  protected java.awt.Color shadowInner;
  protected java.awt.Color shadowOuter;
}