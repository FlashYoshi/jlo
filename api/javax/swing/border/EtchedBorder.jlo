package javax.swing.border;
public class EtchedBorder extends javax.swing.border.AbstractBorder {
   public  EtchedBorder(int a_r_g_u_m_e_n_t_0){}
   public  EtchedBorder(){}
   public  EtchedBorder(java.awt.Color a_r_g_u_m_e_n_t_0, java.awt.Color a_r_g_u_m_e_n_t_1){}
   public  EtchedBorder(int a_r_g_u_m_e_n_t_0, java.awt.Color a_r_g_u_m_e_n_t_1, java.awt.Color a_r_g_u_m_e_n_t_2){}
  public native void paintBorder(java.awt.Component a_r_g_u_m_e_n_t_0, java.awt.Graphics a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2, int a_r_g_u_m_e_n_t_3, int a_r_g_u_m_e_n_t_4, int a_r_g_u_m_e_n_t_5) ;
  public native java.awt.Insets getBorderInsets(java.awt.Component a_r_g_u_m_e_n_t_0, java.awt.Insets a_r_g_u_m_e_n_t_1) ;
  public native java.awt.Insets getBorderInsets(java.awt.Component a_r_g_u_m_e_n_t_0) ;
  public native boolean isBorderOpaque() ;
  public native int getEtchType() ;
  public native java.awt.Color getHighlightColor(java.awt.Component a_r_g_u_m_e_n_t_0) ;
  public native java.awt.Color getHighlightColor() ;
  public native java.awt.Color getShadowColor(java.awt.Component a_r_g_u_m_e_n_t_0) ;
  public native java.awt.Color getShadowColor() ;
  public static final int RAISED;
  public static final int LOWERED;
  protected int etchType;
  protected java.awt.Color highlight;
  protected java.awt.Color shadow;
}