package javax.management.relation;
public class RelationService extends javax.management.NotificationBroadcasterSupport implements javax.management.relation.RelationServiceMBean, javax.management.MBeanRegistration, javax.management.NotificationListener {
   public  RelationService(boolean a_r_g_u_m_e_n_t_0){}
  public native void isActive()  throws javax.management.relation.RelationServiceNotRegisteredException;
  public native javax.management.MBeanNotificationInfo[] getNotificationInfo() ;
  public native javax.management.ObjectName preRegister(javax.management.MBeanServer a_r_g_u_m_e_n_t_0, javax.management.ObjectName a_r_g_u_m_e_n_t_1)  throws java.lang.Exception;
  public native void postRegister(java.lang.Boolean a_r_g_u_m_e_n_t_0) ;
  public native void preDeregister()  throws java.lang.Exception;
  public native void postDeregister() ;
  public native void handleNotification(javax.management.Notification a_r_g_u_m_e_n_t_0, java.lang.Object a_r_g_u_m_e_n_t_1) ;
  public native java.util.List<javax.management.ObjectName> getRole(java.lang.String a_r_g_u_m_e_n_t_0, java.lang.String a_r_g_u_m_e_n_t_1)  throws javax.management.relation.RelationServiceNotRegisteredException, java.lang.IllegalArgumentException, javax.management.relation.RelationNotFoundException, javax.management.relation.RoleNotFoundException;
  public native javax.management.relation.RoleResult getRoles(java.lang.String a_r_g_u_m_e_n_t_0, java.lang.String[] a_r_g_u_m_e_n_t_1)  throws javax.management.relation.RelationServiceNotRegisteredException, java.lang.IllegalArgumentException, javax.management.relation.RelationNotFoundException;
  public native java.lang.Integer getRoleCardinality(java.lang.String a_r_g_u_m_e_n_t_0, java.lang.String a_r_g_u_m_e_n_t_1)  throws java.lang.IllegalArgumentException, javax.management.relation.RelationNotFoundException, javax.management.relation.RoleNotFoundException;
  public native javax.management.relation.RoleResult getAllRoles(java.lang.String a_r_g_u_m_e_n_t_0)  throws java.lang.IllegalArgumentException, javax.management.relation.RelationNotFoundException, javax.management.relation.RelationServiceNotRegisteredException;
  public native void setRole(java.lang.String a_r_g_u_m_e_n_t_0, javax.management.relation.Role a_r_g_u_m_e_n_t_1)  throws javax.management.relation.RelationServiceNotRegisteredException, java.lang.IllegalArgumentException, javax.management.relation.RelationNotFoundException, javax.management.relation.RoleNotFoundException, javax.management.relation.InvalidRoleValueException;
  public native javax.management.relation.RoleResult setRoles(java.lang.String a_r_g_u_m_e_n_t_0, javax.management.relation.RoleList a_r_g_u_m_e_n_t_1)  throws javax.management.relation.RelationServiceNotRegisteredException, java.lang.IllegalArgumentException, javax.management.relation.RelationNotFoundException;
  public native java.util.Map<javax.management.ObjectName,java.util.List<java.lang.String>> getReferencedMBeans(java.lang.String a_r_g_u_m_e_n_t_0)  throws java.lang.IllegalArgumentException, javax.management.relation.RelationNotFoundException;
  public native java.lang.String getRelationTypeName(java.lang.String a_r_g_u_m_e_n_t_0)  throws java.lang.IllegalArgumentException, javax.management.relation.RelationNotFoundException;
  public native boolean getPurgeFlag() ;
  public native void setPurgeFlag(boolean a_r_g_u_m_e_n_t_0) ;
  public native void createRelationType(java.lang.String a_r_g_u_m_e_n_t_0, javax.management.relation.RoleInfo[] a_r_g_u_m_e_n_t_1)  throws java.lang.IllegalArgumentException, javax.management.relation.InvalidRelationTypeException;
  public native void addRelationType(javax.management.relation.RelationType a_r_g_u_m_e_n_t_0)  throws java.lang.IllegalArgumentException, javax.management.relation.InvalidRelationTypeException;
  public native java.util.List<java.lang.String> getAllRelationTypeNames() ;
  public native java.util.List<javax.management.relation.RoleInfo> getRoleInfos(java.lang.String a_r_g_u_m_e_n_t_0)  throws java.lang.IllegalArgumentException, javax.management.relation.RelationTypeNotFoundException;
  public native javax.management.relation.RoleInfo getRoleInfo(java.lang.String a_r_g_u_m_e_n_t_0, java.lang.String a_r_g_u_m_e_n_t_1)  throws java.lang.IllegalArgumentException, javax.management.relation.RelationTypeNotFoundException, javax.management.relation.RoleInfoNotFoundException;
  public native void removeRelationType(java.lang.String a_r_g_u_m_e_n_t_0)  throws javax.management.relation.RelationServiceNotRegisteredException, java.lang.IllegalArgumentException, javax.management.relation.RelationTypeNotFoundException;
  public native void createRelation(java.lang.String a_r_g_u_m_e_n_t_0, java.lang.String a_r_g_u_m_e_n_t_1, javax.management.relation.RoleList a_r_g_u_m_e_n_t_2)  throws javax.management.relation.RelationServiceNotRegisteredException, java.lang.IllegalArgumentException, javax.management.relation.RoleNotFoundException, javax.management.relation.InvalidRelationIdException, javax.management.relation.RelationTypeNotFoundException, javax.management.relation.InvalidRoleValueException;
  public native void addRelation(javax.management.ObjectName a_r_g_u_m_e_n_t_0)  throws java.lang.IllegalArgumentException, javax.management.relation.RelationServiceNotRegisteredException, java.lang.NoSuchMethodException, javax.management.relation.InvalidRelationIdException, javax.management.InstanceNotFoundException, javax.management.relation.InvalidRelationServiceException, javax.management.relation.RelationTypeNotFoundException, javax.management.relation.RoleNotFoundException, javax.management.relation.InvalidRoleValueException;
  public native javax.management.ObjectName isRelationMBean(java.lang.String a_r_g_u_m_e_n_t_0)  throws java.lang.IllegalArgumentException, javax.management.relation.RelationNotFoundException;
  public native java.lang.String isRelation(javax.management.ObjectName a_r_g_u_m_e_n_t_0)  throws java.lang.IllegalArgumentException;
  public native java.lang.Boolean hasRelation(java.lang.String a_r_g_u_m_e_n_t_0)  throws java.lang.IllegalArgumentException;
  public native java.util.List<java.lang.String> getAllRelationIds() ;
  public native java.lang.Integer checkRoleReading(java.lang.String a_r_g_u_m_e_n_t_0, java.lang.String a_r_g_u_m_e_n_t_1)  throws java.lang.IllegalArgumentException, javax.management.relation.RelationTypeNotFoundException;
  public native java.lang.Integer checkRoleWriting(javax.management.relation.Role a_r_g_u_m_e_n_t_0, java.lang.String a_r_g_u_m_e_n_t_1, java.lang.Boolean a_r_g_u_m_e_n_t_2)  throws java.lang.IllegalArgumentException, javax.management.relation.RelationTypeNotFoundException;
  public native void sendRelationCreationNotification(java.lang.String a_r_g_u_m_e_n_t_0)  throws java.lang.IllegalArgumentException, javax.management.relation.RelationNotFoundException;
  public native void sendRoleUpdateNotification(java.lang.String a_r_g_u_m_e_n_t_0, javax.management.relation.Role a_r_g_u_m_e_n_t_1, java.util.List<javax.management.ObjectName> a_r_g_u_m_e_n_t_2)  throws java.lang.IllegalArgumentException, javax.management.relation.RelationNotFoundException;
  public native void sendRelationRemovalNotification(java.lang.String a_r_g_u_m_e_n_t_0, java.util.List<javax.management.ObjectName> a_r_g_u_m_e_n_t_1)  throws java.lang.IllegalArgumentException, javax.management.relation.RelationNotFoundException;
  public native void updateRoleMap(java.lang.String a_r_g_u_m_e_n_t_0, javax.management.relation.Role a_r_g_u_m_e_n_t_1, java.util.List<javax.management.ObjectName> a_r_g_u_m_e_n_t_2)  throws java.lang.IllegalArgumentException, javax.management.relation.RelationServiceNotRegisteredException, javax.management.relation.RelationNotFoundException;
  public native void removeRelation(java.lang.String a_r_g_u_m_e_n_t_0)  throws javax.management.relation.RelationServiceNotRegisteredException, java.lang.IllegalArgumentException, javax.management.relation.RelationNotFoundException;
  public native void purgeRelations()  throws javax.management.relation.RelationServiceNotRegisteredException;
  public native java.util.Map<java.lang.String,java.util.List<java.lang.String>> findReferencingRelations(javax.management.ObjectName a_r_g_u_m_e_n_t_0, java.lang.String a_r_g_u_m_e_n_t_1, java.lang.String a_r_g_u_m_e_n_t_2)  throws java.lang.IllegalArgumentException;
  public native java.util.Map<javax.management.ObjectName,java.util.List<java.lang.String>> findAssociatedMBeans(javax.management.ObjectName a_r_g_u_m_e_n_t_0, java.lang.String a_r_g_u_m_e_n_t_1, java.lang.String a_r_g_u_m_e_n_t_2)  throws java.lang.IllegalArgumentException;
  public native java.util.List<java.lang.String> findRelationsOfType(java.lang.String a_r_g_u_m_e_n_t_0)  throws java.lang.IllegalArgumentException, javax.management.relation.RelationTypeNotFoundException;
  native javax.management.relation.RelationType getRelationType(java.lang.String a_r_g_u_m_e_n_t_0)  throws java.lang.IllegalArgumentException, javax.management.relation.RelationTypeNotFoundException;
  native java.lang.Object getRelation(java.lang.String a_r_g_u_m_e_n_t_0)  throws java.lang.IllegalArgumentException, javax.management.relation.RelationNotFoundException;
  static native void throwRoleProblemException(int a_r_g_u_m_e_n_t_0, java.lang.String a_r_g_u_m_e_n_t_1)  throws java.lang.IllegalArgumentException, javax.management.relation.RoleNotFoundException, javax.management.relation.InvalidRoleValueException;
}