package javax.management.timer;
public class Timer extends javax.management.NotificationBroadcasterSupport implements javax.management.timer.TimerMBean, javax.management.MBeanRegistration {
   public  Timer(){}
  public native boolean isEmpty() ;
  native void debug(java.lang.String a_r_g_u_m_e_n_t_0, java.lang.String a_r_g_u_m_e_n_t_1) ;
  native void debug(java.lang.String a_r_g_u_m_e_n_t_0, java.lang.String a_r_g_u_m_e_n_t_1, java.lang.String a_r_g_u_m_e_n_t_2) ;
  public synchronized native void start() ;
  public synchronized native void stop() ;
  public native java.util.Date getDate(java.lang.Integer a_r_g_u_m_e_n_t_0) ;
  public native boolean isActive() ;
  public synchronized native javax.management.MBeanNotificationInfo[] getNotificationInfo() ;
  native boolean isTraceOn() ;
  native void trace(java.lang.String a_r_g_u_m_e_n_t_0, java.lang.String a_r_g_u_m_e_n_t_1, java.lang.String a_r_g_u_m_e_n_t_2) ;
  native void trace(java.lang.String a_r_g_u_m_e_n_t_0, java.lang.String a_r_g_u_m_e_n_t_1) ;
  native boolean isDebugOn() ;
  public native javax.management.ObjectName preRegister(javax.management.MBeanServer a_r_g_u_m_e_n_t_0, javax.management.ObjectName a_r_g_u_m_e_n_t_1)  throws java.lang.Exception;
  public native void postRegister(java.lang.Boolean a_r_g_u_m_e_n_t_0) ;
  public native void preDeregister()  throws java.lang.Exception;
  public native void postDeregister() ;
  native void sendNotification(java.util.Date a_r_g_u_m_e_n_t_0, javax.management.timer.TimerNotification a_r_g_u_m_e_n_t_1) ;
  public synchronized native java.lang.Integer addNotification(java.lang.String a_r_g_u_m_e_n_t_0, java.lang.String a_r_g_u_m_e_n_t_1, java.lang.Object a_r_g_u_m_e_n_t_2, java.util.Date a_r_g_u_m_e_n_t_3)  throws java.lang.IllegalArgumentException;
  public synchronized native java.lang.Integer addNotification(java.lang.String a_r_g_u_m_e_n_t_0, java.lang.String a_r_g_u_m_e_n_t_1, java.lang.Object a_r_g_u_m_e_n_t_2, java.util.Date a_r_g_u_m_e_n_t_3, long a_r_g_u_m_e_n_t_4, long a_r_g_u_m_e_n_t_5, boolean a_r_g_u_m_e_n_t_6)  throws java.lang.IllegalArgumentException;
  public synchronized native java.lang.Integer addNotification(java.lang.String a_r_g_u_m_e_n_t_0, java.lang.String a_r_g_u_m_e_n_t_1, java.lang.Object a_r_g_u_m_e_n_t_2, java.util.Date a_r_g_u_m_e_n_t_3, long a_r_g_u_m_e_n_t_4, long a_r_g_u_m_e_n_t_5)  throws java.lang.IllegalArgumentException;
  public synchronized native java.lang.Integer addNotification(java.lang.String a_r_g_u_m_e_n_t_0, java.lang.String a_r_g_u_m_e_n_t_1, java.lang.Object a_r_g_u_m_e_n_t_2, java.util.Date a_r_g_u_m_e_n_t_3, long a_r_g_u_m_e_n_t_4)  throws java.lang.IllegalArgumentException;
  public synchronized native void removeNotification(java.lang.Integer a_r_g_u_m_e_n_t_0)  throws javax.management.InstanceNotFoundException;
  public synchronized native void removeNotifications(java.lang.String a_r_g_u_m_e_n_t_0)  throws javax.management.InstanceNotFoundException;
  public synchronized native void removeAllNotifications() ;
  public native int getNbNotifications() ;
  public synchronized native java.util.Vector<java.lang.Integer> getAllNotificationIDs() ;
  public synchronized native java.util.Vector<java.lang.Integer> getNotificationIDs(java.lang.String a_r_g_u_m_e_n_t_0) ;
  public native java.lang.String getNotificationType(java.lang.Integer a_r_g_u_m_e_n_t_0) ;
  public native java.lang.String getNotificationMessage(java.lang.Integer a_r_g_u_m_e_n_t_0) ;
  public native java.lang.Object getNotificationUserData(java.lang.Integer a_r_g_u_m_e_n_t_0) ;
  public native java.lang.Long getPeriod(java.lang.Integer a_r_g_u_m_e_n_t_0) ;
  public native java.lang.Long getNbOccurences(java.lang.Integer a_r_g_u_m_e_n_t_0) ;
  public native java.lang.Boolean getFixedRate(java.lang.Integer a_r_g_u_m_e_n_t_0) ;
  public native boolean getSendPastNotifications() ;
  public native void setSendPastNotifications(boolean a_r_g_u_m_e_n_t_0) ;
  native void notifyAlarmClock(javax.management.timer.TimerAlarmClockNotification a_r_g_u_m_e_n_t_0) ;
  public static final long ONE_SECOND;
  public static final long ONE_MINUTE;
  public static final long ONE_HOUR;
  public static final long ONE_DAY;
  public static final long ONE_WEEK;
}