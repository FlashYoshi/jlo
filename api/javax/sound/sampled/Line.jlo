package javax.sound.sampled;
public abstract interface Line {
  public abstract void close() ;
  public abstract void open()  throws javax.sound.sampled.LineUnavailableException;
  public abstract boolean isOpen() ;
  public abstract javax.sound.sampled.Control getControl(javax.sound.sampled.Control.Type a_r_g_u_m_e_n_t_0) ;
  public abstract javax.sound.sampled.Line.Info getLineInfo() ;
  public abstract javax.sound.sampled.Control[] getControls() ;
  public abstract boolean isControlSupported(javax.sound.sampled.Control.Type a_r_g_u_m_e_n_t_0) ;
  public abstract void addLineListener(javax.sound.sampled.LineListener a_r_g_u_m_e_n_t_0) ;
  public abstract void removeLineListener(javax.sound.sampled.LineListener a_r_g_u_m_e_n_t_0) ;
  public static class Info extends java.lang.Object {
     public  Info(java.lang.Class<? extends java.lang.Object> a_r_g_u_m_e_n_t_0){}
    public native java.lang.String toString() ;
    public native boolean matches(javax.sound.sampled.Line.Info a_r_g_u_m_e_n_t_0) ;
    public native java.lang.Class<? extends java.lang.Object> getLineClass() ;
  }
}