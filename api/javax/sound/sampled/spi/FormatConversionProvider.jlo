package javax.sound.sampled.spi;
public abstract class FormatConversionProvider extends java.lang.Object {
   public  FormatConversionProvider(){}
  public abstract javax.sound.sampled.AudioInputStream getAudioInputStream(javax.sound.sampled.AudioFormat a_r_g_u_m_e_n_t_0, javax.sound.sampled.AudioInputStream a_r_g_u_m_e_n_t_1) ;
  public abstract javax.sound.sampled.AudioInputStream getAudioInputStream(javax.sound.sampled.AudioFormat.Encoding a_r_g_u_m_e_n_t_0, javax.sound.sampled.AudioInputStream a_r_g_u_m_e_n_t_1) ;
  public abstract javax.sound.sampled.AudioFormat.Encoding[] getTargetEncodings() ;
  public abstract javax.sound.sampled.AudioFormat.Encoding[] getTargetEncodings(javax.sound.sampled.AudioFormat a_r_g_u_m_e_n_t_0) ;
  public native boolean isConversionSupported(javax.sound.sampled.AudioFormat a_r_g_u_m_e_n_t_0, javax.sound.sampled.AudioFormat a_r_g_u_m_e_n_t_1) ;
  public native boolean isConversionSupported(javax.sound.sampled.AudioFormat.Encoding a_r_g_u_m_e_n_t_0, javax.sound.sampled.AudioFormat a_r_g_u_m_e_n_t_1) ;
  public abstract javax.sound.sampled.AudioFormat[] getTargetFormats(javax.sound.sampled.AudioFormat.Encoding a_r_g_u_m_e_n_t_0, javax.sound.sampled.AudioFormat a_r_g_u_m_e_n_t_1) ;
  public native boolean isSourceEncodingSupported(javax.sound.sampled.AudioFormat.Encoding a_r_g_u_m_e_n_t_0) ;
  public abstract javax.sound.sampled.AudioFormat.Encoding[] getSourceEncodings() ;
  public native boolean isTargetEncodingSupported(javax.sound.sampled.AudioFormat.Encoding a_r_g_u_m_e_n_t_0) ;
}