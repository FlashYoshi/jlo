package javax.crypto;
public class CipherInputStream extends java.io.FilterInputStream {
   public  CipherInputStream(java.io.InputStream a_r_g_u_m_e_n_t_0, javax.crypto.Cipher a_r_g_u_m_e_n_t_1){}
   protected  CipherInputStream(java.io.InputStream a_r_g_u_m_e_n_t_0){}
  public native void close()  throws java.io.IOException;
  public native int read()  throws java.io.IOException;
  public native int read(byte[] a_r_g_u_m_e_n_t_0)  throws java.io.IOException;
  public native int read(byte[] a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2)  throws java.io.IOException;
  public native long skip(long a_r_g_u_m_e_n_t_0)  throws java.io.IOException;
  public native int available()  throws java.io.IOException;
  public native boolean markSupported() ;
}