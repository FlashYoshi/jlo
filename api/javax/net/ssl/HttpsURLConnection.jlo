package javax.net.ssl;
public abstract class HttpsURLConnection extends java.net.HttpURLConnection {
   protected  HttpsURLConnection(java.net.URL a_r_g_u_m_e_n_t_0){}
  public abstract java.lang.String getCipherSuite() ;
  public abstract java.security.cert.Certificate[] getLocalCertificates() ;
  public native java.security.Principal getPeerPrincipal()  throws javax.net.ssl.SSLPeerUnverifiedException;
  public native java.security.Principal getLocalPrincipal() ;
  public abstract java.security.cert.Certificate[] getServerCertificates()  throws javax.net.ssl.SSLPeerUnverifiedException;
  public static native void setDefaultHostnameVerifier(javax.net.ssl.HostnameVerifier a_r_g_u_m_e_n_t_0) ;
  public static native javax.net.ssl.HostnameVerifier getDefaultHostnameVerifier() ;
  public native void setHostnameVerifier(javax.net.ssl.HostnameVerifier a_r_g_u_m_e_n_t_0) ;
  public native javax.net.ssl.HostnameVerifier getHostnameVerifier() ;
  public static native void setDefaultSSLSocketFactory(javax.net.ssl.SSLSocketFactory a_r_g_u_m_e_n_t_0) ;
  public static native javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory() ;
  public native void setSSLSocketFactory(javax.net.ssl.SSLSocketFactory a_r_g_u_m_e_n_t_0) ;
  public native javax.net.ssl.SSLSocketFactory getSSLSocketFactory() ;
  protected javax.net.ssl.HostnameVerifier hostnameVerifier;
  private static class DefaultHostnameVerifier extends java.lang.Object implements javax.net.ssl.HostnameVerifier {
    public native boolean verify(java.lang.String a_r_g_u_m_e_n_t_0, javax.net.ssl.SSLSession a_r_g_u_m_e_n_t_1) ;
  }
}