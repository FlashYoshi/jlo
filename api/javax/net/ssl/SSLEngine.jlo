package javax.net.ssl;
public abstract class SSLEngine extends java.lang.Object {
   protected  SSLEngine(){}
   protected  SSLEngine(java.lang.String a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1){}
  public native javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer[] a_r_g_u_m_e_n_t_0, java.nio.ByteBuffer a_r_g_u_m_e_n_t_1)  throws javax.net.ssl.SSLException;
  public abstract javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer[] a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2, java.nio.ByteBuffer a_r_g_u_m_e_n_t_3)  throws javax.net.ssl.SSLException;
  public native javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer a_r_g_u_m_e_n_t_0, java.nio.ByteBuffer a_r_g_u_m_e_n_t_1)  throws javax.net.ssl.SSLException;
  public native javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer a_r_g_u_m_e_n_t_0, java.nio.ByteBuffer[] a_r_g_u_m_e_n_t_1)  throws javax.net.ssl.SSLException;
  public abstract javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer a_r_g_u_m_e_n_t_0, java.nio.ByteBuffer[] a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2, int a_r_g_u_m_e_n_t_3)  throws javax.net.ssl.SSLException;
  public native javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer a_r_g_u_m_e_n_t_0, java.nio.ByteBuffer a_r_g_u_m_e_n_t_1)  throws javax.net.ssl.SSLException;
  public abstract javax.net.ssl.SSLSession getSession() ;
  public abstract java.lang.String[] getSupportedCipherSuites() ;
  public abstract java.lang.String[] getEnabledCipherSuites() ;
  public abstract void setEnabledCipherSuites(java.lang.String[] a_r_g_u_m_e_n_t_0) ;
  public abstract java.lang.String[] getSupportedProtocols() ;
  public abstract java.lang.String[] getEnabledProtocols() ;
  public abstract void setEnabledProtocols(java.lang.String[] a_r_g_u_m_e_n_t_0) ;
  public abstract void setUseClientMode(boolean a_r_g_u_m_e_n_t_0) ;
  public abstract boolean getUseClientMode() ;
  public abstract void setNeedClientAuth(boolean a_r_g_u_m_e_n_t_0) ;
  public abstract boolean getNeedClientAuth() ;
  public abstract void setWantClientAuth(boolean a_r_g_u_m_e_n_t_0) ;
  public abstract boolean getWantClientAuth() ;
  public abstract void setEnableSessionCreation(boolean a_r_g_u_m_e_n_t_0) ;
  public abstract boolean getEnableSessionCreation() ;
  public native javax.net.ssl.SSLParameters getSSLParameters() ;
  public native void setSSLParameters(javax.net.ssl.SSLParameters a_r_g_u_m_e_n_t_0) ;
  public native java.lang.String getPeerHost() ;
  public native int getPeerPort() ;
  public abstract java.lang.Runnable getDelegatedTask() ;
  public abstract void closeInbound()  throws javax.net.ssl.SSLException;
  public abstract boolean isInboundDone() ;
  public abstract void closeOutbound() ;
  public abstract boolean isOutboundDone() ;
  public abstract void beginHandshake()  throws javax.net.ssl.SSLException;
  public abstract javax.net.ssl.SSLEngineResult.HandshakeStatus getHandshakeStatus() ;
}