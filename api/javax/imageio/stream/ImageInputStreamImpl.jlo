package javax.imageio.stream;
public abstract class ImageInputStreamImpl extends java.lang.Object implements javax.imageio.stream.ImageInputStream {
   public  ImageInputStreamImpl(){}
  protected native void finalize()  throws java.lang.Throwable;
  public native long length() ;
  public native java.lang.String readLine()  throws java.io.IOException;
  public native void flush()  throws java.io.IOException;
  public native void close()  throws java.io.IOException;
  public native int readInt()  throws java.io.IOException;
  public native void mark() ;
  public native void reset()  throws java.io.IOException;
  public native char readChar()  throws java.io.IOException;
  public abstract int read(byte[] a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2)  throws java.io.IOException;
  public abstract int read()  throws java.io.IOException;
  public native int read(byte[] a_r_g_u_m_e_n_t_0)  throws java.io.IOException;
  public native void readBytes(javax.imageio.stream.IIOByteBuffer a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1)  throws java.io.IOException;
  public native java.lang.String readUTF()  throws java.io.IOException;
  public native long readLong()  throws java.io.IOException;
  public native byte readByte()  throws java.io.IOException;
  public native short readShort()  throws java.io.IOException;
  public native float readFloat()  throws java.io.IOException;
  public native void readFully(char[] a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2)  throws java.io.IOException;
  public native void readFully(byte[] a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2)  throws java.io.IOException;
  public native void readFully(byte[] a_r_g_u_m_e_n_t_0)  throws java.io.IOException;
  public native void readFully(short[] a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2)  throws java.io.IOException;
  public native void readFully(int[] a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2)  throws java.io.IOException;
  public native void readFully(long[] a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2)  throws java.io.IOException;
  public native void readFully(float[] a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2)  throws java.io.IOException;
  public native void readFully(double[] a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2)  throws java.io.IOException;
  public native int skipBytes(int a_r_g_u_m_e_n_t_0)  throws java.io.IOException;
  public native long skipBytes(long a_r_g_u_m_e_n_t_0)  throws java.io.IOException;
  public native boolean readBoolean()  throws java.io.IOException;
  public native int readUnsignedByte()  throws java.io.IOException;
  public native int readUnsignedShort()  throws java.io.IOException;
  public native double readDouble()  throws java.io.IOException;
  public native void setByteOrder(java.nio.ByteOrder a_r_g_u_m_e_n_t_0) ;
  public native java.nio.ByteOrder getByteOrder() ;
  public native long readUnsignedInt()  throws java.io.IOException;
  public native long getStreamPosition()  throws java.io.IOException;
  public native int getBitOffset()  throws java.io.IOException;
  public native void setBitOffset(int a_r_g_u_m_e_n_t_0)  throws java.io.IOException;
  public native int readBit()  throws java.io.IOException;
  public native long readBits(int a_r_g_u_m_e_n_t_0)  throws java.io.IOException;
  public native void seek(long a_r_g_u_m_e_n_t_0)  throws java.io.IOException;
  public native void flushBefore(long a_r_g_u_m_e_n_t_0)  throws java.io.IOException;
  public native long getFlushedPosition() ;
  public native boolean isCached() ;
  public native boolean isCachedMemory() ;
  public native boolean isCachedFile() ;
  protected final native void checkClosed()  throws java.io.IOException;
  byte[] byteBuf;
  protected java.nio.ByteOrder byteOrder;
  protected long streamPos;
  protected int bitOffset;
  protected long flushedPos;
}