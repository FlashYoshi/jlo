package java.nio;
public abstract class LongBuffer extends java.nio.Buffer implements java.lang.Comparable<java.nio.LongBuffer> {
    LongBuffer(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2, int a_r_g_u_m_e_n_t_3){}
    LongBuffer(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2, int a_r_g_u_m_e_n_t_3, long[] a_r_g_u_m_e_n_t_4, int a_r_g_u_m_e_n_t_5){}
  public abstract long get() ;
  public native java.nio.LongBuffer get(long[] a_r_g_u_m_e_n_t_0) ;
  public native java.nio.LongBuffer get(long[] a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2) ;
  public abstract long get(int a_r_g_u_m_e_n_t_0) ;
  public native java.nio.LongBuffer put(java.nio.LongBuffer a_r_g_u_m_e_n_t_0) ;
  public abstract java.nio.LongBuffer put(long a_r_g_u_m_e_n_t_0) ;
  public abstract java.nio.LongBuffer put(int a_r_g_u_m_e_n_t_0, long a_r_g_u_m_e_n_t_1) ;
  public native java.nio.LongBuffer put(long[] a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2) ;
  public final native java.nio.LongBuffer put(long[] a_r_g_u_m_e_n_t_0) ;
  public native int hashCode() ;
  public native boolean equals(java.lang.Object a_r_g_u_m_e_n_t_0) ;
  public native int compareTo(java.nio.LongBuffer a_r_g_u_m_e_n_t_0) ;
  public native java.lang.String toString() ;
  public abstract boolean isDirect() ;
  public final native boolean hasArray() ;
  public final native long[] array() ;
  public final native int arrayOffset() ;
  public static native java.nio.LongBuffer wrap(long[] a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2) ;
  public static native java.nio.LongBuffer wrap(long[] a_r_g_u_m_e_n_t_0) ;
  public static native java.nio.LongBuffer allocate(int a_r_g_u_m_e_n_t_0) ;
  public abstract java.nio.LongBuffer duplicate() ;
  public abstract java.nio.LongBuffer slice() ;
  public abstract java.nio.LongBuffer asReadOnlyBuffer() ;
  public abstract java.nio.LongBuffer compact() ;
  public abstract java.nio.ByteOrder order() ;
  final long[] hb;
  final int offset;
  boolean isReadOnly;
}