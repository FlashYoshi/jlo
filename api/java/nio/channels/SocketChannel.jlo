package java.nio.channels;
public abstract class SocketChannel extends java.nio.channels.spi.AbstractSelectableChannel implements java.nio.channels.ByteChannel, java.nio.channels.ScatteringByteChannel, java.nio.channels.GatheringByteChannel {
   protected  SocketChannel(java.nio.channels.spi.SelectorProvider a_r_g_u_m_e_n_t_0){}
  public final native long write(java.nio.ByteBuffer[] a_r_g_u_m_e_n_t_0)  throws java.io.IOException;
  public abstract int write(java.nio.ByteBuffer a_r_g_u_m_e_n_t_0)  throws java.io.IOException;
  public abstract long write(java.nio.ByteBuffer[] a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2)  throws java.io.IOException;
  public abstract long read(java.nio.ByteBuffer[] a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2)  throws java.io.IOException;
  public final native long read(java.nio.ByteBuffer[] a_r_g_u_m_e_n_t_0)  throws java.io.IOException;
  public abstract int read(java.nio.ByteBuffer a_r_g_u_m_e_n_t_0)  throws java.io.IOException;
  public static native java.nio.channels.SocketChannel open(java.net.SocketAddress a_r_g_u_m_e_n_t_0)  throws java.io.IOException;
  public static native java.nio.channels.SocketChannel open()  throws java.io.IOException;
  public abstract boolean connect(java.net.SocketAddress a_r_g_u_m_e_n_t_0)  throws java.io.IOException;
  public final native int validOps() ;
  public abstract java.net.Socket socket() ;
  public abstract boolean isConnected() ;
  public abstract boolean isConnectionPending() ;
  public abstract boolean finishConnect()  throws java.io.IOException;
}