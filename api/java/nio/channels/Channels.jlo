package java.nio.channels;
public final class Channels extends java.lang.Object {
  public static native java.io.InputStream newInputStream(java.nio.channels.ReadableByteChannel a_r_g_u_m_e_n_t_0) ;
  public static native java.io.OutputStream newOutputStream(java.nio.channels.WritableByteChannel a_r_g_u_m_e_n_t_0) ;
  public static native java.nio.channels.ReadableByteChannel newChannel(java.io.InputStream a_r_g_u_m_e_n_t_0) ;
  public static native java.nio.channels.WritableByteChannel newChannel(java.io.OutputStream a_r_g_u_m_e_n_t_0) ;
  public static native java.io.Reader newReader(java.nio.channels.ReadableByteChannel a_r_g_u_m_e_n_t_0, java.lang.String a_r_g_u_m_e_n_t_1) ;
  public static native java.io.Reader newReader(java.nio.channels.ReadableByteChannel a_r_g_u_m_e_n_t_0, java.nio.charset.CharsetDecoder a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2) ;
  public static native java.io.Writer newWriter(java.nio.channels.WritableByteChannel a_r_g_u_m_e_n_t_0, java.lang.String a_r_g_u_m_e_n_t_1) ;
  public static native java.io.Writer newWriter(java.nio.channels.WritableByteChannel a_r_g_u_m_e_n_t_0, java.nio.charset.CharsetEncoder a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2) ;
  private static class WritableByteChannelImpl extends java.nio.channels.spi.AbstractInterruptibleChannel implements java.nio.channels.WritableByteChannel {
      WritableByteChannelImpl(java.io.OutputStream a_r_g_u_m_e_n_t_0){}
    public native int write(java.nio.ByteBuffer a_r_g_u_m_e_n_t_0)  throws java.io.IOException;
    protected native void implCloseChannel()  throws java.io.IOException;
    java.io.OutputStream out;
  }
  private static class ReadableByteChannelImpl extends java.nio.channels.spi.AbstractInterruptibleChannel implements java.nio.channels.ReadableByteChannel {
      ReadableByteChannelImpl(java.io.InputStream a_r_g_u_m_e_n_t_0){}
    public native int read(java.nio.ByteBuffer a_r_g_u_m_e_n_t_0)  throws java.io.IOException;
    protected native void implCloseChannel()  throws java.io.IOException;
    java.io.InputStream in;
  }
}