package java.lang;
public final class Class<T extends java.lang.Object> extends java.lang.Object implements java.io.Serializable, java.lang.reflect.GenericDeclaration, java.lang.reflect.Type, java.lang.reflect.AnnotatedElement {
  public static native java.lang.Class<? extends java.lang.Object> forName(java.lang.String a_r_g_u_m_e_n_t_0)  throws java.lang.ClassNotFoundException;
  public static native java.lang.Class<? extends java.lang.Object> forName(java.lang.String a_r_g_u_m_e_n_t_0, boolean a_r_g_u_m_e_n_t_1, java.lang.ClassLoader a_r_g_u_m_e_n_t_2)  throws java.lang.ClassNotFoundException;
  public native boolean isAssignableFrom(java.lang.Class<? extends java.lang.Object> a_r_g_u_m_e_n_t_0) ;
  public native boolean isInstance(java.lang.Object a_r_g_u_m_e_n_t_0) ;
  public native int getModifiers() ;
  public native boolean isInterface() ;
  public native boolean isArray() ;
  public native boolean isPrimitive() ;
  public native java.lang.Class<? super T> getSuperclass() ;
  public native java.lang.Class<? extends java.lang.Object> getComponentType() ;
  public native java.lang.String toString() ;
  public native java.lang.String getName() ;
  native java.util.Map<java.lang.String,T> enumConstantDirectory() ;
  public native T newInstance()  throws java.lang.InstantiationException, java.lang.IllegalAccessException;
  public native boolean isAnnotation() ;
  public native boolean isSynthetic() ;
  public native java.lang.ClassLoader getClassLoader() ;
  native java.lang.ClassLoader getClassLoader0() ;
  public native java.lang.reflect.TypeVariable<java.lang.Class<T>>[] getTypeParameters() ;
  public native java.lang.reflect.Type getGenericSuperclass() ;
  public native java.lang.Package getPackage() ;
  public native java.lang.Class<? extends java.lang.Object>[] getInterfaces() ;
  public native java.lang.reflect.Type[] getGenericInterfaces() ;
  public native java.lang.Object[] getSigners() ;
  native void setSigners(java.lang.Object[] a_r_g_u_m_e_n_t_0) ;
  public native java.lang.reflect.Method getEnclosingMethod() ;
  public native java.lang.reflect.Constructor<? extends java.lang.Object> getEnclosingConstructor() ;
  public native java.lang.Class<? extends java.lang.Object> getDeclaringClass() ;
  public native java.lang.Class<? extends java.lang.Object> getEnclosingClass() ;
  public native java.lang.String getSimpleName() ;
  public native java.lang.String getCanonicalName() ;
  public native boolean isAnonymousClass() ;
  public native boolean isLocalClass() ;
  public native boolean isMemberClass() ;
  public native java.lang.Class<? extends java.lang.Object>[] getClasses() ;
  public native java.lang.reflect.Field[] getFields()  throws java.lang.SecurityException;
  public native java.lang.reflect.Method[] getMethods()  throws java.lang.SecurityException;
  public native java.lang.reflect.Constructor<? extends java.lang.Object>[] getConstructors()  throws java.lang.SecurityException;
  public native java.lang.reflect.Field getField(java.lang.String a_r_g_u_m_e_n_t_0)  throws java.lang.NoSuchFieldException, java.lang.SecurityException;
  public transient native java.lang.reflect.Method getMethod(java.lang.String a_r_g_u_m_e_n_t_0, java.lang.Class<? extends java.lang.Object>... a_r_g_u_m_e_n_t_1)  throws java.lang.NoSuchMethodException, java.lang.SecurityException;
  public transient native java.lang.reflect.Constructor<T> getConstructor(java.lang.Class<? extends java.lang.Object>... a_r_g_u_m_e_n_t_0)  throws java.lang.NoSuchMethodException, java.lang.SecurityException;
  public native java.lang.Class<? extends java.lang.Object>[] getDeclaredClasses()  throws java.lang.SecurityException;
  public native java.lang.reflect.Field[] getDeclaredFields()  throws java.lang.SecurityException;
  public native java.lang.reflect.Method[] getDeclaredMethods()  throws java.lang.SecurityException;
  public native java.lang.reflect.Constructor<? extends java.lang.Object>[] getDeclaredConstructors()  throws java.lang.SecurityException;
  public native java.lang.reflect.Field getDeclaredField(java.lang.String a_r_g_u_m_e_n_t_0)  throws java.lang.NoSuchFieldException, java.lang.SecurityException;
  public transient native java.lang.reflect.Method getDeclaredMethod(java.lang.String a_r_g_u_m_e_n_t_0, java.lang.Class<? extends java.lang.Object>... a_r_g_u_m_e_n_t_1)  throws java.lang.NoSuchMethodException, java.lang.SecurityException;
  public transient native java.lang.reflect.Constructor<T> getDeclaredConstructor(java.lang.Class<? extends java.lang.Object>... a_r_g_u_m_e_n_t_0)  throws java.lang.NoSuchMethodException, java.lang.SecurityException;
  public native java.io.InputStream getResourceAsStream(java.lang.String a_r_g_u_m_e_n_t_0) ;
  public native java.net.URL getResource(java.lang.String a_r_g_u_m_e_n_t_0) ;
  public native java.security.ProtectionDomain getProtectionDomain() ;
  native void setProtectionDomain0(java.security.ProtectionDomain a_r_g_u_m_e_n_t_0) ;
  static native java.lang.Class getPrimitiveClass(java.lang.String a_r_g_u_m_e_n_t_0) ;
  native sun.reflect.ConstantPool getConstantPool() ;
  public native boolean desiredAssertionStatus() ;
  public native boolean isEnum() ;
  public native T[] getEnumConstants() ;
  native T[] getEnumConstantsShared() ;
  public native T cast(java.lang.Object a_r_g_u_m_e_n_t_0) ;
  public native <U extends java.lang.Object>java.lang.Class<? extends U> asSubclass(java.lang.Class<U> a_r_g_u_m_e_n_t_0) ;
  public native <A extends java.lang.annotation.Annotation>A getAnnotation(java.lang.Class<A> a_r_g_u_m_e_n_t_0) ;
  public native boolean isAnnotationPresent(java.lang.Class<? extends java.lang.annotation.Annotation> a_r_g_u_m_e_n_t_0) ;
  public native java.lang.annotation.Annotation[] getAnnotations() ;
  public native java.lang.annotation.Annotation[] getDeclaredAnnotations() ;
  native void setAnnotationType(sun.reflect.annotation.AnnotationType a_r_g_u_m_e_n_t_0) ;
  native sun.reflect.annotation.AnnotationType getAnnotationType() ;
  static class MethodArray extends java.lang.Object {
      MethodArray(){}
    native void add(java.lang.reflect.Method a_r_g_u_m_e_n_t_0) ;
    native java.lang.reflect.Method get(int a_r_g_u_m_e_n_t_0) ;
    native int length() ;
    native void addAll(java.lang.Class.MethodArray a_r_g_u_m_e_n_t_0) ;
    native void addAll(java.lang.reflect.Method[] a_r_g_u_m_e_n_t_0) ;
    native void removeByNameAndSignature(java.lang.reflect.Method a_r_g_u_m_e_n_t_0) ;
    native void addAllIfNotPresent(java.lang.Class.MethodArray a_r_g_u_m_e_n_t_0) ;
    native void compactAndTrim() ;
    native java.lang.reflect.Method[] getArray() ;
    native void addIfNotPresent(java.lang.reflect.Method a_r_g_u_m_e_n_t_0) ;
  }
  private static final class EnclosingMethodInfo extends java.lang.Object {
    native java.lang.String getName() ;
    native java.lang.Class<? extends java.lang.Object> getEnclosingClass() ;
    native boolean isMethod() ;
    native java.lang.String getDescriptor() ;
    native boolean isConstructor() ;
    native boolean isPartial() ;
    static final boolean $assertionsDisabled;
  }
}