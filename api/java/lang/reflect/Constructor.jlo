package java.lang.reflect;
public final class Constructor<T extends java.lang.Object> extends java.lang.reflect.AccessibleObject implements java.lang.reflect.GenericDeclaration, java.lang.reflect.Member {
    Constructor(java.lang.Class<T> a_r_g_u_m_e_n_t_0, java.lang.Class[] a_r_g_u_m_e_n_t_1, java.lang.Class[] a_r_g_u_m_e_n_t_2, int a_r_g_u_m_e_n_t_3, int a_r_g_u_m_e_n_t_4, java.lang.String a_r_g_u_m_e_n_t_5, byte[] a_r_g_u_m_e_n_t_6, byte[] a_r_g_u_m_e_n_t_7){}
  public native int hashCode() ;
  public native int getModifiers() ;
  public native boolean equals(java.lang.Object a_r_g_u_m_e_n_t_0) ;
  public native java.lang.String toString() ;
  public native java.lang.String getName() ;
  public transient native T newInstance(java.lang.Object... a_r_g_u_m_e_n_t_0)  throws java.lang.InstantiationException, java.lang.IllegalAccessException, java.lang.IllegalArgumentException, java.lang.reflect.InvocationTargetException;
  public native boolean isSynthetic() ;
  public native java.lang.reflect.TypeVariable<java.lang.reflect.Constructor<T>>[] getTypeParameters() ;
  public native java.lang.Class<T> getDeclaringClass() ;
  native byte[] getRawAnnotations() ;
  public native <T extends java.lang.annotation.Annotation>T getAnnotation(java.lang.Class<T> a_r_g_u_m_e_n_t_0) ;
  public native java.lang.annotation.Annotation[] getDeclaredAnnotations() ;
  public native java.lang.Class<? extends java.lang.Object>[] getParameterTypes() ;
  native java.lang.reflect.Constructor<T> copy() ;
  public native java.lang.String toGenericString() ;
  public native java.lang.reflect.Type[] getGenericParameterTypes() ;
  public native java.lang.Class<? extends java.lang.Object>[] getExceptionTypes() ;
  public native java.lang.reflect.Type[] getGenericExceptionTypes() ;
  public native boolean isVarArgs() ;
  public native java.lang.annotation.Annotation[][] getParameterAnnotations() ;
  native sun.reflect.ConstructorAccessor getConstructorAccessor() ;
  native void setConstructorAccessor(sun.reflect.ConstructorAccessor a_r_g_u_m_e_n_t_0) ;
  native int getSlot() ;
  native java.lang.String getSignature() ;
  native byte[] getRawParameterAnnotations() ;
}