package java.lang.reflect;
public class AccessibleObject extends java.lang.Object implements java.lang.reflect.AnnotatedElement {
   protected  AccessibleObject(){}
  public native <T extends java.lang.annotation.Annotation>T getAnnotation(java.lang.Class<T> a_r_g_u_m_e_n_t_0) ;
  public native boolean isAnnotationPresent(java.lang.Class<? extends java.lang.annotation.Annotation> a_r_g_u_m_e_n_t_0) ;
  public native java.lang.annotation.Annotation[] getAnnotations() ;
  public native java.lang.annotation.Annotation[] getDeclaredAnnotations() ;
  public static native void setAccessible(java.lang.reflect.AccessibleObject[] a_r_g_u_m_e_n_t_0, boolean a_r_g_u_m_e_n_t_1)  throws java.lang.SecurityException;
  public native void setAccessible(boolean a_r_g_u_m_e_n_t_0)  throws java.lang.SecurityException;
  public native boolean isAccessible() ;
  boolean override;
  static final sun.reflect.ReflectionFactory reflectionFactory;
}