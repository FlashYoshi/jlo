package java.lang;
abstract class AbstractStringBuilder extends java.lang.Object implements java.lang.Appendable, java.lang.CharSequence {
    AbstractStringBuilder(int a_r_g_u_m_e_n_t_0){}
    AbstractStringBuilder(){}
  public native int indexOf(java.lang.String a_r_g_u_m_e_n_t_0) ;
  public native int indexOf(java.lang.String a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1) ;
  public abstract java.lang.String toString() ;
  public native java.lang.AbstractStringBuilder append(double a_r_g_u_m_e_n_t_0) ;
  public native java.lang.AbstractStringBuilder append(float a_r_g_u_m_e_n_t_0) ;
  public native java.lang.AbstractStringBuilder append(long a_r_g_u_m_e_n_t_0) ;
  public native java.lang.AbstractStringBuilder append(int a_r_g_u_m_e_n_t_0) ;
  public native java.lang.AbstractStringBuilder append(char a_r_g_u_m_e_n_t_0) ;
  public native java.lang.AbstractStringBuilder append(java.lang.Object a_r_g_u_m_e_n_t_0) ;
  public native java.lang.AbstractStringBuilder append(java.lang.String a_r_g_u_m_e_n_t_0) ;
  public native java.lang.AbstractStringBuilder append(java.lang.StringBuffer a_r_g_u_m_e_n_t_0) ;
  public native java.lang.AbstractStringBuilder append(java.lang.CharSequence a_r_g_u_m_e_n_t_0) ;
  public native java.lang.AbstractStringBuilder append(java.lang.CharSequence a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2) ;
  public native java.lang.AbstractStringBuilder append(char[] a_r_g_u_m_e_n_t_0) ;
  public native java.lang.AbstractStringBuilder append(boolean a_r_g_u_m_e_n_t_0) ;
  public native java.lang.AbstractStringBuilder append(char[] a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2) ;
  public native int length() ;
  public native char charAt(int a_r_g_u_m_e_n_t_0) ;
  public native int codePointAt(int a_r_g_u_m_e_n_t_0) ;
  public native int codePointBefore(int a_r_g_u_m_e_n_t_0) ;
  public native int codePointCount(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1) ;
  public native int offsetByCodePoints(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1) ;
  public native void getChars(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, char[] a_r_g_u_m_e_n_t_2, int a_r_g_u_m_e_n_t_3) ;
  public native int lastIndexOf(java.lang.String a_r_g_u_m_e_n_t_0) ;
  public native int lastIndexOf(java.lang.String a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1) ;
  public native java.lang.String substring(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1) ;
  public native java.lang.String substring(int a_r_g_u_m_e_n_t_0) ;
  public native java.lang.CharSequence subSequence(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1) ;
  public native java.lang.AbstractStringBuilder replace(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, java.lang.String a_r_g_u_m_e_n_t_2) ;
  final native char[] getValue() ;
  public native void trimToSize() ;
  public native void ensureCapacity(int a_r_g_u_m_e_n_t_0) ;
  public native int capacity() ;
  public native void setLength(int a_r_g_u_m_e_n_t_0) ;
  public native void setCharAt(int a_r_g_u_m_e_n_t_0, char a_r_g_u_m_e_n_t_1) ;
  public native java.lang.AbstractStringBuilder appendCodePoint(int a_r_g_u_m_e_n_t_0) ;
  public native java.lang.AbstractStringBuilder delete(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1) ;
  public native java.lang.AbstractStringBuilder deleteCharAt(int a_r_g_u_m_e_n_t_0) ;
  public native java.lang.AbstractStringBuilder insert(int a_r_g_u_m_e_n_t_0, char a_r_g_u_m_e_n_t_1) ;
  public native java.lang.AbstractStringBuilder insert(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1) ;
  public native java.lang.AbstractStringBuilder insert(int a_r_g_u_m_e_n_t_0, long a_r_g_u_m_e_n_t_1) ;
  public native java.lang.AbstractStringBuilder insert(int a_r_g_u_m_e_n_t_0, float a_r_g_u_m_e_n_t_1) ;
  public native java.lang.AbstractStringBuilder insert(int a_r_g_u_m_e_n_t_0, double a_r_g_u_m_e_n_t_1) ;
  public native java.lang.AbstractStringBuilder insert(int a_r_g_u_m_e_n_t_0, java.lang.String a_r_g_u_m_e_n_t_1) ;
  public native java.lang.AbstractStringBuilder insert(int a_r_g_u_m_e_n_t_0, java.lang.Object a_r_g_u_m_e_n_t_1) ;
  public native java.lang.AbstractStringBuilder insert(int a_r_g_u_m_e_n_t_0, char[] a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2, int a_r_g_u_m_e_n_t_3) ;
  public native java.lang.AbstractStringBuilder insert(int a_r_g_u_m_e_n_t_0, char[] a_r_g_u_m_e_n_t_1) ;
  public native java.lang.AbstractStringBuilder insert(int a_r_g_u_m_e_n_t_0, java.lang.CharSequence a_r_g_u_m_e_n_t_1) ;
  public native java.lang.AbstractStringBuilder insert(int a_r_g_u_m_e_n_t_0, java.lang.CharSequence a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2, int a_r_g_u_m_e_n_t_3) ;
  public native java.lang.AbstractStringBuilder insert(int a_r_g_u_m_e_n_t_0, boolean a_r_g_u_m_e_n_t_1) ;
  public native java.lang.AbstractStringBuilder reverse() ;
  native void expandCapacity(int a_r_g_u_m_e_n_t_0) ;
  static native int stringSizeOfInt(int a_r_g_u_m_e_n_t_0) ;
  static native int stringSizeOfLong(long a_r_g_u_m_e_n_t_0) ;
  char[] value;
  int count;
  static final int[] sizeTable;
}