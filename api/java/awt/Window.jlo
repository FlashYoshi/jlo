package java.awt;
public class Window extends java.awt.Container implements javax.accessibility.Accessible {
   public  Window(java.awt.Window a_r_g_u_m_e_n_t_0, java.awt.GraphicsConfiguration a_r_g_u_m_e_n_t_1){}
    Window(java.awt.GraphicsConfiguration a_r_g_u_m_e_n_t_0){}
    Window() throws java.awt.HeadlessException{}
   public  Window(java.awt.Frame a_r_g_u_m_e_n_t_0){}
   public  Window(java.awt.Window a_r_g_u_m_e_n_t_0){}
  public native void setSize(java.awt.Dimension a_r_g_u_m_e_n_t_0) ;
  public native void setSize(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1) ;
  public native java.awt.Window getOwner() ;
  public native void addPropertyChangeListener(java.lang.String a_r_g_u_m_e_n_t_0, java.beans.PropertyChangeListener a_r_g_u_m_e_n_t_1) ;
  public native void addPropertyChangeListener(java.beans.PropertyChangeListener a_r_g_u_m_e_n_t_0) ;
  public native void setMinimumSize(java.awt.Dimension a_r_g_u_m_e_n_t_0) ;
  public native void setVisible(boolean a_r_g_u_m_e_n_t_0) ;
  public native javax.accessibility.AccessibleContext getAccessibleContext() ;
  public native void reshape(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2, int a_r_g_u_m_e_n_t_3) ;
  public native <T extends java.util.EventListener>T[] getListeners(java.lang.Class<T> a_r_g_u_m_e_n_t_0) ;
  public native void addNotify() ;
  public native void removeNotify() ;
  public native void dispose() ;
  public final native boolean isFocusCycleRoot() ;
  public final native java.awt.Container getFocusCycleRootAncestor() ;
  public native void setBounds(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2, int a_r_g_u_m_e_n_t_3) ;
  public native void setBounds(java.awt.Rectangle a_r_g_u_m_e_n_t_0) ;
  public native boolean isShowing() ;
  native boolean canContainFocusOwner(java.awt.Component a_r_g_u_m_e_n_t_0) ;
  native void adjustDecendantsOnParent(int a_r_g_u_m_e_n_t_0) ;
  native boolean eventEnabled(java.awt.AWTEvent a_r_g_u_m_e_n_t_0) ;
  protected native void processEvent(java.awt.AWTEvent a_r_g_u_m_e_n_t_0) ;
  native void dispatchEventImpl(java.awt.AWTEvent a_r_g_u_m_e_n_t_0) ;
  public native java.util.Set<java.awt.AWTKeyStroke> getFocusTraversalKeys(int a_r_g_u_m_e_n_t_0) ;
  final native void clearMostRecentFocusOwnerOnHide() ;
  public final native void setFocusCycleRoot(boolean a_r_g_u_m_e_n_t_0) ;
  native void preProcessKeyEvent(java.awt.event.KeyEvent a_r_g_u_m_e_n_t_0) ;
  native void postProcessKeyEvent(java.awt.event.KeyEvent a_r_g_u_m_e_n_t_0) ;
  final native void mixOnReshaping() ;
  public native java.awt.GraphicsConfiguration getGraphicsConfiguration() ;
  public native java.awt.Component getFocusOwner() ;
  native void adjustListeningChildrenOnParent(long a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1) ;
  public native boolean postEvent(java.awt.Event a_r_g_u_m_e_n_t_0) ;
  native boolean isRecursivelyVisible() ;
  public native java.awt.Component getMostRecentFocusOwner() ;
  native java.awt.Component getTemporaryLostComponent() ;
  native java.awt.Component setTemporaryLostComponent(java.awt.Component a_r_g_u_m_e_n_t_0) ;
  final native java.awt.Container getContainer() ;
  final native void applyCurrentShape() ;
  native java.lang.String constructComponentName() ;
  native void resetGC() ;
  public native java.awt.Toolkit getToolkit() ;
  public native void show() ;
  public native void hide() ;
  public native java.util.Locale getLocale() ;
  public native void setCursor(java.awt.Cursor a_r_g_u_m_e_n_t_0) ;
  public native void createBufferStrategy(int a_r_g_u_m_e_n_t_0, java.awt.BufferCapabilities a_r_g_u_m_e_n_t_1)  throws java.awt.AWTException;
  public native void createBufferStrategy(int a_r_g_u_m_e_n_t_0) ;
  public native java.awt.image.BufferStrategy getBufferStrategy() ;
  native boolean dispatchMouseWheelToAncestor(java.awt.event.MouseWheelEvent a_r_g_u_m_e_n_t_0) ;
  public native java.awt.im.InputContext getInputContext() ;
  final native void applyCompoundShape(sun.java2d.pipe.Region a_r_g_u_m_e_n_t_0) ;
  final native java.awt.Point getLocationOnWindow() ;
  public final native boolean isFocusableWindow() ;
  native boolean isModalExcluded(java.awt.Dialog.ModalExclusionType a_r_g_u_m_e_n_t_0) ;
  public native void setModalExclusionType(java.awt.Dialog.ModalExclusionType a_r_g_u_m_e_n_t_0) ;
  public native java.awt.Dialog.ModalExclusionType getModalExclusionType() ;
  public native boolean isAlwaysOnTopSupported() ;
  native boolean isModalBlocked() ;
  public native boolean isActive() ;
  public native void pack() ;
  public native void toFront() ;
  public native void toBack() ;
  public final native java.lang.String getWarningString() ;
  public synchronized native void addWindowListener(java.awt.event.WindowListener a_r_g_u_m_e_n_t_0) ;
  public native void setLocationRelativeTo(java.awt.Component a_r_g_u_m_e_n_t_0) ;
  public native java.awt.Window[] getOwnedWindows() ;
  public native boolean isFocused() ;
  native void doDispose() ;
  public synchronized native void removeWindowFocusListener(java.awt.event.WindowFocusListener a_r_g_u_m_e_n_t_0) ;
  public synchronized native void addWindowFocusListener(java.awt.event.WindowFocusListener a_r_g_u_m_e_n_t_0) ;
  public synchronized native void removeWindowListener(java.awt.event.WindowListener a_r_g_u_m_e_n_t_0) ;
  public native java.util.List<java.awt.Image> getIconImages() ;
  public synchronized native void setIconImages(java.util.List<? extends java.awt.Image> a_r_g_u_m_e_n_t_0) ;
  public native void setIconImage(java.awt.Image a_r_g_u_m_e_n_t_0) ;
  native void setClientSize(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1) ;
  static native void updateChildFocusableWindowState(java.awt.Window a_r_g_u_m_e_n_t_0) ;
  synchronized native void postWindowEvent(int a_r_g_u_m_e_n_t_0) ;
  native void disposeImpl() ;
  final native void toFront_NoClientCode() ;
  final native void toBack_NoClientCode() ;
  final native java.awt.Window getOwner_NoClientCode() ;
  final native java.awt.Window[] getOwnedWindows_NoClientCode() ;
  native void setModalBlocked(java.awt.Dialog a_r_g_u_m_e_n_t_0, boolean a_r_g_u_m_e_n_t_1) ;
  native java.awt.Dialog getModalBlocker() ;
  static native sun.awt.util.IdentityArrayList<java.awt.Window> getAllWindows() ;
  static native sun.awt.util.IdentityArrayList<java.awt.Window> getAllUnblockedWindows() ;
  public static native java.awt.Window[] getWindows() ;
  public static native java.awt.Window[] getOwnerlessWindows() ;
  native java.awt.Window getDocumentRoot() ;
  native void updateChildrenBlocking() ;
  public synchronized native void addWindowStateListener(java.awt.event.WindowStateListener a_r_g_u_m_e_n_t_0) ;
  public synchronized native void removeWindowStateListener(java.awt.event.WindowStateListener a_r_g_u_m_e_n_t_0) ;
  public synchronized native java.awt.event.WindowListener[] getWindowListeners() ;
  public synchronized native java.awt.event.WindowFocusListener[] getWindowFocusListeners() ;
  public synchronized native java.awt.event.WindowStateListener[] getWindowStateListeners() ;
  protected native void processWindowEvent(java.awt.event.WindowEvent a_r_g_u_m_e_n_t_0) ;
  protected native void processWindowFocusEvent(java.awt.event.WindowEvent a_r_g_u_m_e_n_t_0) ;
  protected native void processWindowStateEvent(java.awt.event.WindowEvent a_r_g_u_m_e_n_t_0) ;
  public final native void setAlwaysOnTop(boolean a_r_g_u_m_e_n_t_0)  throws java.lang.SecurityException;
  public final native boolean isAlwaysOnTop() ;
  public native boolean getFocusableWindowState() ;
  public native void setFocusableWindowState(boolean a_r_g_u_m_e_n_t_0) ;
  public native void applyResourceBundle(java.lang.String a_r_g_u_m_e_n_t_0) ;
  public native void applyResourceBundle(java.util.ResourceBundle a_r_g_u_m_e_n_t_0) ;
  native void addOwnedWindow(java.lang.ref.WeakReference a_r_g_u_m_e_n_t_0) ;
  native void removeOwnedWindow(java.lang.ref.WeakReference a_r_g_u_m_e_n_t_0) ;
  native void connectOwnedWindow(java.awt.Window a_r_g_u_m_e_n_t_0) ;
  native void deliverMouseWheelToAncestor(java.awt.event.MouseWheelEvent a_r_g_u_m_e_n_t_0) ;
  public native void setLocationByPlatform(boolean a_r_g_u_m_e_n_t_0) ;
  public native boolean isLocationByPlatform() ;
  java.lang.String warningString;
  transient java.util.List<java.awt.Image> icons;
  static boolean systemSyncLWRequests;
  boolean syncLWRequests;
  transient boolean beforeFirstShow;
  static final int OPENED;
  int state;
  transient java.util.Vector<java.lang.ref.WeakReference<java.awt.Window>> ownedWindowList;
  transient boolean showWithParent;
  transient java.awt.Dialog modalBlocker;
  java.awt.Dialog.ModalExclusionType modalExclusionType;
  transient java.awt.event.WindowListener windowListener;
  transient java.awt.event.WindowStateListener windowStateListener;
  transient java.awt.event.WindowFocusListener windowFocusListener;
  transient java.awt.im.InputContext inputContext;
  transient boolean isInShow;
  transient boolean isTrayIconWindow;
  transient java.lang.Object anchor;
  protected class AccessibleAWTWindow extends java.awt.Container.AccessibleAWTContainer {
     protected  AccessibleAWTWindow(java.awt.Window a_r_g_u_m_e_n_t_0){}
    public native javax.accessibility.AccessibleStateSet getAccessibleStateSet() ;
    public native javax.accessibility.AccessibleRole getAccessibleRole() ;
    final java.awt.Window this$0;
  }
  static class WindowDisposerRecord extends java.lang.Object {
      WindowDisposerRecord(sun.awt.AppContext a_r_g_u_m_e_n_t_0, java.awt.Window a_r_g_u_m_e_n_t_1){}
    public native void dispose() ;
    final java.lang.ref.WeakReference<java.awt.Window> owner;
    final java.lang.ref.WeakReference weakThis;
    final java.lang.ref.WeakReference<sun.awt.AppContext> context;
  }
}