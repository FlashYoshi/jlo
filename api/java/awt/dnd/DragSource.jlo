package java.awt.dnd;
public class DragSource extends java.lang.Object implements java.io.Serializable {
   public  DragSource() throws java.awt.HeadlessException{}
  public native <T extends java.util.EventListener>T[] getListeners(java.lang.Class<T> a_r_g_u_m_e_n_t_0) ;
  public native <T extends java.awt.dnd.DragGestureRecognizer>T createDragGestureRecognizer(java.lang.Class<T> a_r_g_u_m_e_n_t_0, java.awt.Component a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2, java.awt.dnd.DragGestureListener a_r_g_u_m_e_n_t_3) ;
  public native java.awt.datatransfer.FlavorMap getFlavorMap() ;
  public native void startDrag(java.awt.dnd.DragGestureEvent a_r_g_u_m_e_n_t_0, java.awt.Cursor a_r_g_u_m_e_n_t_1, java.awt.Image a_r_g_u_m_e_n_t_2, java.awt.Point a_r_g_u_m_e_n_t_3, java.awt.datatransfer.Transferable a_r_g_u_m_e_n_t_4, java.awt.dnd.DragSourceListener a_r_g_u_m_e_n_t_5)  throws java.awt.dnd.InvalidDnDOperationException;
  public native void startDrag(java.awt.dnd.DragGestureEvent a_r_g_u_m_e_n_t_0, java.awt.Cursor a_r_g_u_m_e_n_t_1, java.awt.datatransfer.Transferable a_r_g_u_m_e_n_t_2, java.awt.dnd.DragSourceListener a_r_g_u_m_e_n_t_3)  throws java.awt.dnd.InvalidDnDOperationException;
  public native void startDrag(java.awt.dnd.DragGestureEvent a_r_g_u_m_e_n_t_0, java.awt.Cursor a_r_g_u_m_e_n_t_1, java.awt.datatransfer.Transferable a_r_g_u_m_e_n_t_2, java.awt.dnd.DragSourceListener a_r_g_u_m_e_n_t_3, java.awt.datatransfer.FlavorMap a_r_g_u_m_e_n_t_4)  throws java.awt.dnd.InvalidDnDOperationException;
  public native void startDrag(java.awt.dnd.DragGestureEvent a_r_g_u_m_e_n_t_0, java.awt.Cursor a_r_g_u_m_e_n_t_1, java.awt.Image a_r_g_u_m_e_n_t_2, java.awt.Point a_r_g_u_m_e_n_t_3, java.awt.datatransfer.Transferable a_r_g_u_m_e_n_t_4, java.awt.dnd.DragSourceListener a_r_g_u_m_e_n_t_5, java.awt.datatransfer.FlavorMap a_r_g_u_m_e_n_t_6)  throws java.awt.dnd.InvalidDnDOperationException;
  public static native java.awt.dnd.DragSource getDefaultDragSource() ;
  public static native boolean isDragImageSupported() ;
  protected native java.awt.dnd.DragSourceContext createDragSourceContext(java.awt.dnd.peer.DragSourceContextPeer a_r_g_u_m_e_n_t_0, java.awt.dnd.DragGestureEvent a_r_g_u_m_e_n_t_1, java.awt.Cursor a_r_g_u_m_e_n_t_2, java.awt.Image a_r_g_u_m_e_n_t_3, java.awt.Point a_r_g_u_m_e_n_t_4, java.awt.datatransfer.Transferable a_r_g_u_m_e_n_t_5, java.awt.dnd.DragSourceListener a_r_g_u_m_e_n_t_6) ;
  public native java.awt.dnd.DragGestureRecognizer createDefaultDragGestureRecognizer(java.awt.Component a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, java.awt.dnd.DragGestureListener a_r_g_u_m_e_n_t_2) ;
  public native void addDragSourceListener(java.awt.dnd.DragSourceListener a_r_g_u_m_e_n_t_0) ;
  public native void removeDragSourceListener(java.awt.dnd.DragSourceListener a_r_g_u_m_e_n_t_0) ;
  public native java.awt.dnd.DragSourceListener[] getDragSourceListeners() ;
  public native void addDragSourceMotionListener(java.awt.dnd.DragSourceMotionListener a_r_g_u_m_e_n_t_0) ;
  public native void removeDragSourceMotionListener(java.awt.dnd.DragSourceMotionListener a_r_g_u_m_e_n_t_0) ;
  public native java.awt.dnd.DragSourceMotionListener[] getDragSourceMotionListeners() ;
  native void processDragEnter(java.awt.dnd.DragSourceDragEvent a_r_g_u_m_e_n_t_0) ;
  native void processDragOver(java.awt.dnd.DragSourceDragEvent a_r_g_u_m_e_n_t_0) ;
  native void processDropActionChanged(java.awt.dnd.DragSourceDragEvent a_r_g_u_m_e_n_t_0) ;
  native void processDragExit(java.awt.dnd.DragSourceEvent a_r_g_u_m_e_n_t_0) ;
  native void processDragDropEnd(java.awt.dnd.DragSourceDropEvent a_r_g_u_m_e_n_t_0) ;
  native void processDragMouseMoved(java.awt.dnd.DragSourceDragEvent a_r_g_u_m_e_n_t_0) ;
  public static native int getDragThreshold() ;
  public static final java.awt.Cursor DefaultCopyDrop;
  public static final java.awt.Cursor DefaultMoveDrop;
  public static final java.awt.Cursor DefaultLinkDrop;
  public static final java.awt.Cursor DefaultCopyNoDrop;
  public static final java.awt.Cursor DefaultMoveNoDrop;
  public static final java.awt.Cursor DefaultLinkNoDrop;
  static final java.lang.String dragSourceListenerK;
  static final java.lang.String dragSourceMotionListenerK;
}