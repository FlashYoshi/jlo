package java.awt.font;
public abstract class GlyphVector extends java.lang.Object implements java.lang.Cloneable {
   public  GlyphVector(){}
  public abstract boolean equals(java.awt.font.GlyphVector a_r_g_u_m_e_n_t_0) ;
  public abstract java.awt.Font getFont() ;
  public abstract java.awt.font.FontRenderContext getFontRenderContext() ;
  public abstract int getNumGlyphs() ;
  public abstract java.awt.geom.Rectangle2D getLogicalBounds() ;
  public native java.awt.Rectangle getGlyphPixelBounds(int a_r_g_u_m_e_n_t_0, java.awt.font.FontRenderContext a_r_g_u_m_e_n_t_1, float a_r_g_u_m_e_n_t_2, float a_r_g_u_m_e_n_t_3) ;
  public abstract java.awt.font.GlyphMetrics getGlyphMetrics(int a_r_g_u_m_e_n_t_0) ;
  public abstract java.awt.Shape getGlyphOutline(int a_r_g_u_m_e_n_t_0) ;
  public native java.awt.Shape getGlyphOutline(int a_r_g_u_m_e_n_t_0, float a_r_g_u_m_e_n_t_1, float a_r_g_u_m_e_n_t_2) ;
  public abstract int getGlyphCode(int a_r_g_u_m_e_n_t_0) ;
  public abstract void performDefaultLayout() ;
  public abstract int[] getGlyphCodes(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, int[] a_r_g_u_m_e_n_t_2) ;
  public native int getGlyphCharIndex(int a_r_g_u_m_e_n_t_0) ;
  public native int[] getGlyphCharIndices(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, int[] a_r_g_u_m_e_n_t_2) ;
  public abstract java.awt.geom.Rectangle2D getVisualBounds() ;
  public native java.awt.Rectangle getPixelBounds(java.awt.font.FontRenderContext a_r_g_u_m_e_n_t_0, float a_r_g_u_m_e_n_t_1, float a_r_g_u_m_e_n_t_2) ;
  public abstract java.awt.Shape getOutline() ;
  public abstract java.awt.Shape getOutline(float a_r_g_u_m_e_n_t_0, float a_r_g_u_m_e_n_t_1) ;
  public abstract java.awt.geom.Point2D getGlyphPosition(int a_r_g_u_m_e_n_t_0) ;
  public abstract void setGlyphPosition(int a_r_g_u_m_e_n_t_0, java.awt.geom.Point2D a_r_g_u_m_e_n_t_1) ;
  public abstract java.awt.geom.AffineTransform getGlyphTransform(int a_r_g_u_m_e_n_t_0) ;
  public abstract void setGlyphTransform(int a_r_g_u_m_e_n_t_0, java.awt.geom.AffineTransform a_r_g_u_m_e_n_t_1) ;
  public native int getLayoutFlags() ;
  public abstract float[] getGlyphPositions(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, float[] a_r_g_u_m_e_n_t_2) ;
  public abstract java.awt.Shape getGlyphLogicalBounds(int a_r_g_u_m_e_n_t_0) ;
  public abstract java.awt.Shape getGlyphVisualBounds(int a_r_g_u_m_e_n_t_0) ;
  public abstract java.awt.font.GlyphJustificationInfo getGlyphJustificationInfo(int a_r_g_u_m_e_n_t_0) ;
  public static final int FLAG_HAS_TRANSFORMS;
  public static final int FLAG_HAS_POSITION_ADJUSTMENTS;
  public static final int FLAG_RUN_RTL;
  public static final int FLAG_COMPLEX_GLYPHS;
  public static final int FLAG_MASK;
}