package java.awt.image;
public class MemoryImageSource extends java.lang.Object implements java.awt.image.ImageProducer {
   public  MemoryImageSource(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, java.awt.image.ColorModel a_r_g_u_m_e_n_t_2, byte[] a_r_g_u_m_e_n_t_3, int a_r_g_u_m_e_n_t_4, int a_r_g_u_m_e_n_t_5){}
   public  MemoryImageSource(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, java.awt.image.ColorModel a_r_g_u_m_e_n_t_2, int[] a_r_g_u_m_e_n_t_3, int a_r_g_u_m_e_n_t_4, int a_r_g_u_m_e_n_t_5){}
   public  MemoryImageSource(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, java.awt.image.ColorModel a_r_g_u_m_e_n_t_2, int[] a_r_g_u_m_e_n_t_3, int a_r_g_u_m_e_n_t_4, int a_r_g_u_m_e_n_t_5, java.util.Hashtable<? extends java.lang.Object,? extends java.lang.Object> a_r_g_u_m_e_n_t_6){}
   public  MemoryImageSource(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, int[] a_r_g_u_m_e_n_t_2, int a_r_g_u_m_e_n_t_3, int a_r_g_u_m_e_n_t_4){}
   public  MemoryImageSource(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, int[] a_r_g_u_m_e_n_t_2, int a_r_g_u_m_e_n_t_3, int a_r_g_u_m_e_n_t_4, java.util.Hashtable<? extends java.lang.Object,? extends java.lang.Object> a_r_g_u_m_e_n_t_5){}
   public  MemoryImageSource(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, java.awt.image.ColorModel a_r_g_u_m_e_n_t_2, byte[] a_r_g_u_m_e_n_t_3, int a_r_g_u_m_e_n_t_4, int a_r_g_u_m_e_n_t_5, java.util.Hashtable<? extends java.lang.Object,? extends java.lang.Object> a_r_g_u_m_e_n_t_6){}
  public native void requestTopDownLeftRightResend(java.awt.image.ImageConsumer a_r_g_u_m_e_n_t_0) ;
  public synchronized native void addConsumer(java.awt.image.ImageConsumer a_r_g_u_m_e_n_t_0) ;
  public synchronized native boolean isConsumer(java.awt.image.ImageConsumer a_r_g_u_m_e_n_t_0) ;
  public synchronized native void removeConsumer(java.awt.image.ImageConsumer a_r_g_u_m_e_n_t_0) ;
  public native void startProduction(java.awt.image.ImageConsumer a_r_g_u_m_e_n_t_0) ;
  public synchronized native void setAnimated(boolean a_r_g_u_m_e_n_t_0) ;
  public synchronized native void setFullBufferUpdates(boolean a_r_g_u_m_e_n_t_0) ;
  public synchronized native void newPixels(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2, int a_r_g_u_m_e_n_t_3) ;
  public synchronized native void newPixels(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2, int a_r_g_u_m_e_n_t_3, boolean a_r_g_u_m_e_n_t_4) ;
  public native void newPixels() ;
  public synchronized native void newPixels(int[] a_r_g_u_m_e_n_t_0, java.awt.image.ColorModel a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2, int a_r_g_u_m_e_n_t_3) ;
  public synchronized native void newPixels(byte[] a_r_g_u_m_e_n_t_0, java.awt.image.ColorModel a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2, int a_r_g_u_m_e_n_t_3) ;
  int width;
  int height;
  java.awt.image.ColorModel model;
  java.lang.Object pixels;
  int pixeloffset;
  int pixelscan;
  java.util.Hashtable properties;
  java.util.Vector theConsumers;
  boolean animating;
  boolean fullbuffers;
}