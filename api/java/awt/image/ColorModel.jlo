package java.awt.image;
public abstract class ColorModel extends java.lang.Object implements java.awt.Transparency {
   public  ColorModel(int a_r_g_u_m_e_n_t_0){}
   protected  ColorModel(int a_r_g_u_m_e_n_t_0, int[] a_r_g_u_m_e_n_t_1, java.awt.color.ColorSpace a_r_g_u_m_e_n_t_2, boolean a_r_g_u_m_e_n_t_3, boolean a_r_g_u_m_e_n_t_4, int a_r_g_u_m_e_n_t_5, int a_r_g_u_m_e_n_t_6){}
  public native void finalize() ;
  public native int hashCode() ;
  public native boolean equals(java.lang.Object a_r_g_u_m_e_n_t_0) ;
  public native java.lang.String toString() ;
  public native int[] getComponents(int a_r_g_u_m_e_n_t_0, int[] a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2) ;
  public native int[] getComponents(java.lang.Object a_r_g_u_m_e_n_t_0, int[] a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2) ;
  static native void loadLibraries() ;
  public static native java.awt.image.ColorModel getRGBdefault() ;
  public final native boolean hasAlpha() ;
  public abstract int getRed(int a_r_g_u_m_e_n_t_0) ;
  public native int getRed(java.lang.Object a_r_g_u_m_e_n_t_0) ;
  public native int getGreen(java.lang.Object a_r_g_u_m_e_n_t_0) ;
  public abstract int getGreen(int a_r_g_u_m_e_n_t_0) ;
  public native int getBlue(java.lang.Object a_r_g_u_m_e_n_t_0) ;
  public abstract int getBlue(int a_r_g_u_m_e_n_t_0) ;
  public native int getAlpha(java.lang.Object a_r_g_u_m_e_n_t_0) ;
  public abstract int getAlpha(int a_r_g_u_m_e_n_t_0) ;
  public native int getRGB(int a_r_g_u_m_e_n_t_0) ;
  public native int getRGB(java.lang.Object a_r_g_u_m_e_n_t_0) ;
  public final native java.awt.color.ColorSpace getColorSpace() ;
  public native int getTransparency() ;
  public native int getNumComponents() ;
  public native java.awt.image.WritableRaster createCompatibleWritableRaster(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1) ;
  public final native boolean isAlphaPremultiplied() ;
  public final native int getTransferType() ;
  public native java.lang.Object getDataElements(float[] a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, java.lang.Object a_r_g_u_m_e_n_t_2) ;
  public native java.lang.Object getDataElements(int a_r_g_u_m_e_n_t_0, java.lang.Object a_r_g_u_m_e_n_t_1) ;
  public native java.lang.Object getDataElements(int[] a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, java.lang.Object a_r_g_u_m_e_n_t_2) ;
  public native java.awt.image.SampleModel createCompatibleSampleModel(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1) ;
  public native java.awt.image.WritableRaster getAlphaRaster(java.awt.image.WritableRaster a_r_g_u_m_e_n_t_0) ;
  public native java.awt.image.ColorModel coerceData(java.awt.image.WritableRaster a_r_g_u_m_e_n_t_0, boolean a_r_g_u_m_e_n_t_1) ;
  public native boolean isCompatibleRaster(java.awt.image.Raster a_r_g_u_m_e_n_t_0) ;
  public native int[] getComponentSize() ;
  public native int getComponentSize(int a_r_g_u_m_e_n_t_0) ;
  public native int getPixelSize() ;
  public native int getNumColorComponents() ;
  public native int[] getUnnormalizedComponents(float[] a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, int[] a_r_g_u_m_e_n_t_2, int a_r_g_u_m_e_n_t_3) ;
  public native float[] getNormalizedComponents(java.lang.Object a_r_g_u_m_e_n_t_0, float[] a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2) ;
  public native float[] getNormalizedComponents(int[] a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, float[] a_r_g_u_m_e_n_t_2, int a_r_g_u_m_e_n_t_3) ;
  public native int getDataElement(float[] a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1) ;
  public native int getDataElement(int[] a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1) ;
  public native boolean isCompatibleSampleModel(java.awt.image.SampleModel a_r_g_u_m_e_n_t_0) ;
  static native int getDefaultTransferType(int a_r_g_u_m_e_n_t_0) ;
  static native boolean isLinearRGBspace(java.awt.color.ColorSpace a_r_g_u_m_e_n_t_0) ;
  static native boolean isLinearGRAYspace(java.awt.color.ColorSpace a_r_g_u_m_e_n_t_0) ;
  static native byte[] getLinearRGB8TosRGB8LUT() ;
  static native byte[] getsRGB8ToLinearRGB8LUT() ;
  static native byte[] getLinearRGB16TosRGB8LUT() ;
  static native short[] getsRGB8ToLinearRGB16LUT() ;
  static native byte[] getGray8TosRGB8LUT(java.awt.color.ICC_ColorSpace a_r_g_u_m_e_n_t_0) ;
  static native byte[] getLinearGray16ToOtherGray8LUT(java.awt.color.ICC_ColorSpace a_r_g_u_m_e_n_t_0) ;
  static native byte[] getGray16TosRGB8LUT(java.awt.color.ICC_ColorSpace a_r_g_u_m_e_n_t_0) ;
  static native short[] getLinearGray16ToOtherGray16LUT(java.awt.color.ICC_ColorSpace a_r_g_u_m_e_n_t_0) ;
  protected int pixel_bits;
  int[] nBits;
  int transparency;
  boolean supportsAlpha;
  boolean isAlphaPremultiplied;
  int numComponents;
  int numColorComponents;
  java.awt.color.ColorSpace colorSpace;
  int colorSpaceType;
  int maxBits;
  boolean is_sRGB;
  protected int transferType;
  static byte[] l8Tos8;
  static byte[] s8Tol8;
  static byte[] l16Tos8;
  static short[] s8Tol16;
  static java.util.Map g8Tos8Map;
  static java.util.Map lg16Toog8Map;
  static java.util.Map g16Tos8Map;
  static java.util.Map lg16Toog16Map;
}