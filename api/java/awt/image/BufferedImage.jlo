package java.awt.image;
public class BufferedImage extends java.awt.Image implements java.awt.image.WritableRenderedImage, java.awt.Transparency {
   public  BufferedImage(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2){}
   public  BufferedImage(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2, java.awt.image.IndexColorModel a_r_g_u_m_e_n_t_3){}
   public  BufferedImage(java.awt.image.ColorModel a_r_g_u_m_e_n_t_0, java.awt.image.WritableRaster a_r_g_u_m_e_n_t_1, boolean a_r_g_u_m_e_n_t_2, java.util.Hashtable<? extends java.lang.Object,? extends java.lang.Object> a_r_g_u_m_e_n_t_3){}
  public native java.lang.Object getProperty(java.lang.String a_r_g_u_m_e_n_t_0) ;
  public native java.lang.Object getProperty(java.lang.String a_r_g_u_m_e_n_t_0, java.awt.image.ImageObserver a_r_g_u_m_e_n_t_1) ;
  public native java.lang.String toString() ;
  public native int getType() ;
  public native java.awt.image.Raster getData(java.awt.Rectangle a_r_g_u_m_e_n_t_0) ;
  public native java.awt.image.Raster getData() ;
  public native java.awt.image.ImageProducer getSource() ;
  public native java.awt.Graphics getGraphics() ;
  public native int getWidth() ;
  public native int getWidth(java.awt.image.ImageObserver a_r_g_u_m_e_n_t_0) ;
  public native int getHeight(java.awt.image.ImageObserver a_r_g_u_m_e_n_t_0) ;
  public native int getHeight() ;
  public native java.awt.image.ColorModel getColorModel() ;
  public native int getMinX() ;
  public native int getMinY() ;
  public native java.awt.Graphics2D createGraphics() ;
  public native java.awt.image.WritableRaster getRaster() ;
  public native int[] getRGB(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2, int a_r_g_u_m_e_n_t_3, int[] a_r_g_u_m_e_n_t_4, int a_r_g_u_m_e_n_t_5, int a_r_g_u_m_e_n_t_6) ;
  public native int getRGB(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1) ;
  public native int getTransparency() ;
  public native boolean isAlphaPremultiplied() ;
  public native java.awt.image.SampleModel getSampleModel() ;
  public native java.awt.image.WritableRaster getAlphaRaster() ;
  public synchronized native void setRGB(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2) ;
  public native void setRGB(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2, int a_r_g_u_m_e_n_t_3, int[] a_r_g_u_m_e_n_t_4, int a_r_g_u_m_e_n_t_5, int a_r_g_u_m_e_n_t_6) ;
  public native java.awt.image.BufferedImage getSubimage(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2, int a_r_g_u_m_e_n_t_3) ;
  public native void coerceData(boolean a_r_g_u_m_e_n_t_0) ;
  public native java.util.Vector<java.awt.image.RenderedImage> getSources() ;
  public native java.lang.String[] getPropertyNames() ;
  public native int getNumXTiles() ;
  public native int getNumYTiles() ;
  public native int getMinTileX() ;
  public native int getMinTileY() ;
  public native int getTileWidth() ;
  public native int getTileHeight() ;
  public native int getTileGridXOffset() ;
  public native int getTileGridYOffset() ;
  public native java.awt.image.Raster getTile(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1) ;
  public native java.awt.image.WritableRaster copyData(java.awt.image.WritableRaster a_r_g_u_m_e_n_t_0) ;
  public native void setData(java.awt.image.Raster a_r_g_u_m_e_n_t_0) ;
  public native void addTileObserver(java.awt.image.TileObserver a_r_g_u_m_e_n_t_0) ;
  public native void removeTileObserver(java.awt.image.TileObserver a_r_g_u_m_e_n_t_0) ;
  public native boolean isTileWritable(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1) ;
  public native java.awt.Point[] getWritableTileIndices() ;
  public native boolean hasTileWriters() ;
  public native java.awt.image.WritableRaster getWritableTile(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1) ;
  public native void releaseWritableTile(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1) ;
  int imageType;
  java.awt.image.ColorModel colorModel;
  java.awt.image.WritableRaster raster;
  sun.awt.image.OffScreenImageSource osis;
  java.util.Hashtable properties;
  boolean isAlphaPremultiplied;
  sun.java2d.SurfaceData sData;
  public static final int TYPE_CUSTOM;
  public static final int TYPE_INT_RGB;
  public static final int TYPE_INT_ARGB;
  public static final int TYPE_INT_ARGB_PRE;
  public static final int TYPE_INT_BGR;
  public static final int TYPE_3BYTE_BGR;
  public static final int TYPE_4BYTE_ABGR;
  public static final int TYPE_4BYTE_ABGR_PRE;
  public static final int TYPE_USHORT_565_RGB;
  public static final int TYPE_USHORT_555_RGB;
  public static final int TYPE_BYTE_GRAY;
  public static final int TYPE_USHORT_GRAY;
  public static final int TYPE_BYTE_BINARY;
  public static final int TYPE_BYTE_INDEXED;
}