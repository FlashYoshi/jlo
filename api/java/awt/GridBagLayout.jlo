package java.awt;
public class GridBagLayout extends java.lang.Object implements java.awt.LayoutManager2, java.io.Serializable {
   public  GridBagLayout(){}
  public native java.lang.String toString() ;
  public native java.awt.Point location(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1) ;
  public native void removeLayoutComponent(java.awt.Component a_r_g_u_m_e_n_t_0) ;
  public native void addLayoutComponent(java.awt.Component a_r_g_u_m_e_n_t_0, java.lang.Object a_r_g_u_m_e_n_t_1) ;
  public native void addLayoutComponent(java.lang.String a_r_g_u_m_e_n_t_0, java.awt.Component a_r_g_u_m_e_n_t_1) ;
  public native void layoutContainer(java.awt.Container a_r_g_u_m_e_n_t_0) ;
  public native void invalidateLayout(java.awt.Container a_r_g_u_m_e_n_t_0) ;
  public native java.awt.Dimension preferredLayoutSize(java.awt.Container a_r_g_u_m_e_n_t_0) ;
  public native java.awt.Dimension minimumLayoutSize(java.awt.Container a_r_g_u_m_e_n_t_0) ;
  public native java.awt.Dimension maximumLayoutSize(java.awt.Container a_r_g_u_m_e_n_t_0) ;
  public native float getLayoutAlignmentX(java.awt.Container a_r_g_u_m_e_n_t_0) ;
  public native float getLayoutAlignmentY(java.awt.Container a_r_g_u_m_e_n_t_0) ;
  public native java.awt.GridBagConstraints getConstraints(java.awt.Component a_r_g_u_m_e_n_t_0) ;
  public native void setConstraints(java.awt.Component a_r_g_u_m_e_n_t_0, java.awt.GridBagConstraints a_r_g_u_m_e_n_t_1) ;
  protected native java.awt.GridBagConstraints lookupConstraints(java.awt.Component a_r_g_u_m_e_n_t_0) ;
  public native java.awt.Point getLayoutOrigin() ;
  public native int[][] getLayoutDimensions() ;
  public native double[][] getLayoutWeights() ;
  protected native java.awt.GridBagLayoutInfo getLayoutInfo(java.awt.Container a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1) ;
  protected native java.awt.GridBagLayoutInfo GetLayoutInfo(java.awt.Container a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1) ;
  protected native void adjustForGravity(java.awt.GridBagConstraints a_r_g_u_m_e_n_t_0, java.awt.Rectangle a_r_g_u_m_e_n_t_1) ;
  protected native void AdjustForGravity(java.awt.GridBagConstraints a_r_g_u_m_e_n_t_0, java.awt.Rectangle a_r_g_u_m_e_n_t_1) ;
  protected native java.awt.Dimension getMinSize(java.awt.Container a_r_g_u_m_e_n_t_0, java.awt.GridBagLayoutInfo a_r_g_u_m_e_n_t_1) ;
  protected native java.awt.Dimension GetMinSize(java.awt.Container a_r_g_u_m_e_n_t_0, java.awt.GridBagLayoutInfo a_r_g_u_m_e_n_t_1) ;
  protected native void arrangeGrid(java.awt.Container a_r_g_u_m_e_n_t_0) ;
  protected native void ArrangeGrid(java.awt.Container a_r_g_u_m_e_n_t_0) ;
  static final int EMPIRICMULTIPLIER;
  protected static final int MAXGRIDSIZE;
  protected static final int MINSIZE;
  protected static final int PREFERREDSIZE;
  protected java.util.Hashtable<java.awt.Component,java.awt.GridBagConstraints> comptable;
  protected java.awt.GridBagConstraints defaultConstraints;
  protected java.awt.GridBagLayoutInfo layoutInfo;
  public int[] columnWidths;
  public int[] rowHeights;
  public double[] columnWeights;
  public double[] rowWeights;
  transient boolean rightToLeft;
  static final long serialVersionUID;
}