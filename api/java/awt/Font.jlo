package java.awt;
public class Font extends java.lang.Object implements java.io.Serializable {
   protected  Font(java.awt.Font a_r_g_u_m_e_n_t_0){}
   public  Font(java.util.Map<? extends java.text.AttributedCharacterIterator.Attribute,? extends java.lang.Object> a_r_g_u_m_e_n_t_0){}
   public  Font(java.lang.String a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2){}
  protected native void finalize()  throws java.lang.Throwable;
  public native int hashCode() ;
  public native boolean equals(java.lang.Object a_r_g_u_m_e_n_t_0) ;
  public native java.lang.String toString() ;
  public native java.lang.String getName() ;
  public static native java.awt.Font decode(java.lang.String a_r_g_u_m_e_n_t_0) ;
  public native int getSize() ;
  public native java.util.Map<java.awt.font.TextAttribute,? extends java.lang.Object> getAttributes() ;
  public static native java.awt.Font getFont(java.util.Map<? extends java.text.AttributedCharacterIterator.Attribute,? extends java.lang.Object> a_r_g_u_m_e_n_t_0) ;
  public static native java.awt.Font getFont(java.lang.String a_r_g_u_m_e_n_t_0) ;
  public static native java.awt.Font getFont(java.lang.String a_r_g_u_m_e_n_t_0, java.awt.Font a_r_g_u_m_e_n_t_1) ;
  public native java.awt.peer.FontPeer getPeer() ;
  public native boolean hasUniformLineMetrics() ;
  public native java.awt.font.LineMetrics getLineMetrics(java.lang.String a_r_g_u_m_e_n_t_0, java.awt.font.FontRenderContext a_r_g_u_m_e_n_t_1) ;
  public native java.awt.font.LineMetrics getLineMetrics(java.text.CharacterIterator a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2, java.awt.font.FontRenderContext a_r_g_u_m_e_n_t_3) ;
  public native java.awt.font.LineMetrics getLineMetrics(java.lang.String a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2, java.awt.font.FontRenderContext a_r_g_u_m_e_n_t_3) ;
  public native java.awt.font.LineMetrics getLineMetrics(char[] a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2, java.awt.font.FontRenderContext a_r_g_u_m_e_n_t_3) ;
  public native java.awt.geom.Rectangle2D getStringBounds(char[] a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2, java.awt.font.FontRenderContext a_r_g_u_m_e_n_t_3) ;
  public native java.awt.geom.Rectangle2D getStringBounds(java.text.CharacterIterator a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2, java.awt.font.FontRenderContext a_r_g_u_m_e_n_t_3) ;
  public native java.awt.geom.Rectangle2D getStringBounds(java.lang.String a_r_g_u_m_e_n_t_0, java.awt.font.FontRenderContext a_r_g_u_m_e_n_t_1) ;
  public native java.awt.geom.Rectangle2D getStringBounds(java.lang.String a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2, java.awt.font.FontRenderContext a_r_g_u_m_e_n_t_3) ;
  public native java.awt.geom.Rectangle2D getMaxCharBounds(java.awt.font.FontRenderContext a_r_g_u_m_e_n_t_0) ;
  public native boolean hasLayoutAttributes() ;
  final native java.awt.peer.FontPeer getPeer_NoClientCode() ;
  public static native java.awt.Font createFont(int a_r_g_u_m_e_n_t_0, java.io.InputStream a_r_g_u_m_e_n_t_1)  throws java.awt.FontFormatException, java.io.IOException;
  public static native java.awt.Font createFont(int a_r_g_u_m_e_n_t_0, java.io.File a_r_g_u_m_e_n_t_1)  throws java.awt.FontFormatException, java.io.IOException;
  public native java.awt.geom.AffineTransform getTransform() ;
  public native java.lang.String getFamily(java.util.Locale a_r_g_u_m_e_n_t_0) ;
  public native java.lang.String getFamily() ;
  final native java.lang.String getFamily_NoClientCode() ;
  public native java.lang.String getPSName() ;
  public native java.lang.String getFontName() ;
  public native java.lang.String getFontName(java.util.Locale a_r_g_u_m_e_n_t_0) ;
  public native int getStyle() ;
  public native float getSize2D() ;
  public native boolean isPlain() ;
  public native boolean isBold() ;
  public native boolean isItalic() ;
  public native boolean isTransformed() ;
  public native int getNumGlyphs() ;
  public native int getMissingGlyphCode() ;
  public native byte getBaselineFor(char a_r_g_u_m_e_n_t_0) ;
  public native java.text.AttributedCharacterIterator.Attribute[] getAvailableAttributes() ;
  public native java.awt.Font deriveFont(int a_r_g_u_m_e_n_t_0, float a_r_g_u_m_e_n_t_1) ;
  public native java.awt.Font deriveFont(java.util.Map<? extends java.text.AttributedCharacterIterator.Attribute,? extends java.lang.Object> a_r_g_u_m_e_n_t_0) ;
  public native java.awt.Font deriveFont(int a_r_g_u_m_e_n_t_0) ;
  public native java.awt.Font deriveFont(java.awt.geom.AffineTransform a_r_g_u_m_e_n_t_0) ;
  public native java.awt.Font deriveFont(float a_r_g_u_m_e_n_t_0) ;
  public native java.awt.Font deriveFont(int a_r_g_u_m_e_n_t_0, java.awt.geom.AffineTransform a_r_g_u_m_e_n_t_1) ;
  public native boolean canDisplay(int a_r_g_u_m_e_n_t_0) ;
  public native boolean canDisplay(char a_r_g_u_m_e_n_t_0) ;
  public native int canDisplayUpTo(java.text.CharacterIterator a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2) ;
  public native int canDisplayUpTo(char[] a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2) ;
  public native int canDisplayUpTo(java.lang.String a_r_g_u_m_e_n_t_0) ;
  public native float getItalicAngle() ;
  public native java.awt.font.GlyphVector createGlyphVector(java.awt.font.FontRenderContext a_r_g_u_m_e_n_t_0, int[] a_r_g_u_m_e_n_t_1) ;
  public native java.awt.font.GlyphVector createGlyphVector(java.awt.font.FontRenderContext a_r_g_u_m_e_n_t_0, java.lang.String a_r_g_u_m_e_n_t_1) ;
  public native java.awt.font.GlyphVector createGlyphVector(java.awt.font.FontRenderContext a_r_g_u_m_e_n_t_0, char[] a_r_g_u_m_e_n_t_1) ;
  public native java.awt.font.GlyphVector createGlyphVector(java.awt.font.FontRenderContext a_r_g_u_m_e_n_t_0, java.text.CharacterIterator a_r_g_u_m_e_n_t_1) ;
  public native java.awt.font.GlyphVector layoutGlyphVector(java.awt.font.FontRenderContext a_r_g_u_m_e_n_t_0, char[] a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2, int a_r_g_u_m_e_n_t_3, int a_r_g_u_m_e_n_t_4) ;
  public static final java.lang.String DIALOG;
  public static final java.lang.String DIALOG_INPUT;
  public static final java.lang.String SANS_SERIF;
  public static final java.lang.String SERIF;
  public static final java.lang.String MONOSPACED;
  public static final int PLAIN;
  public static final int BOLD;
  public static final int ITALIC;
  public static final int ROMAN_BASELINE;
  public static final int CENTER_BASELINE;
  public static final int HANGING_BASELINE;
  public static final int TRUETYPE_FONT;
  public static final int TYPE1_FONT;
  protected java.lang.String name;
  protected int style;
  protected int size;
  protected float pointSize;
  transient int hash;
  public static final int LAYOUT_LEFT_TO_RIGHT;
  public static final int LAYOUT_RIGHT_TO_LEFT;
  public static final int LAYOUT_NO_START_CONTEXT;
  public static final int LAYOUT_NO_LIMIT_CONTEXT;
}