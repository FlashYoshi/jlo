package java.sql;
public abstract interface Statement {
  public abstract void close()  throws java.sql.SQLException;
  public abstract boolean isClosed()  throws java.sql.SQLException;
  public abstract boolean execute(java.lang.String a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract boolean execute(java.lang.String a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract boolean execute(java.lang.String a_r_g_u_m_e_n_t_0, int[] a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract boolean execute(java.lang.String a_r_g_u_m_e_n_t_0, java.lang.String[] a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract void cancel()  throws java.sql.SQLException;
  public abstract java.sql.Connection getConnection()  throws java.sql.SQLException;
  public abstract java.sql.ResultSet getResultSet()  throws java.sql.SQLException;
  public abstract java.sql.SQLWarning getWarnings()  throws java.sql.SQLException;
  public abstract void clearWarnings()  throws java.sql.SQLException;
  public abstract void setFetchDirection(int a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract int getFetchDirection()  throws java.sql.SQLException;
  public abstract void setFetchSize(int a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract int getFetchSize()  throws java.sql.SQLException;
  public abstract int getMaxFieldSize()  throws java.sql.SQLException;
  public abstract void setMaxFieldSize(int a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract int getMaxRows()  throws java.sql.SQLException;
  public abstract void setMaxRows(int a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract void setEscapeProcessing(boolean a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract int getQueryTimeout()  throws java.sql.SQLException;
  public abstract void setQueryTimeout(int a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract java.sql.ResultSet executeQuery(java.lang.String a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract int executeUpdate(java.lang.String a_r_g_u_m_e_n_t_0, int[] a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract int executeUpdate(java.lang.String a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract int executeUpdate(java.lang.String a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract int executeUpdate(java.lang.String a_r_g_u_m_e_n_t_0, java.lang.String[] a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract void addBatch(java.lang.String a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract void setCursorName(java.lang.String a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract int getUpdateCount()  throws java.sql.SQLException;
  public abstract boolean getMoreResults(int a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract boolean getMoreResults()  throws java.sql.SQLException;
  public abstract int getResultSetConcurrency()  throws java.sql.SQLException;
  public abstract int getResultSetType()  throws java.sql.SQLException;
  public abstract void clearBatch()  throws java.sql.SQLException;
  public abstract int[] executeBatch()  throws java.sql.SQLException;
  public abstract java.sql.ResultSet getGeneratedKeys()  throws java.sql.SQLException;
  public abstract int getResultSetHoldability()  throws java.sql.SQLException;
  public abstract void setPoolable(boolean a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract boolean isPoolable()  throws java.sql.SQLException;
  public static final int CLOSE_CURRENT_RESULT;
  public static final int KEEP_CURRENT_RESULT;
  public static final int CLOSE_ALL_RESULTS;
  public static final int SUCCESS_NO_INFO;
  public static final int EXECUTE_FAILED;
  public static final int RETURN_GENERATED_KEYS;
  public static final int NO_GENERATED_KEYS;
}