package java.sql;
public abstract interface ResultSet {
  public abstract java.lang.Object getObject(int a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract java.lang.Object getObject(java.lang.String a_r_g_u_m_e_n_t_0, java.util.Map<java.lang.String,java.lang.Class<? extends java.lang.Object>> a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract java.lang.Object getObject(java.lang.String a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract java.lang.Object getObject(int a_r_g_u_m_e_n_t_0, java.util.Map<java.lang.String,java.lang.Class<? extends java.lang.Object>> a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract boolean getBoolean(java.lang.String a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract boolean getBoolean(int a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract byte getByte(java.lang.String a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract byte getByte(int a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract short getShort(int a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract short getShort(java.lang.String a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract int getInt(java.lang.String a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract int getInt(int a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract long getLong(int a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract long getLong(java.lang.String a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract float getFloat(java.lang.String a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract float getFloat(int a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract double getDouble(java.lang.String a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract double getDouble(int a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract byte[] getBytes(int a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract byte[] getBytes(java.lang.String a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract java.sql.Array getArray(int a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract java.sql.Array getArray(java.lang.String a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract boolean next()  throws java.sql.SQLException;
  public abstract java.net.URL getURL(java.lang.String a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract java.net.URL getURL(int a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract void close()  throws java.sql.SQLException;
  public abstract int getType()  throws java.sql.SQLException;
  public abstract boolean previous()  throws java.sql.SQLException;
  public abstract java.sql.Ref getRef(java.lang.String a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract java.sql.Ref getRef(int a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract java.lang.String getString(java.lang.String a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract java.lang.String getString(int a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract boolean isFirst()  throws java.sql.SQLException;
  public abstract java.sql.Time getTime(java.lang.String a_r_g_u_m_e_n_t_0, java.util.Calendar a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract java.sql.Time getTime(java.lang.String a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract java.sql.Time getTime(int a_r_g_u_m_e_n_t_0, java.util.Calendar a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract java.sql.Time getTime(int a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract java.sql.Date getDate(int a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract java.sql.Date getDate(java.lang.String a_r_g_u_m_e_n_t_0, java.util.Calendar a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract java.sql.Date getDate(int a_r_g_u_m_e_n_t_0, java.util.Calendar a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract java.sql.Date getDate(java.lang.String a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract boolean isClosed()  throws java.sql.SQLException;
  public abstract java.sql.Timestamp getTimestamp(java.lang.String a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract java.sql.Timestamp getTimestamp(int a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract java.sql.Timestamp getTimestamp(java.lang.String a_r_g_u_m_e_n_t_0, java.util.Calendar a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract java.sql.Timestamp getTimestamp(int a_r_g_u_m_e_n_t_0, java.util.Calendar a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract boolean last()  throws java.sql.SQLException;
  public abstract boolean first()  throws java.sql.SQLException;
  public abstract void updateBytes(java.lang.String a_r_g_u_m_e_n_t_0, byte[] a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract void updateBytes(int a_r_g_u_m_e_n_t_0, byte[] a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract int findColumn(java.lang.String a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract boolean wasNull()  throws java.sql.SQLException;
  public abstract java.math.BigDecimal getBigDecimal(int a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract java.math.BigDecimal getBigDecimal(java.lang.String a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract java.math.BigDecimal getBigDecimal(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract java.math.BigDecimal getBigDecimal(java.lang.String a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract java.io.InputStream getAsciiStream(java.lang.String a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract java.io.InputStream getAsciiStream(int a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract java.io.InputStream getUnicodeStream(int a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract java.io.InputStream getUnicodeStream(java.lang.String a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract java.io.InputStream getBinaryStream(int a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract java.io.InputStream getBinaryStream(java.lang.String a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract java.sql.SQLWarning getWarnings()  throws java.sql.SQLException;
  public abstract void clearWarnings()  throws java.sql.SQLException;
  public abstract java.lang.String getCursorName()  throws java.sql.SQLException;
  public abstract java.sql.ResultSetMetaData getMetaData()  throws java.sql.SQLException;
  public abstract java.io.Reader getCharacterStream(int a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract java.io.Reader getCharacterStream(java.lang.String a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract boolean isBeforeFirst()  throws java.sql.SQLException;
  public abstract boolean isAfterLast()  throws java.sql.SQLException;
  public abstract boolean isLast()  throws java.sql.SQLException;
  public abstract void beforeFirst()  throws java.sql.SQLException;
  public abstract void afterLast()  throws java.sql.SQLException;
  public abstract int getRow()  throws java.sql.SQLException;
  public abstract boolean absolute(int a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract boolean relative(int a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract void setFetchDirection(int a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract int getFetchDirection()  throws java.sql.SQLException;
  public abstract void setFetchSize(int a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract int getFetchSize()  throws java.sql.SQLException;
  public abstract int getConcurrency()  throws java.sql.SQLException;
  public abstract boolean rowUpdated()  throws java.sql.SQLException;
  public abstract boolean rowInserted()  throws java.sql.SQLException;
  public abstract boolean rowDeleted()  throws java.sql.SQLException;
  public abstract void updateNull(int a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract void updateNull(java.lang.String a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract void updateBoolean(java.lang.String a_r_g_u_m_e_n_t_0, boolean a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract void updateBoolean(int a_r_g_u_m_e_n_t_0, boolean a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract void updateByte(java.lang.String a_r_g_u_m_e_n_t_0, byte a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract void updateByte(int a_r_g_u_m_e_n_t_0, byte a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract void updateShort(int a_r_g_u_m_e_n_t_0, short a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract void updateShort(java.lang.String a_r_g_u_m_e_n_t_0, short a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract void updateInt(java.lang.String a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract void updateInt(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract void updateLong(int a_r_g_u_m_e_n_t_0, long a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract void updateLong(java.lang.String a_r_g_u_m_e_n_t_0, long a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract void updateFloat(int a_r_g_u_m_e_n_t_0, float a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract void updateFloat(java.lang.String a_r_g_u_m_e_n_t_0, float a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract void updateDouble(java.lang.String a_r_g_u_m_e_n_t_0, double a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract void updateDouble(int a_r_g_u_m_e_n_t_0, double a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract void updateBigDecimal(int a_r_g_u_m_e_n_t_0, java.math.BigDecimal a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract void updateBigDecimal(java.lang.String a_r_g_u_m_e_n_t_0, java.math.BigDecimal a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract void updateString(java.lang.String a_r_g_u_m_e_n_t_0, java.lang.String a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract void updateString(int a_r_g_u_m_e_n_t_0, java.lang.String a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract void updateDate(int a_r_g_u_m_e_n_t_0, java.sql.Date a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract void updateDate(java.lang.String a_r_g_u_m_e_n_t_0, java.sql.Date a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract void updateTime(java.lang.String a_r_g_u_m_e_n_t_0, java.sql.Time a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract void updateTime(int a_r_g_u_m_e_n_t_0, java.sql.Time a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract void updateTimestamp(int a_r_g_u_m_e_n_t_0, java.sql.Timestamp a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract void updateTimestamp(java.lang.String a_r_g_u_m_e_n_t_0, java.sql.Timestamp a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract void updateAsciiStream(int a_r_g_u_m_e_n_t_0, java.io.InputStream a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract void updateAsciiStream(java.lang.String a_r_g_u_m_e_n_t_0, java.io.InputStream a_r_g_u_m_e_n_t_1, long a_r_g_u_m_e_n_t_2)  throws java.sql.SQLException;
  public abstract void updateAsciiStream(java.lang.String a_r_g_u_m_e_n_t_0, java.io.InputStream a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2)  throws java.sql.SQLException;
  public abstract void updateAsciiStream(int a_r_g_u_m_e_n_t_0, java.io.InputStream a_r_g_u_m_e_n_t_1, long a_r_g_u_m_e_n_t_2)  throws java.sql.SQLException;
  public abstract void updateAsciiStream(int a_r_g_u_m_e_n_t_0, java.io.InputStream a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2)  throws java.sql.SQLException;
  public abstract void updateAsciiStream(java.lang.String a_r_g_u_m_e_n_t_0, java.io.InputStream a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract void updateBinaryStream(java.lang.String a_r_g_u_m_e_n_t_0, java.io.InputStream a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2)  throws java.sql.SQLException;
  public abstract void updateBinaryStream(java.lang.String a_r_g_u_m_e_n_t_0, java.io.InputStream a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract void updateBinaryStream(java.lang.String a_r_g_u_m_e_n_t_0, java.io.InputStream a_r_g_u_m_e_n_t_1, long a_r_g_u_m_e_n_t_2)  throws java.sql.SQLException;
  public abstract void updateBinaryStream(int a_r_g_u_m_e_n_t_0, java.io.InputStream a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract void updateBinaryStream(int a_r_g_u_m_e_n_t_0, java.io.InputStream a_r_g_u_m_e_n_t_1, long a_r_g_u_m_e_n_t_2)  throws java.sql.SQLException;
  public abstract void updateBinaryStream(int a_r_g_u_m_e_n_t_0, java.io.InputStream a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2)  throws java.sql.SQLException;
  public abstract void updateCharacterStream(java.lang.String a_r_g_u_m_e_n_t_0, java.io.Reader a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract void updateCharacterStream(int a_r_g_u_m_e_n_t_0, java.io.Reader a_r_g_u_m_e_n_t_1, long a_r_g_u_m_e_n_t_2)  throws java.sql.SQLException;
  public abstract void updateCharacterStream(int a_r_g_u_m_e_n_t_0, java.io.Reader a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2)  throws java.sql.SQLException;
  public abstract void updateCharacterStream(java.lang.String a_r_g_u_m_e_n_t_0, java.io.Reader a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2)  throws java.sql.SQLException;
  public abstract void updateCharacterStream(java.lang.String a_r_g_u_m_e_n_t_0, java.io.Reader a_r_g_u_m_e_n_t_1, long a_r_g_u_m_e_n_t_2)  throws java.sql.SQLException;
  public abstract void updateCharacterStream(int a_r_g_u_m_e_n_t_0, java.io.Reader a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract void updateObject(java.lang.String a_r_g_u_m_e_n_t_0, java.lang.Object a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2)  throws java.sql.SQLException;
  public abstract void updateObject(int a_r_g_u_m_e_n_t_0, java.lang.Object a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract void updateObject(int a_r_g_u_m_e_n_t_0, java.lang.Object a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2)  throws java.sql.SQLException;
  public abstract void updateObject(java.lang.String a_r_g_u_m_e_n_t_0, java.lang.Object a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract void insertRow()  throws java.sql.SQLException;
  public abstract void updateRow()  throws java.sql.SQLException;
  public abstract void deleteRow()  throws java.sql.SQLException;
  public abstract void refreshRow()  throws java.sql.SQLException;
  public abstract void cancelRowUpdates()  throws java.sql.SQLException;
  public abstract void moveToInsertRow()  throws java.sql.SQLException;
  public abstract void moveToCurrentRow()  throws java.sql.SQLException;
  public abstract java.sql.Statement getStatement()  throws java.sql.SQLException;
  public abstract java.sql.Blob getBlob(int a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract java.sql.Blob getBlob(java.lang.String a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract java.sql.Clob getClob(java.lang.String a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract java.sql.Clob getClob(int a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract void updateRef(int a_r_g_u_m_e_n_t_0, java.sql.Ref a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract void updateRef(java.lang.String a_r_g_u_m_e_n_t_0, java.sql.Ref a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract void updateBlob(java.lang.String a_r_g_u_m_e_n_t_0, java.sql.Blob a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract void updateBlob(java.lang.String a_r_g_u_m_e_n_t_0, java.io.InputStream a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract void updateBlob(int a_r_g_u_m_e_n_t_0, java.io.InputStream a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract void updateBlob(java.lang.String a_r_g_u_m_e_n_t_0, java.io.InputStream a_r_g_u_m_e_n_t_1, long a_r_g_u_m_e_n_t_2)  throws java.sql.SQLException;
  public abstract void updateBlob(int a_r_g_u_m_e_n_t_0, java.io.InputStream a_r_g_u_m_e_n_t_1, long a_r_g_u_m_e_n_t_2)  throws java.sql.SQLException;
  public abstract void updateBlob(int a_r_g_u_m_e_n_t_0, java.sql.Blob a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract void updateClob(java.lang.String a_r_g_u_m_e_n_t_0, java.sql.Clob a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract void updateClob(int a_r_g_u_m_e_n_t_0, java.sql.Clob a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract void updateClob(int a_r_g_u_m_e_n_t_0, java.io.Reader a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract void updateClob(java.lang.String a_r_g_u_m_e_n_t_0, java.io.Reader a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract void updateClob(java.lang.String a_r_g_u_m_e_n_t_0, java.io.Reader a_r_g_u_m_e_n_t_1, long a_r_g_u_m_e_n_t_2)  throws java.sql.SQLException;
  public abstract void updateClob(int a_r_g_u_m_e_n_t_0, java.io.Reader a_r_g_u_m_e_n_t_1, long a_r_g_u_m_e_n_t_2)  throws java.sql.SQLException;
  public abstract void updateArray(java.lang.String a_r_g_u_m_e_n_t_0, java.sql.Array a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract void updateArray(int a_r_g_u_m_e_n_t_0, java.sql.Array a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract java.sql.RowId getRowId(java.lang.String a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract java.sql.RowId getRowId(int a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract void updateRowId(int a_r_g_u_m_e_n_t_0, java.sql.RowId a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract void updateRowId(java.lang.String a_r_g_u_m_e_n_t_0, java.sql.RowId a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract int getHoldability()  throws java.sql.SQLException;
  public abstract void updateNString(int a_r_g_u_m_e_n_t_0, java.lang.String a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract void updateNString(java.lang.String a_r_g_u_m_e_n_t_0, java.lang.String a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract void updateNClob(java.lang.String a_r_g_u_m_e_n_t_0, java.sql.NClob a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract void updateNClob(java.lang.String a_r_g_u_m_e_n_t_0, java.io.Reader a_r_g_u_m_e_n_t_1, long a_r_g_u_m_e_n_t_2)  throws java.sql.SQLException;
  public abstract void updateNClob(java.lang.String a_r_g_u_m_e_n_t_0, java.io.Reader a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract void updateNClob(int a_r_g_u_m_e_n_t_0, java.io.Reader a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract void updateNClob(int a_r_g_u_m_e_n_t_0, java.sql.NClob a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract void updateNClob(int a_r_g_u_m_e_n_t_0, java.io.Reader a_r_g_u_m_e_n_t_1, long a_r_g_u_m_e_n_t_2)  throws java.sql.SQLException;
  public abstract java.sql.NClob getNClob(java.lang.String a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract java.sql.NClob getNClob(int a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract java.sql.SQLXML getSQLXML(java.lang.String a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract java.sql.SQLXML getSQLXML(int a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract void updateSQLXML(java.lang.String a_r_g_u_m_e_n_t_0, java.sql.SQLXML a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract void updateSQLXML(int a_r_g_u_m_e_n_t_0, java.sql.SQLXML a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract java.lang.String getNString(java.lang.String a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract java.lang.String getNString(int a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract java.io.Reader getNCharacterStream(int a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract java.io.Reader getNCharacterStream(java.lang.String a_r_g_u_m_e_n_t_0)  throws java.sql.SQLException;
  public abstract void updateNCharacterStream(int a_r_g_u_m_e_n_t_0, java.io.Reader a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public abstract void updateNCharacterStream(int a_r_g_u_m_e_n_t_0, java.io.Reader a_r_g_u_m_e_n_t_1, long a_r_g_u_m_e_n_t_2)  throws java.sql.SQLException;
  public abstract void updateNCharacterStream(java.lang.String a_r_g_u_m_e_n_t_0, java.io.Reader a_r_g_u_m_e_n_t_1, long a_r_g_u_m_e_n_t_2)  throws java.sql.SQLException;
  public abstract void updateNCharacterStream(java.lang.String a_r_g_u_m_e_n_t_0, java.io.Reader a_r_g_u_m_e_n_t_1)  throws java.sql.SQLException;
  public static final int FETCH_FORWARD;
  public static final int FETCH_REVERSE;
  public static final int FETCH_UNKNOWN;
  public static final int TYPE_FORWARD_ONLY;
  public static final int TYPE_SCROLL_INSENSITIVE;
  public static final int TYPE_SCROLL_SENSITIVE;
  public static final int CONCUR_READ_ONLY;
  public static final int CONCUR_UPDATABLE;
  public static final int HOLD_CURSORS_OVER_COMMIT;
  public static final int CLOSE_CURSORS_AT_COMMIT;
}