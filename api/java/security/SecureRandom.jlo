package java.security;
public class SecureRandom extends java.util.Random {
   public  SecureRandom(byte[] a_r_g_u_m_e_n_t_0){}
   public  SecureRandom(){}
   protected  SecureRandom(java.security.SecureRandomSpi a_r_g_u_m_e_n_t_0, java.security.Provider a_r_g_u_m_e_n_t_1){}
  protected final native int next(int a_r_g_u_m_e_n_t_0) ;
  public static native java.security.SecureRandom getInstance(java.lang.String a_r_g_u_m_e_n_t_0, java.security.Provider a_r_g_u_m_e_n_t_1)  throws java.security.NoSuchAlgorithmException;
  public static native java.security.SecureRandom getInstance(java.lang.String a_r_g_u_m_e_n_t_0)  throws java.security.NoSuchAlgorithmException;
  public static native java.security.SecureRandom getInstance(java.lang.String a_r_g_u_m_e_n_t_0, java.lang.String a_r_g_u_m_e_n_t_1)  throws java.security.NoSuchAlgorithmException, java.security.NoSuchProviderException;
  public native java.lang.String getAlgorithm() ;
  public final native java.security.Provider getProvider() ;
  public synchronized native void nextBytes(byte[] a_r_g_u_m_e_n_t_0) ;
  public native void setSeed(long a_r_g_u_m_e_n_t_0) ;
  public synchronized native void setSeed(byte[] a_r_g_u_m_e_n_t_0) ;
  native java.security.SecureRandomSpi getSecureRandomSpi() ;
  public static native byte[] getSeed(int a_r_g_u_m_e_n_t_0) ;
  public native byte[] generateSeed(int a_r_g_u_m_e_n_t_0) ;
  static final long serialVersionUID;
}