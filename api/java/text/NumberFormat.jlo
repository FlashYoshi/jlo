package java.text;
public abstract class NumberFormat extends java.text.Format {
   protected  NumberFormat(){}
  public native int hashCode() ;
  public native java.lang.Object clone() ;
  public native boolean equals(java.lang.Object a_r_g_u_m_e_n_t_0) ;
  public final native java.lang.String format(long a_r_g_u_m_e_n_t_0) ;
  public abstract java.lang.StringBuffer format(double a_r_g_u_m_e_n_t_0, java.lang.StringBuffer a_r_g_u_m_e_n_t_1, java.text.FieldPosition a_r_g_u_m_e_n_t_2) ;
  public abstract java.lang.StringBuffer format(long a_r_g_u_m_e_n_t_0, java.lang.StringBuffer a_r_g_u_m_e_n_t_1, java.text.FieldPosition a_r_g_u_m_e_n_t_2) ;
  public final native java.lang.String format(double a_r_g_u_m_e_n_t_0) ;
  public native java.lang.StringBuffer format(java.lang.Object a_r_g_u_m_e_n_t_0, java.lang.StringBuffer a_r_g_u_m_e_n_t_1, java.text.FieldPosition a_r_g_u_m_e_n_t_2) ;
  public static native java.text.NumberFormat getInstance(java.util.Locale a_r_g_u_m_e_n_t_0) ;
  public static final native java.text.NumberFormat getInstance() ;
  public native java.lang.Number parse(java.lang.String a_r_g_u_m_e_n_t_0)  throws java.text.ParseException;
  public abstract java.lang.Number parse(java.lang.String a_r_g_u_m_e_n_t_0, java.text.ParsePosition a_r_g_u_m_e_n_t_1) ;
  public static native java.util.Locale[] getAvailableLocales() ;
  public static final native java.text.NumberFormat getPercentInstance() ;
  public static native java.text.NumberFormat getPercentInstance(java.util.Locale a_r_g_u_m_e_n_t_0) ;
  public native java.math.RoundingMode getRoundingMode() ;
  public native void setCurrency(java.util.Currency a_r_g_u_m_e_n_t_0) ;
  public final native java.lang.Object parseObject(java.lang.String a_r_g_u_m_e_n_t_0, java.text.ParsePosition a_r_g_u_m_e_n_t_1) ;
  public native boolean isParseIntegerOnly() ;
  public native void setParseIntegerOnly(boolean a_r_g_u_m_e_n_t_0) ;
  public static native java.text.NumberFormat getNumberInstance(java.util.Locale a_r_g_u_m_e_n_t_0) ;
  public static final native java.text.NumberFormat getNumberInstance() ;
  public static native java.text.NumberFormat getIntegerInstance(java.util.Locale a_r_g_u_m_e_n_t_0) ;
  public static final native java.text.NumberFormat getIntegerInstance() ;
  public static final native java.text.NumberFormat getCurrencyInstance() ;
  public static native java.text.NumberFormat getCurrencyInstance(java.util.Locale a_r_g_u_m_e_n_t_0) ;
  static final native java.text.NumberFormat getScientificInstance() ;
  static native java.text.NumberFormat getScientificInstance(java.util.Locale a_r_g_u_m_e_n_t_0) ;
  public native boolean isGroupingUsed() ;
  public native void setGroupingUsed(boolean a_r_g_u_m_e_n_t_0) ;
  public native int getMaximumIntegerDigits() ;
  public native void setMaximumIntegerDigits(int a_r_g_u_m_e_n_t_0) ;
  public native int getMinimumIntegerDigits() ;
  public native void setMinimumIntegerDigits(int a_r_g_u_m_e_n_t_0) ;
  public native int getMaximumFractionDigits() ;
  public native void setMaximumFractionDigits(int a_r_g_u_m_e_n_t_0) ;
  public native int getMinimumFractionDigits() ;
  public native void setMinimumFractionDigits(int a_r_g_u_m_e_n_t_0) ;
  public native java.util.Currency getCurrency() ;
  public native void setRoundingMode(java.math.RoundingMode a_r_g_u_m_e_n_t_0) ;
  public static final int INTEGER_FIELD;
  public static final int FRACTION_FIELD;
  static final int currentSerialVersion;
  static final long serialVersionUID;
  private static class NumberFormatGetter extends java.lang.Object {
    public transient native java.text.NumberFormat getObject(java.text.spi.NumberFormatProvider a_r_g_u_m_e_n_t_0, java.util.Locale a_r_g_u_m_e_n_t_1, java.lang.String a_r_g_u_m_e_n_t_2, java.lang.Object... a_r_g_u_m_e_n_t_3) ;
    static final boolean $assertionsDisabled;
  }
  public static class Field extends java.text.Format.Field {
     protected  Field(java.lang.String a_r_g_u_m_e_n_t_0){}
    protected native java.lang.Object readResolve()  throws java.io.InvalidObjectException;
    public static final java.text.NumberFormat.Field INTEGER;
    public static final java.text.NumberFormat.Field FRACTION;
    public static final java.text.NumberFormat.Field EXPONENT;
    public static final java.text.NumberFormat.Field DECIMAL_SEPARATOR;
    public static final java.text.NumberFormat.Field SIGN;
    public static final java.text.NumberFormat.Field GROUPING_SEPARATOR;
    public static final java.text.NumberFormat.Field EXPONENT_SYMBOL;
    public static final java.text.NumberFormat.Field PERCENT;
    public static final java.text.NumberFormat.Field PERMILLE;
    public static final java.text.NumberFormat.Field CURRENCY;
    public static final java.text.NumberFormat.Field EXPONENT_SIGN;
  }
}