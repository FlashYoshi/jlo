package java.util;
public abstract interface Map<K extends java.lang.Object, V extends java.lang.Object> {
  public abstract V get(java.lang.Object a_r_g_u_m_e_n_t_0) ;
  public abstract V put(K a_r_g_u_m_e_n_t_0, V a_r_g_u_m_e_n_t_1) ;
  public abstract int hashCode() ;
  public abstract boolean equals(java.lang.Object a_r_g_u_m_e_n_t_0) ;
  public abstract void clear() ;
  public abstract boolean isEmpty() ;
  public abstract java.util.Collection<V> values() ;
  public abstract int size() ;
  public abstract java.util.Set<java.util.Map.Entry<K,V>> entrySet() ;
  public abstract void putAll(java.util.Map<? extends K,? extends V> a_r_g_u_m_e_n_t_0) ;
  public abstract V remove(java.lang.Object a_r_g_u_m_e_n_t_0) ;
  public abstract java.util.Set<K> keySet() ;
  public abstract boolean containsValue(java.lang.Object a_r_g_u_m_e_n_t_0) ;
  public abstract boolean containsKey(java.lang.Object a_r_g_u_m_e_n_t_0) ;
  public static abstract interface Entry<K extends java.lang.Object, V extends java.lang.Object> {
    public abstract int hashCode() ;
    public abstract boolean equals(java.lang.Object a_r_g_u_m_e_n_t_0) ;
    public abstract V getValue() ;
    public abstract K getKey() ;
    public abstract V setValue(V a_r_g_u_m_e_n_t_0) ;
  }
}