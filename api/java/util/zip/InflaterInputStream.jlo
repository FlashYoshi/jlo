package java.util.zip;
public class InflaterInputStream extends java.io.FilterInputStream {
   public  InflaterInputStream(java.io.InputStream a_r_g_u_m_e_n_t_0, java.util.zip.Inflater a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2){}
   public  InflaterInputStream(java.io.InputStream a_r_g_u_m_e_n_t_0, java.util.zip.Inflater a_r_g_u_m_e_n_t_1){}
   public  InflaterInputStream(java.io.InputStream a_r_g_u_m_e_n_t_0){}
  public native void close()  throws java.io.IOException;
  public synchronized native void mark(int a_r_g_u_m_e_n_t_0) ;
  public synchronized native void reset()  throws java.io.IOException;
  protected native void fill()  throws java.io.IOException;
  public native int read(byte[] a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2)  throws java.io.IOException;
  public native int read()  throws java.io.IOException;
  public native long skip(long a_r_g_u_m_e_n_t_0)  throws java.io.IOException;
  public native int available()  throws java.io.IOException;
  public native boolean markSupported() ;
  protected java.util.zip.Inflater inf;
  protected byte[] buf;
  protected int len;
  boolean usesDefaultInflater;
}