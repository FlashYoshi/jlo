package java.util;
public class Collections extends java.lang.Object {
  public static native <T extends java.lang.Object & java.lang.Comparable<? super T>>T min(java.util.Collection<? extends T> a_r_g_u_m_e_n_t_0) ;
  public static native <T extends java.lang.Object>T min(java.util.Collection<? extends T> a_r_g_u_m_e_n_t_0, java.util.Comparator<? super T> a_r_g_u_m_e_n_t_1) ;
  public static native <T extends java.lang.Object & java.lang.Comparable<? super T>>T max(java.util.Collection<? extends T> a_r_g_u_m_e_n_t_0) ;
  public static native <T extends java.lang.Object>T max(java.util.Collection<? extends T> a_r_g_u_m_e_n_t_0, java.util.Comparator<? super T> a_r_g_u_m_e_n_t_1) ;
  public static native <T extends java.lang.Object>boolean replaceAll(java.util.List<T> a_r_g_u_m_e_n_t_0, T a_r_g_u_m_e_n_t_1, T a_r_g_u_m_e_n_t_2) ;
  public static transient native <T extends java.lang.Object>boolean addAll(java.util.Collection<? super T> a_r_g_u_m_e_n_t_0, T... a_r_g_u_m_e_n_t_1) ;
  public static native <T extends java.lang.Object>java.util.ArrayList<T> list(java.util.Enumeration<T> a_r_g_u_m_e_n_t_0) ;
  public static native <T extends java.lang.Object>java.util.Set<T> synchronizedSet(java.util.Set<T> a_r_g_u_m_e_n_t_0) ;
  static native <T extends java.lang.Object>java.util.Set<T> synchronizedSet(java.util.Set<T> a_r_g_u_m_e_n_t_0, java.lang.Object a_r_g_u_m_e_n_t_1) ;
  public static native <T extends java.lang.Object>java.util.Collection<T> synchronizedCollection(java.util.Collection<T> a_r_g_u_m_e_n_t_0) ;
  static native <T extends java.lang.Object>java.util.Collection<T> synchronizedCollection(java.util.Collection<T> a_r_g_u_m_e_n_t_0, java.lang.Object a_r_g_u_m_e_n_t_1) ;
  public static native <T extends java.lang.Object>void copy(java.util.List<? super T> a_r_g_u_m_e_n_t_0, java.util.List<? extends T> a_r_g_u_m_e_n_t_1) ;
  static native <T extends java.lang.Object>java.util.List<T> synchronizedList(java.util.List<T> a_r_g_u_m_e_n_t_0, java.lang.Object a_r_g_u_m_e_n_t_1) ;
  public static native <T extends java.lang.Object>java.util.List<T> synchronizedList(java.util.List<T> a_r_g_u_m_e_n_t_0) ;
  public static native void reverse(java.util.List<? extends java.lang.Object> a_r_g_u_m_e_n_t_0) ;
  public static native <T extends java.lang.Object>void fill(java.util.List<? super T> a_r_g_u_m_e_n_t_0, T a_r_g_u_m_e_n_t_1) ;
  public static native <K extends java.lang.Object, V extends java.lang.Object>java.util.Map<K,V> synchronizedMap(java.util.Map<K,V> a_r_g_u_m_e_n_t_0) ;
  public static native <T extends java.lang.Comparable<? super T>>void sort(java.util.List<T> a_r_g_u_m_e_n_t_0) ;
  public static native <T extends java.lang.Object>void sort(java.util.List<T> a_r_g_u_m_e_n_t_0, java.util.Comparator<? super T> a_r_g_u_m_e_n_t_1) ;
  public static native <T extends java.lang.Object>int binarySearch(java.util.List<? extends T> a_r_g_u_m_e_n_t_0, T a_r_g_u_m_e_n_t_1, java.util.Comparator<? super T> a_r_g_u_m_e_n_t_2) ;
  public static native <T extends java.lang.Object>int binarySearch(java.util.List<? extends java.lang.Comparable<? super T>> a_r_g_u_m_e_n_t_0, T a_r_g_u_m_e_n_t_1) ;
  public static native void shuffle(java.util.List<? extends java.lang.Object> a_r_g_u_m_e_n_t_0, java.util.Random a_r_g_u_m_e_n_t_1) ;
  public static native void shuffle(java.util.List<? extends java.lang.Object> a_r_g_u_m_e_n_t_0) ;
  public static native void swap(java.util.List<? extends java.lang.Object> a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2) ;
  public static native void rotate(java.util.List<? extends java.lang.Object> a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1) ;
  public static native int indexOfSubList(java.util.List<? extends java.lang.Object> a_r_g_u_m_e_n_t_0, java.util.List<? extends java.lang.Object> a_r_g_u_m_e_n_t_1) ;
  public static native int lastIndexOfSubList(java.util.List<? extends java.lang.Object> a_r_g_u_m_e_n_t_0, java.util.List<? extends java.lang.Object> a_r_g_u_m_e_n_t_1) ;
  public static native <T extends java.lang.Object>java.util.Collection<T> unmodifiableCollection(java.util.Collection<? extends T> a_r_g_u_m_e_n_t_0) ;
  public static native <T extends java.lang.Object>java.util.Set<T> unmodifiableSet(java.util.Set<? extends T> a_r_g_u_m_e_n_t_0) ;
  public static native <T extends java.lang.Object>java.util.SortedSet<T> unmodifiableSortedSet(java.util.SortedSet<T> a_r_g_u_m_e_n_t_0) ;
  public static native <T extends java.lang.Object>java.util.List<T> unmodifiableList(java.util.List<? extends T> a_r_g_u_m_e_n_t_0) ;
  public static native <K extends java.lang.Object, V extends java.lang.Object>java.util.Map<K,V> unmodifiableMap(java.util.Map<? extends K,? extends V> a_r_g_u_m_e_n_t_0) ;
  public static native <K extends java.lang.Object, V extends java.lang.Object>java.util.SortedMap<K,V> unmodifiableSortedMap(java.util.SortedMap<K,? extends V> a_r_g_u_m_e_n_t_0) ;
  public static native <T extends java.lang.Object>java.util.SortedSet<T> synchronizedSortedSet(java.util.SortedSet<T> a_r_g_u_m_e_n_t_0) ;
  public static native <K extends java.lang.Object, V extends java.lang.Object>java.util.SortedMap<K,V> synchronizedSortedMap(java.util.SortedMap<K,V> a_r_g_u_m_e_n_t_0) ;
  public static native <E extends java.lang.Object>java.util.Collection<E> checkedCollection(java.util.Collection<E> a_r_g_u_m_e_n_t_0, java.lang.Class<E> a_r_g_u_m_e_n_t_1) ;
  public static native <E extends java.lang.Object>java.util.Set<E> checkedSet(java.util.Set<E> a_r_g_u_m_e_n_t_0, java.lang.Class<E> a_r_g_u_m_e_n_t_1) ;
  public static native <E extends java.lang.Object>java.util.SortedSet<E> checkedSortedSet(java.util.SortedSet<E> a_r_g_u_m_e_n_t_0, java.lang.Class<E> a_r_g_u_m_e_n_t_1) ;
  public static native <E extends java.lang.Object>java.util.List<E> checkedList(java.util.List<E> a_r_g_u_m_e_n_t_0, java.lang.Class<E> a_r_g_u_m_e_n_t_1) ;
  public static native <K extends java.lang.Object, V extends java.lang.Object>java.util.Map<K,V> checkedMap(java.util.Map<K,V> a_r_g_u_m_e_n_t_0, java.lang.Class<K> a_r_g_u_m_e_n_t_1, java.lang.Class<V> a_r_g_u_m_e_n_t_2) ;
  public static native <K extends java.lang.Object, V extends java.lang.Object>java.util.SortedMap<K,V> checkedSortedMap(java.util.SortedMap<K,V> a_r_g_u_m_e_n_t_0, java.lang.Class<K> a_r_g_u_m_e_n_t_1, java.lang.Class<V> a_r_g_u_m_e_n_t_2) ;
  public static final native <T extends java.lang.Object>java.util.Set<T> emptySet() ;
  public static final native <T extends java.lang.Object>java.util.List<T> emptyList() ;
  public static final native <K extends java.lang.Object, V extends java.lang.Object>java.util.Map<K,V> emptyMap() ;
  public static native <T extends java.lang.Object>java.util.Set<T> singleton(T a_r_g_u_m_e_n_t_0) ;
  public static native <T extends java.lang.Object>java.util.List<T> singletonList(T a_r_g_u_m_e_n_t_0) ;
  public static native <K extends java.lang.Object, V extends java.lang.Object>java.util.Map<K,V> singletonMap(K a_r_g_u_m_e_n_t_0, V a_r_g_u_m_e_n_t_1) ;
  public static native <T extends java.lang.Object>java.util.List<T> nCopies(int a_r_g_u_m_e_n_t_0, T a_r_g_u_m_e_n_t_1) ;
  public static native <T extends java.lang.Object>java.util.Comparator<T> reverseOrder(java.util.Comparator<T> a_r_g_u_m_e_n_t_0) ;
  public static native <T extends java.lang.Object>java.util.Comparator<T> reverseOrder() ;
  public static native <T extends java.lang.Object>java.util.Enumeration<T> enumeration(java.util.Collection<T> a_r_g_u_m_e_n_t_0) ;
  public static native int frequency(java.util.Collection<? extends java.lang.Object> a_r_g_u_m_e_n_t_0, java.lang.Object a_r_g_u_m_e_n_t_1) ;
  public static native boolean disjoint(java.util.Collection<? extends java.lang.Object> a_r_g_u_m_e_n_t_0, java.util.Collection<? extends java.lang.Object> a_r_g_u_m_e_n_t_1) ;
  public static native <E extends java.lang.Object>java.util.Set<E> newSetFromMap(java.util.Map<E,java.lang.Boolean> a_r_g_u_m_e_n_t_0) ;
  public static native <T extends java.lang.Object>java.util.Queue<T> asLifoQueue(java.util.Deque<T> a_r_g_u_m_e_n_t_0) ;
  public static final java.util.Set EMPTY_SET;
  public static final java.util.List EMPTY_LIST;
  public static final java.util.Map EMPTY_MAP;
  static class AsLIFOQueue<E extends java.lang.Object> extends java.util.AbstractQueue<E> implements java.util.Queue<E>, java.io.Serializable {
      AsLIFOQueue(java.util.Deque<E> a_r_g_u_m_e_n_t_0){}
    public native boolean add(E a_r_g_u_m_e_n_t_0) ;
    public native void clear() ;
    public native java.lang.String toString() ;
    public native boolean isEmpty() ;
    public native boolean contains(java.lang.Object a_r_g_u_m_e_n_t_0) ;
    public native int size() ;
    public native <T extends java.lang.Object>T[] toArray(T[] a_r_g_u_m_e_n_t_0) ;
    public native java.lang.Object[] toArray() ;
    public native java.util.Iterator<E> iterator() ;
    public native boolean remove(java.lang.Object a_r_g_u_m_e_n_t_0) ;
    public native E remove() ;
    public native boolean containsAll(java.util.Collection<? extends java.lang.Object> a_r_g_u_m_e_n_t_0) ;
    public native boolean removeAll(java.util.Collection<? extends java.lang.Object> a_r_g_u_m_e_n_t_0) ;
    public native boolean retainAll(java.util.Collection<? extends java.lang.Object> a_r_g_u_m_e_n_t_0) ;
    public native E poll() ;
    public native E peek() ;
    public native E element() ;
    public native boolean offer(E a_r_g_u_m_e_n_t_0) ;
  }
  private static class SetFromMap<E extends java.lang.Object> extends java.util.AbstractSet<E> implements java.util.Set<E>, java.io.Serializable {
      SetFromMap(java.util.Map<E,java.lang.Boolean> a_r_g_u_m_e_n_t_0){}
    public native boolean add(E a_r_g_u_m_e_n_t_0) ;
    public native int hashCode() ;
    public native boolean equals(java.lang.Object a_r_g_u_m_e_n_t_0) ;
    public native void clear() ;
    public native java.lang.String toString() ;
    public native boolean isEmpty() ;
    public native boolean contains(java.lang.Object a_r_g_u_m_e_n_t_0) ;
    public native int size() ;
    public native java.lang.Object[] toArray() ;
    public native <T extends java.lang.Object>T[] toArray(T[] a_r_g_u_m_e_n_t_0) ;
    public native java.util.Iterator<E> iterator() ;
    public native boolean remove(java.lang.Object a_r_g_u_m_e_n_t_0) ;
    public native boolean containsAll(java.util.Collection<? extends java.lang.Object> a_r_g_u_m_e_n_t_0) ;
    public native boolean removeAll(java.util.Collection<? extends java.lang.Object> a_r_g_u_m_e_n_t_0) ;
    public native boolean retainAll(java.util.Collection<? extends java.lang.Object> a_r_g_u_m_e_n_t_0) ;
  }
  private static class ReverseComparator2<T extends java.lang.Object> extends java.lang.Object implements java.util.Comparator<T>, java.io.Serializable {
      ReverseComparator2(java.util.Comparator<T> a_r_g_u_m_e_n_t_0){}
    public native int compare(T a_r_g_u_m_e_n_t_0, T a_r_g_u_m_e_n_t_1) ;
    static final boolean $assertionsDisabled;
  }
  private static class ReverseComparator<T extends java.lang.Object> extends java.lang.Object implements java.util.Comparator<java.lang.Comparable<java.lang.Object>>, java.io.Serializable {
    public native int compare(java.lang.Comparable<java.lang.Object> a_r_g_u_m_e_n_t_0, java.lang.Comparable<java.lang.Object> a_r_g_u_m_e_n_t_1) ;
  }
  private static class CopiesList<E extends java.lang.Object> extends java.util.AbstractList<E> implements java.util.RandomAccess, java.io.Serializable {
      CopiesList(int a_r_g_u_m_e_n_t_0, E a_r_g_u_m_e_n_t_1){}
    public native E get(int a_r_g_u_m_e_n_t_0) ;
    public native int indexOf(java.lang.Object a_r_g_u_m_e_n_t_0) ;
    public native int lastIndexOf(java.lang.Object a_r_g_u_m_e_n_t_0) ;
    public native boolean contains(java.lang.Object a_r_g_u_m_e_n_t_0) ;
    public native int size() ;
    public native <T extends java.lang.Object>T[] toArray(T[] a_r_g_u_m_e_n_t_0) ;
    public native java.lang.Object[] toArray() ;
    public native java.util.List<E> subList(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1) ;
    static final long serialVersionUID;
    final int n;
    final E element;
    static final boolean $assertionsDisabled;
  }
  private static class SingletonMap<K extends java.lang.Object, V extends java.lang.Object> extends java.util.AbstractMap<K,V> implements java.io.Serializable {
      SingletonMap(K a_r_g_u_m_e_n_t_0, V a_r_g_u_m_e_n_t_1){}
    public native V get(java.lang.Object a_r_g_u_m_e_n_t_0) ;
    public native boolean isEmpty() ;
    public native java.util.Collection<V> values() ;
    public native int size() ;
    public native java.util.Set<java.util.Map.Entry<K,V>> entrySet() ;
    public native java.util.Set<K> keySet() ;
    public native boolean containsValue(java.lang.Object a_r_g_u_m_e_n_t_0) ;
    public native boolean containsKey(java.lang.Object a_r_g_u_m_e_n_t_0) ;
  }
  private static class SingletonList<E extends java.lang.Object> extends java.util.AbstractList<E> implements java.util.RandomAccess, java.io.Serializable {
      SingletonList(E a_r_g_u_m_e_n_t_0){}
    public native E get(int a_r_g_u_m_e_n_t_0) ;
    public native boolean contains(java.lang.Object a_r_g_u_m_e_n_t_0) ;
    public native int size() ;
    static final long serialVersionUID;
  }
  private static class SingletonSet<E extends java.lang.Object> extends java.util.AbstractSet<E> implements java.io.Serializable {
      SingletonSet(E a_r_g_u_m_e_n_t_0){}
    public native boolean contains(java.lang.Object a_r_g_u_m_e_n_t_0) ;
    public native int size() ;
    public native java.util.Iterator<E> iterator() ;
  }
  private static class EmptyMap extends java.util.AbstractMap<java.lang.Object,java.lang.Object> implements java.io.Serializable {
    public native java.lang.Object get(java.lang.Object a_r_g_u_m_e_n_t_0) ;
    public native int hashCode() ;
    public native boolean equals(java.lang.Object a_r_g_u_m_e_n_t_0) ;
    public native boolean isEmpty() ;
    public native java.util.Collection<java.lang.Object> values() ;
    public native int size() ;
    public native java.util.Set<java.util.Map.Entry<java.lang.Object,java.lang.Object>> entrySet() ;
    public native java.util.Set<java.lang.Object> keySet() ;
    public native boolean containsValue(java.lang.Object a_r_g_u_m_e_n_t_0) ;
    public native boolean containsKey(java.lang.Object a_r_g_u_m_e_n_t_0) ;
  }
  private static class EmptyList extends java.util.AbstractList<java.lang.Object> implements java.util.RandomAccess, java.io.Serializable {
    public native java.lang.Object get(int a_r_g_u_m_e_n_t_0) ;
    public native boolean contains(java.lang.Object a_r_g_u_m_e_n_t_0) ;
    public native int size() ;
  }
  private static class EmptySet extends java.util.AbstractSet<java.lang.Object> implements java.io.Serializable {
    public native boolean contains(java.lang.Object a_r_g_u_m_e_n_t_0) ;
    public native int size() ;
    public native java.util.Iterator<java.lang.Object> iterator() ;
  }
  static class CheckedSortedMap<K extends java.lang.Object, V extends java.lang.Object> extends java.util.Collections.CheckedMap<K,V> implements java.util.SortedMap<K,V>, java.io.Serializable {
      CheckedSortedMap(java.util.SortedMap<K,V> a_r_g_u_m_e_n_t_0, java.lang.Class<K> a_r_g_u_m_e_n_t_1, java.lang.Class<V> a_r_g_u_m_e_n_t_2){}
    public native java.util.Comparator<? super K> comparator() ;
    public native java.util.SortedMap<K,V> subMap(K a_r_g_u_m_e_n_t_0, K a_r_g_u_m_e_n_t_1) ;
    public native java.util.SortedMap<K,V> headMap(K a_r_g_u_m_e_n_t_0) ;
    public native java.util.SortedMap<K,V> tailMap(K a_r_g_u_m_e_n_t_0) ;
    public native K firstKey() ;
    public native K lastKey() ;
  }
  private static class CheckedMap<K extends java.lang.Object, V extends java.lang.Object> extends java.lang.Object implements java.util.Map<K,V>, java.io.Serializable {
      CheckedMap(java.util.Map<K,V> a_r_g_u_m_e_n_t_0, java.lang.Class<K> a_r_g_u_m_e_n_t_1, java.lang.Class<V> a_r_g_u_m_e_n_t_2){}
    public native V get(java.lang.Object a_r_g_u_m_e_n_t_0) ;
    public native V put(K a_r_g_u_m_e_n_t_0, V a_r_g_u_m_e_n_t_1) ;
    public native int hashCode() ;
    public native boolean equals(java.lang.Object a_r_g_u_m_e_n_t_0) ;
    public native void clear() ;
    public native java.lang.String toString() ;
    public native boolean isEmpty() ;
    public native java.util.Collection<V> values() ;
    public native int size() ;
    public native java.util.Set<java.util.Map.Entry<K,V>> entrySet() ;
    public native void putAll(java.util.Map<? extends K,? extends V> a_r_g_u_m_e_n_t_0) ;
    public native V remove(java.lang.Object a_r_g_u_m_e_n_t_0) ;
    public native java.util.Set<K> keySet() ;
    public native boolean containsValue(java.lang.Object a_r_g_u_m_e_n_t_0) ;
    public native boolean containsKey(java.lang.Object a_r_g_u_m_e_n_t_0) ;
    final java.lang.Class<K> keyType;
    final java.lang.Class<V> valueType;
    static class CheckedEntrySet<K extends java.lang.Object, V extends java.lang.Object> extends java.lang.Object implements java.util.Set<java.util.Map.Entry<K,V>> {
        CheckedEntrySet(java.util.Set<java.util.Map.Entry<K,V>> a_r_g_u_m_e_n_t_0, java.lang.Class<V> a_r_g_u_m_e_n_t_1){}
      public native boolean add(java.util.Map.Entry<K,V> a_r_g_u_m_e_n_t_0) ;
      public native int hashCode() ;
      public native boolean equals(java.lang.Object a_r_g_u_m_e_n_t_0) ;
      public native void clear() ;
      public native java.lang.String toString() ;
      public native boolean isEmpty() ;
      public native boolean contains(java.lang.Object a_r_g_u_m_e_n_t_0) ;
      public native boolean addAll(java.util.Collection<? extends java.util.Map.Entry<K,V>> a_r_g_u_m_e_n_t_0) ;
      public native int size() ;
      public native java.lang.Object[] toArray() ;
      public native <T extends java.lang.Object>T[] toArray(T[] a_r_g_u_m_e_n_t_0) ;
      public native java.util.Iterator<java.util.Map.Entry<K,V>> iterator() ;
      public native boolean remove(java.lang.Object a_r_g_u_m_e_n_t_0) ;
      public native boolean containsAll(java.util.Collection<? extends java.lang.Object> a_r_g_u_m_e_n_t_0) ;
      public native boolean removeAll(java.util.Collection<? extends java.lang.Object> a_r_g_u_m_e_n_t_0) ;
      public native boolean retainAll(java.util.Collection<? extends java.lang.Object> a_r_g_u_m_e_n_t_0) ;
      java.util.Set<java.util.Map.Entry<K,V>> s;
      java.lang.Class<V> valueType;
      private static class CheckedEntry<K extends java.lang.Object, V extends java.lang.Object> extends java.lang.Object implements java.util.Map.Entry<K,V> {
          CheckedEntry(java.util.Map.Entry<K,V> a_r_g_u_m_e_n_t_0, java.lang.Class<V> a_r_g_u_m_e_n_t_1){}
        public native int hashCode() ;
        public native boolean equals(java.lang.Object a_r_g_u_m_e_n_t_0) ;
        public native java.lang.String toString() ;
        public native V getValue() ;
        public native K getKey() ;
        public native V setValue(V a_r_g_u_m_e_n_t_0) ;
      }
    }
  }
  static class CheckedRandomAccessList<E extends java.lang.Object> extends java.util.Collections.CheckedList<E> implements java.util.RandomAccess {
      CheckedRandomAccessList(java.util.List<E> a_r_g_u_m_e_n_t_0, java.lang.Class<E> a_r_g_u_m_e_n_t_1){}
    public native java.util.List<E> subList(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1) ;
  }
  static class CheckedList<E extends java.lang.Object> extends java.util.Collections.CheckedCollection<E> implements java.util.List<E> {
      CheckedList(java.util.List<E> a_r_g_u_m_e_n_t_0, java.lang.Class<E> a_r_g_u_m_e_n_t_1){}
    public native void add(int a_r_g_u_m_e_n_t_0, E a_r_g_u_m_e_n_t_1) ;
    public native E get(int a_r_g_u_m_e_n_t_0) ;
    public native int hashCode() ;
    public native boolean equals(java.lang.Object a_r_g_u_m_e_n_t_0) ;
    public native int indexOf(java.lang.Object a_r_g_u_m_e_n_t_0) ;
    public native int lastIndexOf(java.lang.Object a_r_g_u_m_e_n_t_0) ;
    public native boolean addAll(int a_r_g_u_m_e_n_t_0, java.util.Collection<? extends E> a_r_g_u_m_e_n_t_1) ;
    public native E set(int a_r_g_u_m_e_n_t_0, E a_r_g_u_m_e_n_t_1) ;
    public native E remove(int a_r_g_u_m_e_n_t_0) ;
    public native java.util.List<E> subList(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1) ;
    public native java.util.ListIterator<E> listIterator() ;
    public native java.util.ListIterator<E> listIterator(int a_r_g_u_m_e_n_t_0) ;
    static final long serialVersionUID;
    final java.util.List<E> list;
  }
  static class CheckedSortedSet<E extends java.lang.Object> extends java.util.Collections.CheckedSet<E> implements java.util.SortedSet<E>, java.io.Serializable {
      CheckedSortedSet(java.util.SortedSet<E> a_r_g_u_m_e_n_t_0, java.lang.Class<E> a_r_g_u_m_e_n_t_1){}
    public native E last() ;
    public native E first() ;
    public native java.util.SortedSet<E> subSet(E a_r_g_u_m_e_n_t_0, E a_r_g_u_m_e_n_t_1) ;
    public native java.util.SortedSet<E> headSet(E a_r_g_u_m_e_n_t_0) ;
    public native java.util.SortedSet<E> tailSet(E a_r_g_u_m_e_n_t_0) ;
    public native java.util.Comparator<? super E> comparator() ;
  }
  static class CheckedSet<E extends java.lang.Object> extends java.util.Collections.CheckedCollection<E> implements java.util.Set<E>, java.io.Serializable {
      CheckedSet(java.util.Set<E> a_r_g_u_m_e_n_t_0, java.lang.Class<E> a_r_g_u_m_e_n_t_1){}
    public native int hashCode() ;
    public native boolean equals(java.lang.Object a_r_g_u_m_e_n_t_0) ;
  }
  static class CheckedCollection<E extends java.lang.Object> extends java.lang.Object implements java.util.Collection<E>, java.io.Serializable {
      CheckedCollection(java.util.Collection<E> a_r_g_u_m_e_n_t_0, java.lang.Class<E> a_r_g_u_m_e_n_t_1){}
    public native boolean add(E a_r_g_u_m_e_n_t_0) ;
    public native void clear() ;
    public native java.lang.String toString() ;
    public native boolean isEmpty() ;
    public native boolean contains(java.lang.Object a_r_g_u_m_e_n_t_0) ;
    public native boolean addAll(java.util.Collection<? extends E> a_r_g_u_m_e_n_t_0) ;
    public native int size() ;
    public native java.lang.Object[] toArray() ;
    public native <T extends java.lang.Object>T[] toArray(T[] a_r_g_u_m_e_n_t_0) ;
    public native java.util.Iterator<E> iterator() ;
    public native boolean remove(java.lang.Object a_r_g_u_m_e_n_t_0) ;
    public native boolean containsAll(java.util.Collection<? extends java.lang.Object> a_r_g_u_m_e_n_t_0) ;
    public native boolean removeAll(java.util.Collection<? extends java.lang.Object> a_r_g_u_m_e_n_t_0) ;
    public native boolean retainAll(java.util.Collection<? extends java.lang.Object> a_r_g_u_m_e_n_t_0) ;
    native void typeCheck(java.lang.Object a_r_g_u_m_e_n_t_0) ;
    native E[] zeroLengthElementArray() ;
    final java.util.Collection<E> c;
    final java.lang.Class<E> type;
  }
  static class SynchronizedSortedMap<K extends java.lang.Object, V extends java.lang.Object> extends java.util.Collections.SynchronizedMap<K,V> implements java.util.SortedMap<K,V> {
      SynchronizedSortedMap(java.util.SortedMap<K,V> a_r_g_u_m_e_n_t_0){}
      SynchronizedSortedMap(java.util.SortedMap<K,V> a_r_g_u_m_e_n_t_0, java.lang.Object a_r_g_u_m_e_n_t_1){}
    public native java.util.Comparator<? super K> comparator() ;
    public native java.util.SortedMap<K,V> subMap(K a_r_g_u_m_e_n_t_0, K a_r_g_u_m_e_n_t_1) ;
    public native java.util.SortedMap<K,V> headMap(K a_r_g_u_m_e_n_t_0) ;
    public native java.util.SortedMap<K,V> tailMap(K a_r_g_u_m_e_n_t_0) ;
    public native K firstKey() ;
    public native K lastKey() ;
  }
  private static class SynchronizedMap<K extends java.lang.Object, V extends java.lang.Object> extends java.lang.Object implements java.util.Map<K,V>, java.io.Serializable {
      SynchronizedMap(java.util.Map<K,V> a_r_g_u_m_e_n_t_0, java.lang.Object a_r_g_u_m_e_n_t_1){}
      SynchronizedMap(java.util.Map<K,V> a_r_g_u_m_e_n_t_0){}
    public native V get(java.lang.Object a_r_g_u_m_e_n_t_0) ;
    public native V put(K a_r_g_u_m_e_n_t_0, V a_r_g_u_m_e_n_t_1) ;
    public native int hashCode() ;
    public native boolean equals(java.lang.Object a_r_g_u_m_e_n_t_0) ;
    public native void clear() ;
    public native java.lang.String toString() ;
    public native boolean isEmpty() ;
    public native java.util.Collection<V> values() ;
    public native int size() ;
    public native java.util.Set<java.util.Map.Entry<K,V>> entrySet() ;
    public native void putAll(java.util.Map<? extends K,? extends V> a_r_g_u_m_e_n_t_0) ;
    public native V remove(java.lang.Object a_r_g_u_m_e_n_t_0) ;
    public native java.util.Set<K> keySet() ;
    public native boolean containsValue(java.lang.Object a_r_g_u_m_e_n_t_0) ;
    public native boolean containsKey(java.lang.Object a_r_g_u_m_e_n_t_0) ;
    final java.lang.Object mutex;
  }
  static class SynchronizedRandomAccessList<E extends java.lang.Object> extends java.util.Collections.SynchronizedList<E> implements java.util.RandomAccess {
      SynchronizedRandomAccessList(java.util.List<E> a_r_g_u_m_e_n_t_0){}
      SynchronizedRandomAccessList(java.util.List<E> a_r_g_u_m_e_n_t_0, java.lang.Object a_r_g_u_m_e_n_t_1){}
    public native java.util.List<E> subList(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1) ;
    static final long serialVersionUID;
  }
  static class SynchronizedList<E extends java.lang.Object> extends java.util.Collections.SynchronizedCollection<E> implements java.util.List<E> {
      SynchronizedList(java.util.List<E> a_r_g_u_m_e_n_t_0){}
      SynchronizedList(java.util.List<E> a_r_g_u_m_e_n_t_0, java.lang.Object a_r_g_u_m_e_n_t_1){}
    public native void add(int a_r_g_u_m_e_n_t_0, E a_r_g_u_m_e_n_t_1) ;
    public native E get(int a_r_g_u_m_e_n_t_0) ;
    public native int hashCode() ;
    public native boolean equals(java.lang.Object a_r_g_u_m_e_n_t_0) ;
    public native int indexOf(java.lang.Object a_r_g_u_m_e_n_t_0) ;
    public native int lastIndexOf(java.lang.Object a_r_g_u_m_e_n_t_0) ;
    public native boolean addAll(int a_r_g_u_m_e_n_t_0, java.util.Collection<? extends E> a_r_g_u_m_e_n_t_1) ;
    public native E set(int a_r_g_u_m_e_n_t_0, E a_r_g_u_m_e_n_t_1) ;
    public native E remove(int a_r_g_u_m_e_n_t_0) ;
    public native java.util.List<E> subList(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1) ;
    public native java.util.ListIterator<E> listIterator() ;
    public native java.util.ListIterator<E> listIterator(int a_r_g_u_m_e_n_t_0) ;
    static final long serialVersionUID;
    final java.util.List<E> list;
  }
  static class SynchronizedSortedSet<E extends java.lang.Object> extends java.util.Collections.SynchronizedSet<E> implements java.util.SortedSet<E> {
      SynchronizedSortedSet(java.util.SortedSet<E> a_r_g_u_m_e_n_t_0){}
      SynchronizedSortedSet(java.util.SortedSet<E> a_r_g_u_m_e_n_t_0, java.lang.Object a_r_g_u_m_e_n_t_1){}
    public native E last() ;
    public native E first() ;
    public native java.util.SortedSet<E> subSet(E a_r_g_u_m_e_n_t_0, E a_r_g_u_m_e_n_t_1) ;
    public native java.util.SortedSet<E> headSet(E a_r_g_u_m_e_n_t_0) ;
    public native java.util.SortedSet<E> tailSet(E a_r_g_u_m_e_n_t_0) ;
    public native java.util.Comparator<? super E> comparator() ;
  }
  static class SynchronizedSet<E extends java.lang.Object> extends java.util.Collections.SynchronizedCollection<E> implements java.util.Set<E> {
      SynchronizedSet(java.util.Set<E> a_r_g_u_m_e_n_t_0){}
      SynchronizedSet(java.util.Set<E> a_r_g_u_m_e_n_t_0, java.lang.Object a_r_g_u_m_e_n_t_1){}
    public native int hashCode() ;
    public native boolean equals(java.lang.Object a_r_g_u_m_e_n_t_0) ;
  }
  static class SynchronizedCollection<E extends java.lang.Object> extends java.lang.Object implements java.util.Collection<E>, java.io.Serializable {
      SynchronizedCollection(java.util.Collection<E> a_r_g_u_m_e_n_t_0){}
      SynchronizedCollection(java.util.Collection<E> a_r_g_u_m_e_n_t_0, java.lang.Object a_r_g_u_m_e_n_t_1){}
    public native boolean add(E a_r_g_u_m_e_n_t_0) ;
    public native void clear() ;
    public native java.lang.String toString() ;
    public native boolean isEmpty() ;
    public native boolean contains(java.lang.Object a_r_g_u_m_e_n_t_0) ;
    public native boolean addAll(java.util.Collection<? extends E> a_r_g_u_m_e_n_t_0) ;
    public native int size() ;
    public native java.lang.Object[] toArray() ;
    public native <T extends java.lang.Object>T[] toArray(T[] a_r_g_u_m_e_n_t_0) ;
    public native java.util.Iterator<E> iterator() ;
    public native boolean remove(java.lang.Object a_r_g_u_m_e_n_t_0) ;
    public native boolean containsAll(java.util.Collection<? extends java.lang.Object> a_r_g_u_m_e_n_t_0) ;
    public native boolean removeAll(java.util.Collection<? extends java.lang.Object> a_r_g_u_m_e_n_t_0) ;
    public native boolean retainAll(java.util.Collection<? extends java.lang.Object> a_r_g_u_m_e_n_t_0) ;
    final java.util.Collection<E> c;
    final java.lang.Object mutex;
  }
  static class UnmodifiableSortedMap<K extends java.lang.Object, V extends java.lang.Object> extends java.util.Collections.UnmodifiableMap<K,V> implements java.util.SortedMap<K,V>, java.io.Serializable {
      UnmodifiableSortedMap(java.util.SortedMap<K,? extends V> a_r_g_u_m_e_n_t_0){}
    public native java.util.Comparator<? super K> comparator() ;
    public native java.util.SortedMap<K,V> subMap(K a_r_g_u_m_e_n_t_0, K a_r_g_u_m_e_n_t_1) ;
    public native java.util.SortedMap<K,V> headMap(K a_r_g_u_m_e_n_t_0) ;
    public native java.util.SortedMap<K,V> tailMap(K a_r_g_u_m_e_n_t_0) ;
    public native K firstKey() ;
    public native K lastKey() ;
  }
  private static class UnmodifiableMap<K extends java.lang.Object, V extends java.lang.Object> extends java.lang.Object implements java.util.Map<K,V>, java.io.Serializable {
      UnmodifiableMap(java.util.Map<? extends K,? extends V> a_r_g_u_m_e_n_t_0){}
    public native V get(java.lang.Object a_r_g_u_m_e_n_t_0) ;
    public native V put(K a_r_g_u_m_e_n_t_0, V a_r_g_u_m_e_n_t_1) ;
    public native int hashCode() ;
    public native boolean equals(java.lang.Object a_r_g_u_m_e_n_t_0) ;
    public native void clear() ;
    public native java.lang.String toString() ;
    public native boolean isEmpty() ;
    public native java.util.Collection<V> values() ;
    public native int size() ;
    public native java.util.Set<java.util.Map.Entry<K,V>> entrySet() ;
    public native void putAll(java.util.Map<? extends K,? extends V> a_r_g_u_m_e_n_t_0) ;
    public native V remove(java.lang.Object a_r_g_u_m_e_n_t_0) ;
    public native java.util.Set<K> keySet() ;
    public native boolean containsValue(java.lang.Object a_r_g_u_m_e_n_t_0) ;
    public native boolean containsKey(java.lang.Object a_r_g_u_m_e_n_t_0) ;
    static class UnmodifiableEntrySet<K extends java.lang.Object, V extends java.lang.Object> extends java.util.Collections.UnmodifiableSet<java.util.Map.Entry<K,V>> {
        UnmodifiableEntrySet(java.util.Set<? extends java.util.Map.Entry<? extends K,? extends V>> a_r_g_u_m_e_n_t_0){}
      public native boolean equals(java.lang.Object a_r_g_u_m_e_n_t_0) ;
      public native boolean contains(java.lang.Object a_r_g_u_m_e_n_t_0) ;
      public native java.lang.Object[] toArray() ;
      public native <T extends java.lang.Object>T[] toArray(T[] a_r_g_u_m_e_n_t_0) ;
      public native java.util.Iterator<java.util.Map.Entry<K,V>> iterator() ;
      public native boolean containsAll(java.util.Collection<? extends java.lang.Object> a_r_g_u_m_e_n_t_0) ;
      private static class UnmodifiableEntry<K extends java.lang.Object, V extends java.lang.Object> extends java.lang.Object implements java.util.Map.Entry<K,V> {
          UnmodifiableEntry(java.util.Map.Entry<? extends K,? extends V> a_r_g_u_m_e_n_t_0){}
        public native int hashCode() ;
        public native boolean equals(java.lang.Object a_r_g_u_m_e_n_t_0) ;
        public native java.lang.String toString() ;
        public native V getValue() ;
        public native K getKey() ;
        public native V setValue(V a_r_g_u_m_e_n_t_0) ;
      }
    }
  }
  static class UnmodifiableRandomAccessList<E extends java.lang.Object> extends java.util.Collections.UnmodifiableList<E> implements java.util.RandomAccess {
      UnmodifiableRandomAccessList(java.util.List<? extends E> a_r_g_u_m_e_n_t_0){}
    public native java.util.List<E> subList(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1) ;
  }
  static class UnmodifiableList<E extends java.lang.Object> extends java.util.Collections.UnmodifiableCollection<E> implements java.util.List<E> {
      UnmodifiableList(java.util.List<? extends E> a_r_g_u_m_e_n_t_0){}
    public native void add(int a_r_g_u_m_e_n_t_0, E a_r_g_u_m_e_n_t_1) ;
    public native E get(int a_r_g_u_m_e_n_t_0) ;
    public native int hashCode() ;
    public native boolean equals(java.lang.Object a_r_g_u_m_e_n_t_0) ;
    public native int indexOf(java.lang.Object a_r_g_u_m_e_n_t_0) ;
    public native int lastIndexOf(java.lang.Object a_r_g_u_m_e_n_t_0) ;
    public native boolean addAll(int a_r_g_u_m_e_n_t_0, java.util.Collection<? extends E> a_r_g_u_m_e_n_t_1) ;
    public native E set(int a_r_g_u_m_e_n_t_0, E a_r_g_u_m_e_n_t_1) ;
    public native E remove(int a_r_g_u_m_e_n_t_0) ;
    public native java.util.List<E> subList(int a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1) ;
    public native java.util.ListIterator<E> listIterator() ;
    public native java.util.ListIterator<E> listIterator(int a_r_g_u_m_e_n_t_0) ;
    static final long serialVersionUID;
    final java.util.List<? extends E> list;
  }
  static class UnmodifiableSortedSet<E extends java.lang.Object> extends java.util.Collections.UnmodifiableSet<E> implements java.util.SortedSet<E>, java.io.Serializable {
      UnmodifiableSortedSet(java.util.SortedSet<E> a_r_g_u_m_e_n_t_0){}
    public native E last() ;
    public native E first() ;
    public native java.util.SortedSet<E> subSet(E a_r_g_u_m_e_n_t_0, E a_r_g_u_m_e_n_t_1) ;
    public native java.util.SortedSet<E> headSet(E a_r_g_u_m_e_n_t_0) ;
    public native java.util.SortedSet<E> tailSet(E a_r_g_u_m_e_n_t_0) ;
    public native java.util.Comparator<? super E> comparator() ;
  }
  static class UnmodifiableSet<E extends java.lang.Object> extends java.util.Collections.UnmodifiableCollection<E> implements java.util.Set<E>, java.io.Serializable {
      UnmodifiableSet(java.util.Set<? extends E> a_r_g_u_m_e_n_t_0){}
    public native int hashCode() ;
    public native boolean equals(java.lang.Object a_r_g_u_m_e_n_t_0) ;
  }
  static class UnmodifiableCollection<E extends java.lang.Object> extends java.lang.Object implements java.util.Collection<E>, java.io.Serializable {
      UnmodifiableCollection(java.util.Collection<? extends E> a_r_g_u_m_e_n_t_0){}
    public native boolean add(E a_r_g_u_m_e_n_t_0) ;
    public native void clear() ;
    public native java.lang.String toString() ;
    public native boolean isEmpty() ;
    public native boolean contains(java.lang.Object a_r_g_u_m_e_n_t_0) ;
    public native boolean addAll(java.util.Collection<? extends E> a_r_g_u_m_e_n_t_0) ;
    public native int size() ;
    public native <T extends java.lang.Object>T[] toArray(T[] a_r_g_u_m_e_n_t_0) ;
    public native java.lang.Object[] toArray() ;
    public native java.util.Iterator<E> iterator() ;
    public native boolean remove(java.lang.Object a_r_g_u_m_e_n_t_0) ;
    public native boolean containsAll(java.util.Collection<? extends java.lang.Object> a_r_g_u_m_e_n_t_0) ;
    public native boolean removeAll(java.util.Collection<? extends java.lang.Object> a_r_g_u_m_e_n_t_0) ;
    public native boolean retainAll(java.util.Collection<? extends java.lang.Object> a_r_g_u_m_e_n_t_0) ;
    final java.util.Collection<? extends E> c;
  }
  private static abstract interface SelfComparable extends java.lang.Comparable<java.util.Collections.SelfComparable> {
  }
}