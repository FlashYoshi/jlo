package java.util;
public abstract interface NavigableMap<K extends java.lang.Object, V extends java.lang.Object> extends java.util.SortedMap<K,V> {
  public abstract java.util.Map.Entry<K,V> lowerEntry(K a_r_g_u_m_e_n_t_0) ;
  public abstract K lowerKey(K a_r_g_u_m_e_n_t_0) ;
  public abstract java.util.Map.Entry<K,V> floorEntry(K a_r_g_u_m_e_n_t_0) ;
  public abstract K floorKey(K a_r_g_u_m_e_n_t_0) ;
  public abstract java.util.Map.Entry<K,V> ceilingEntry(K a_r_g_u_m_e_n_t_0) ;
  public abstract K ceilingKey(K a_r_g_u_m_e_n_t_0) ;
  public abstract java.util.Map.Entry<K,V> higherEntry(K a_r_g_u_m_e_n_t_0) ;
  public abstract K higherKey(K a_r_g_u_m_e_n_t_0) ;
  public abstract java.util.Map.Entry<K,V> firstEntry() ;
  public abstract java.util.Map.Entry<K,V> lastEntry() ;
  public abstract java.util.Map.Entry<K,V> pollFirstEntry() ;
  public abstract java.util.Map.Entry<K,V> pollLastEntry() ;
  public abstract java.util.NavigableMap<K,V> descendingMap() ;
  public abstract java.util.NavigableSet<K> navigableKeySet() ;
  public abstract java.util.NavigableSet<K> descendingKeySet() ;
  public abstract java.util.NavigableMap<K,V> subMap(K a_r_g_u_m_e_n_t_0, boolean a_r_g_u_m_e_n_t_1, K a_r_g_u_m_e_n_t_2, boolean a_r_g_u_m_e_n_t_3) ;
  public abstract java.util.SortedMap<K,V> subMap(K a_r_g_u_m_e_n_t_0, K a_r_g_u_m_e_n_t_1) ;
  public abstract java.util.NavigableMap<K,V> headMap(K a_r_g_u_m_e_n_t_0, boolean a_r_g_u_m_e_n_t_1) ;
  public abstract java.util.SortedMap<K,V> headMap(K a_r_g_u_m_e_n_t_0) ;
  public abstract java.util.NavigableMap<K,V> tailMap(K a_r_g_u_m_e_n_t_0, boolean a_r_g_u_m_e_n_t_1) ;
  public abstract java.util.SortedMap<K,V> tailMap(K a_r_g_u_m_e_n_t_0) ;
}