package java.util;
public class TreeSet<E extends java.lang.Object> extends java.util.AbstractSet<E> implements java.util.NavigableSet<E>, java.lang.Cloneable, java.io.Serializable {
    TreeSet(java.util.NavigableMap<E,java.lang.Object> a_r_g_u_m_e_n_t_0){}
   public  TreeSet(){}
   public  TreeSet(java.util.Comparator<? super E> a_r_g_u_m_e_n_t_0){}
   public  TreeSet(java.util.Collection<? extends E> a_r_g_u_m_e_n_t_0){}
   public  TreeSet(java.util.SortedSet<E> a_r_g_u_m_e_n_t_0){}
  public native boolean add(E a_r_g_u_m_e_n_t_0) ;
  public native java.lang.Object clone() ;
  public native void clear() ;
  public native boolean isEmpty() ;
  public native boolean contains(java.lang.Object a_r_g_u_m_e_n_t_0) ;
  public native boolean addAll(java.util.Collection<? extends E> a_r_g_u_m_e_n_t_0) ;
  public native int size() ;
  public native java.util.Iterator<E> iterator() ;
  public native boolean remove(java.lang.Object a_r_g_u_m_e_n_t_0) ;
  public native E floor(E a_r_g_u_m_e_n_t_0) ;
  public native E pollFirst() ;
  public native E pollLast() ;
  public native java.util.Iterator<E> descendingIterator() ;
  public native E last() ;
  public native E first() ;
  public native E lower(E a_r_g_u_m_e_n_t_0) ;
  public native E ceiling(E a_r_g_u_m_e_n_t_0) ;
  public native E higher(E a_r_g_u_m_e_n_t_0) ;
  public native java.util.NavigableSet<E> descendingSet() ;
  public native java.util.NavigableSet<E> subSet(E a_r_g_u_m_e_n_t_0, boolean a_r_g_u_m_e_n_t_1, E a_r_g_u_m_e_n_t_2, boolean a_r_g_u_m_e_n_t_3) ;
  public native java.util.SortedSet<E> subSet(E a_r_g_u_m_e_n_t_0, E a_r_g_u_m_e_n_t_1) ;
  public native java.util.NavigableSet<E> headSet(E a_r_g_u_m_e_n_t_0, boolean a_r_g_u_m_e_n_t_1) ;
  public native java.util.SortedSet<E> headSet(E a_r_g_u_m_e_n_t_0) ;
  public native java.util.NavigableSet<E> tailSet(E a_r_g_u_m_e_n_t_0, boolean a_r_g_u_m_e_n_t_1) ;
  public native java.util.SortedSet<E> tailSet(E a_r_g_u_m_e_n_t_0) ;
  public native java.util.Comparator<? super E> comparator() ;
}