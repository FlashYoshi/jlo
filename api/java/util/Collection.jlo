package java.util;
public abstract interface Collection<E extends java.lang.Object> extends java.lang.Iterable<E> {
  public abstract boolean add(E a_r_g_u_m_e_n_t_0) ;
  public abstract int hashCode() ;
  public abstract boolean equals(java.lang.Object a_r_g_u_m_e_n_t_0) ;
  public abstract void clear() ;
  public abstract boolean isEmpty() ;
  public abstract boolean contains(java.lang.Object a_r_g_u_m_e_n_t_0) ;
  public abstract boolean addAll(java.util.Collection<? extends E> a_r_g_u_m_e_n_t_0) ;
  public abstract int size() ;
  public abstract <T extends java.lang.Object>T[] toArray(T[] a_r_g_u_m_e_n_t_0) ;
  public abstract java.lang.Object[] toArray() ;
  public abstract java.util.Iterator<E> iterator() ;
  public abstract boolean remove(java.lang.Object a_r_g_u_m_e_n_t_0) ;
  public abstract boolean containsAll(java.util.Collection<? extends java.lang.Object> a_r_g_u_m_e_n_t_0) ;
  public abstract boolean removeAll(java.util.Collection<? extends java.lang.Object> a_r_g_u_m_e_n_t_0) ;
  public abstract boolean retainAll(java.util.Collection<? extends java.lang.Object> a_r_g_u_m_e_n_t_0) ;
}