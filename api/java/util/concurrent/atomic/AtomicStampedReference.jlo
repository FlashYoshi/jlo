package java.util.concurrent.atomic;
public class AtomicStampedReference<V extends java.lang.Object> extends java.lang.Object {
   public  AtomicStampedReference(V a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1){}
  public native V get(int[] a_r_g_u_m_e_n_t_0) ;
  public native void set(V a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1) ;
  public native boolean compareAndSet(V a_r_g_u_m_e_n_t_0, V a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2, int a_r_g_u_m_e_n_t_3) ;
  public native boolean weakCompareAndSet(V a_r_g_u_m_e_n_t_0, V a_r_g_u_m_e_n_t_1, int a_r_g_u_m_e_n_t_2, int a_r_g_u_m_e_n_t_3) ;
  public native V getReference() ;
  public native int getStamp() ;
  public native boolean attemptStamp(V a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1) ;
  private static class ReferenceIntegerPair<T extends java.lang.Object> extends java.lang.Object {
      ReferenceIntegerPair(T a_r_g_u_m_e_n_t_0, int a_r_g_u_m_e_n_t_1){}
  }
}